---
description: This task auto-update the configuration documentation when making changes to configuration related code-blocks
globs: *.jl, *.md
alwaysApply: false
---

When changing the configuration related code blocks, always update [configuration.md](mdc:docs/src/configuration.md) file with the relevant changes and keep it up to date.

The configuration related code blocks include:
- Using, reading or creating new environment variables, .e.g
```julia
RXINFER_SERVER_LOGS_LOCATION() = get(ENV, "RXINFER_SERVER_LOGS_LOCATION", ".server-logs")
```
Make sure to create a _function_ for retrieving this, not `const` blocks because const will be precompiled on package load.

All environment variables/constants must have a concise doc-string and must be included in the @configuration.md in the following pattern 

```md
# [Log location title](mdc:@id log-configuration)

Text about server logs location

```@docs
RxInferServer.RXINFER_SERVER_LOGS_LOCATION
```

# [Another constant](mdc:@id another-constant-configuration)

Text about another constant 

```@docs
RxInferServer.RXINFER_SERVER_ANOTHER_CONSTANT
RxInferServer.RXINFER_SERVER_MAYBE_ANOTHER_CONSTANT_RELATED_TO_THIS_BLOCK
```
```

All configurable environment variables has to have `RXINFER_SERVER_` prefix at the beginning.


- Using and modifying preferences variables, e.g.
```julia
const HOT_RELOAD_PREF_KEY = "enable_hot_reload"

function set_hot_reload(enable::Bool)
    @set_preferences!(HOT_RELOAD_PREF_KEY => enable)
    @info "Hot reloading set to: $enable. This setting will take effect on server restart."
    return enable
end
```

Preferences related variables must have `set_*` method to change them with concise doc-strings and must be included in the documentation too

Keep environment variables and preferences separate.

Reference configuration documentation with [Log configuration](mdc:@id log-configuration) where it might be relevant



