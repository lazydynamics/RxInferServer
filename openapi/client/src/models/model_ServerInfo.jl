# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ServerInfo

    ServerInfo(;
        rxinfer_version=nothing,
        server_version=nothing,
        server_edition=nothing,
        julia_version=nothing,
        api_version="v1",
    )

    - rxinfer_version::String : The version of RxInfer that the server is using, returns unknown if the version is unknown or hidden
    - server_version::String : The version of the RxInferServer, returns unknown if the version is unknown or hidden
    - server_edition::String : The edition of the RxInferServer, as set in RXINFER_EDITION environment variable
    - julia_version::String : The version of Julia as presented in VERSION
    - api_version::String : The version of the API being used
"""
Base.@kwdef mutable struct ServerInfo <: OpenAPI.APIModel
    rxinfer_version::Union{Nothing, String} = nothing
    server_version::Union{Nothing, String} = nothing
    server_edition::Union{Nothing, String} = nothing
    julia_version::Union{Nothing, String} = nothing
    api_version::Union{Nothing, String} = "v1"

    function ServerInfo(rxinfer_version, server_version, server_edition, julia_version, api_version, )
        OpenAPI.validate_property(ServerInfo, Symbol("rxinfer_version"), rxinfer_version)
        OpenAPI.validate_property(ServerInfo, Symbol("server_version"), server_version)
        OpenAPI.validate_property(ServerInfo, Symbol("server_edition"), server_edition)
        OpenAPI.validate_property(ServerInfo, Symbol("julia_version"), julia_version)
        OpenAPI.validate_property(ServerInfo, Symbol("api_version"), api_version)
        return new(rxinfer_version, server_version, server_edition, julia_version, api_version, )
    end
end # type ServerInfo

const _property_types_ServerInfo = Dict{Symbol,String}(Symbol("rxinfer_version")=>"String", Symbol("server_version")=>"String", Symbol("server_edition")=>"String", Symbol("julia_version")=>"String", Symbol("api_version")=>"String", )
OpenAPI.property_type(::Type{ ServerInfo }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ServerInfo[name]))}

function check_required(o::ServerInfo)
    o.rxinfer_version === nothing && (return false)
    o.server_version === nothing && (return false)
    o.server_edition === nothing && (return false)
    o.julia_version === nothing && (return false)
    o.api_version === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ServerInfo }, name::Symbol, val)





end
