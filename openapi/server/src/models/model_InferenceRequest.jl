# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""InferenceRequest

    InferenceRequest(;
        data=nothing,
        options=nothing,
    )

    - data::Dict{String, Any}
    - options::Dict{String, Any}
"""
Base.@kwdef mutable struct InferenceRequest <: OpenAPI.APIModel
    data::Union{Nothing, Dict{String, Any}} = nothing
    options::Union{Nothing, Dict{String, Any}} = nothing

    function InferenceRequest(data, options, )
        OpenAPI.validate_property(InferenceRequest, Symbol("data"), data)
        OpenAPI.validate_property(InferenceRequest, Symbol("options"), options)
        return new(data, options, )
    end
end # type InferenceRequest

const _property_types_InferenceRequest = Dict{Symbol,String}(Symbol("data")=>"Dict{String, Any}", Symbol("options")=>"Dict{String, Any}", )
OpenAPI.property_type(::Type{ InferenceRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_InferenceRequest[name]))}

function check_required(o::InferenceRequest)
    o.data === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ InferenceRequest }, name::Symbol, val)


end
