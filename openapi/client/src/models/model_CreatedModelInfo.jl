# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CreatedModelInfo

    CreatedModelInfo(;
        model_id=nothing,
        model_name=nothing,
        created_at=nothing,
        description=nothing,
        arguments=nothing,
    )

    - model_id::String : Unique identifier for the created model instance
    - model_name::String : Name of the model (including version identifier if applicable, e.g. \&quot;BetaBernoulli-v1\&quot;)
    - created_at::ZonedDateTime : Timestamp of when the model was created
    - description::String : Description of the created model instance
    - arguments::Dict{String, Any} : Model-specific configuration arguments
"""
Base.@kwdef mutable struct CreatedModelInfo <: OpenAPI.APIModel
    model_id::Union{Nothing, String} = nothing
    model_name::Union{Nothing, String} = nothing
    created_at::Union{Nothing, ZonedDateTime} = nothing
    description::Union{Nothing, String} = nothing
    arguments::Union{Nothing, Dict{String, Any}} = nothing

    function CreatedModelInfo(model_id, model_name, created_at, description, arguments, )
        OpenAPI.validate_property(CreatedModelInfo, Symbol("model_id"), model_id)
        OpenAPI.validate_property(CreatedModelInfo, Symbol("model_name"), model_name)
        OpenAPI.validate_property(CreatedModelInfo, Symbol("created_at"), created_at)
        OpenAPI.validate_property(CreatedModelInfo, Symbol("description"), description)
        OpenAPI.validate_property(CreatedModelInfo, Symbol("arguments"), arguments)
        return new(model_id, model_name, created_at, description, arguments, )
    end
end # type CreatedModelInfo

const _property_types_CreatedModelInfo = Dict{Symbol,String}(Symbol("model_id")=>"String", Symbol("model_name")=>"String", Symbol("created_at")=>"ZonedDateTime", Symbol("description")=>"String", Symbol("arguments")=>"Dict{String, Any}", )
OpenAPI.property_type(::Type{ CreatedModelInfo }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreatedModelInfo[name]))}

function check_required(o::CreatedModelInfo)
    o.model_id === nothing && (return false)
    o.model_name === nothing && (return false)
    o.created_at === nothing && (return false)
    o.description === nothing && (return false)
    o.arguments === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ CreatedModelInfo }, name::Symbol, val)

    if name === Symbol("model_id")
        OpenAPI.validate_param(name, "CreatedModelInfo", :format, val, "uuid")
    end


    if name === Symbol("created_at")
        OpenAPI.validate_param(name, "CreatedModelInfo", :format, val, "date-time")
    end


end
