# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct ModelsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `ModelsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ ModelsApi }) = "http://localhost:8000/v1"

const _returntypes_get_models_ModelsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ModelList,
    Regex("^" * replace("401", "x"=>".") * "\$") => ErrorResponse,
)

function _oacinternal_get_models(_api::ModelsApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_models_ModelsApi, "/models", ["ApiKeyAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get models

Retrieve the list of available models. Note that some access tokens might not have access to all models.

Params:

Return: ModelList, OpenAPI.Clients.ApiResponse
"""
function get_models(_api::ModelsApi; _mediaType=nothing)
    _ctx = _oacinternal_get_models(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_models(_api::ModelsApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_get_models(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export get_models
