# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UnauthorizedError

    UnauthorizedError(;
        error=nothing,
        message=nothing,
    )

    - error::String : Error type, always \&quot;Unauthorized\&quot; for this error
    - message::String : Detailed message explaining why authentication failed
"""
Base.@kwdef mutable struct UnauthorizedError <: OpenAPI.APIModel
    error::Union{Nothing, String} = nothing
    message::Union{Nothing, String} = nothing

    function UnauthorizedError(error, message, )
        OpenAPI.validate_property(UnauthorizedError, Symbol("error"), error)
        OpenAPI.validate_property(UnauthorizedError, Symbol("message"), message)
        return new(error, message, )
    end
end # type UnauthorizedError

const _property_types_UnauthorizedError = Dict{Symbol,String}(Symbol("error")=>"String", Symbol("message")=>"String", )
OpenAPI.property_type(::Type{ UnauthorizedError }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UnauthorizedError[name]))}

function check_required(o::UnauthorizedError)
    o.error === nothing && (return false)
    o.message === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UnauthorizedError }, name::Symbol, val)

    if name === Symbol("error")
        OpenAPI.validate_param(name, "UnauthorizedError", :enum, val, ["Unauthorized"])
    end


end
