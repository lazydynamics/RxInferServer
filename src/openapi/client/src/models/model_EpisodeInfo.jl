# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""EpisodeInfo

    EpisodeInfo(;
        instance_id=nothing,
        episode_name=nothing,
        created_at=nothing,
        events=nothing,
    )

    - instance_id::String : ID of the model instance this episode belongs to
    - episode_name::String : Name of the episode
    - created_at::ZonedDateTime : Timestamp of when the episode was created
    - events::Vector{Dict{String, Any}} : List of events that have occurred in the episode
"""
Base.@kwdef mutable struct EpisodeInfo <: OpenAPI.APIModel
    instance_id::Union{Nothing, String} = nothing
    episode_name::Union{Nothing, String} = nothing
    created_at::Union{Nothing, ZonedDateTime} = nothing
    events::Union{Nothing, Vector{Dict{String, Any}}} = nothing

    function EpisodeInfo(instance_id, episode_name, created_at, events, )
        o = new(instance_id, episode_name, created_at, events, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type EpisodeInfo

const _property_types_EpisodeInfo = Dict{Symbol,String}(Symbol("instance_id")=>"String", Symbol("episode_name")=>"String", Symbol("created_at")=>"ZonedDateTime", Symbol("events")=>"Vector{Dict{String, Any}}", )
OpenAPI.property_type(::Type{ EpisodeInfo }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_EpisodeInfo[name]))}

function OpenAPI.check_required(o::EpisodeInfo)
    o.instance_id === nothing && (return false)
    o.episode_name === nothing && (return false)
    o.created_at === nothing && (return false)
    o.events === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::EpisodeInfo)
    OpenAPI.validate_property(EpisodeInfo, Symbol("instance_id"), o.instance_id)
    OpenAPI.validate_property(EpisodeInfo, Symbol("episode_name"), o.episode_name)
    OpenAPI.validate_property(EpisodeInfo, Symbol("created_at"), o.created_at)
    OpenAPI.validate_property(EpisodeInfo, Symbol("events"), o.events)
end

function OpenAPI.validate_property(::Type{ EpisodeInfo }, name::Symbol, val)

    if name === Symbol("instance_id")
        OpenAPI.validate_param(name, "EpisodeInfo", :format, val, "uuid")
    end


    if name === Symbol("created_at")
        OpenAPI.validate_param(name, "EpisodeInfo", :format, val, "date-time")
    end

end
