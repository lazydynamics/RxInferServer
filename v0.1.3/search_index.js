var documenterSearchIndex = {"docs":
[{"location":"api/learning/#learning-api","page":"Learning parameters of a model","title":"Learning","text":"","category":"section"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"This guide covers the Learning API, which provides endpoints for training and inference with RxInfer models. You'll learn how to create, manage, and interact episodes as well as perform a simple learning task.","category":"page"},{"location":"api/learning/#Prerequisites","page":"Learning parameters of a model","title":"Prerequisites","text":"","category":"section"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"Before using the Models API, you need a valid authentication token. If you haven't obtained one yet, please refer to the Authentication guide. The examples below assume you have already set up authentication:","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"import RxInferClientOpenAPI\nimport RxInferClientOpenAPI.OpenAPI.Clients: Client\nimport RxInferClientOpenAPI: AuthenticationApi, token_generate, basepath\nusing Test\n\napi          = AuthenticationApi(Client(basepath(AuthenticationApi)))\nresponse, _  = token_generate(api)\n@test !isnothing(response)\ntoken = response.token\n\nusing RxInfer, StableRNGs, LinearAlgebra, Plots\n\nfunction generate_rotate_ssm_data(n, k; split = 0.8, rng = StableRNG(42))\n    θ = π / k\n    A = [cos(θ) -sin(θ); sin(θ) cos(θ)]\n    Q = diageye(2)\n    P = diageye(2)\n    \n    x_prev = ones(2)\n    x = Vector{Vector{Float64}}(undef, n)\n    y = Vector{Vector{Float64}}(undef, n)\n\n    for i in 1:n\n        x[i] = rand(rng, MvNormal(A * x_prev, Q))\n        y[i] = rand(rng, MvNormal(x[i], P))\n        x_prev = x[i]\n    end\n\n    x_train = x[1:floor(Int, n * split)]\n    y_train = y[1:floor(Int, n * split)]\n\n    x_test = x[floor(Int, n * split) + 1:end]\n    y_test = y[floor(Int, n * split) + 1:end]\n\n    return x_train, y_train, x_test, y_test\nend\n\nfunction plot_dimension(x_train, y_train, x_test, y_test, dimension)\n    train_indices = 1:length(y_train)\n    test_indices = (length(y_train) + 1):(length(y_train) + length(y_test))\n    p = plot(train_indices, getindex.(x_train, dimension), label = \"states (training set)\", lw = 2)\n    p = scatter!(p, train_indices, getindex.(y_train, dimension), label = \"observations (training set)\", ms = 2)\n    p = plot!(p, test_indices, getindex.(x_test, dimension), label = \"states (test set)\", lw = 2)\n    p = scatter!(p, test_indices, getindex.(y_test, dimension), label = \"observations (test set)\", ms = 2)\n    return p\nend\n\nfunction load_dataset()\n    x_train, y_train, x_test, y_test = generate_rotate_ssm_data(200, 8)\n    return (; x_train, y_train, x_test, y_test)\nend\n\nfunction plot_dataset(dataset)\n    pd1 = plot_dimension(dataset.x_train, dataset.y_train, dataset.x_test, dataset.y_test, 1)\n    pd2 = plot_dimension(dataset.x_train, dataset.y_train, dataset.x_test, dataset.y_test, 2)\n    return plot(pd1, pd2, layout = (2, 1))\nend","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"import RxInferClientOpenAPI.OpenAPI.Clients: Client\nimport RxInferClientOpenAPI: ModelsApi\n\nclient = Client(basepath(ModelsApi); headers = Dict(\n    \"Authorization\" => \"Bearer $token\"\n))\n\napi = ModelsApi(client)\nnothing #hide","category":"page"},{"location":"api/learning/#Historical-Dataset","page":"Learning parameters of a model","title":"Historical Dataset","text":"","category":"section"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"For this demonstration, we'll work with a synthetic dataset that represents a two-dimensional dynamical system. The data is generated by rotating a two dimensional vector around the origin, creating a circular motion pattern. The dataset consists of:","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"Hidden states: The true positions in 2D space\nObservations: Noisy measurements of these positions\nTraining and test sets: The data is split to evaluate the model's predictive performance","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"The visualization below shows both the true states and their corresponding noisy observations for both training and test periods.","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"dataset = load_dataset()\nplot_dataset(dataset) #hide","category":"page"},{"location":"api/learning/#Creating-a-Model-Instance","page":"Learning parameters of a model","title":"Creating a Model Instance","text":"","category":"section"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"To analyze this dataset, we'll use the LinearStateSpaceModel-v1, which is designed to learn and predict the dynamics of linear state-space systems.  This model is particularly suitable for our rotating signal as it can capture the underlying circular motion pattern.","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"import RxInferClientOpenAPI: create_model_instance, CreateModelInstanceRequest\n\nrequest = CreateModelInstanceRequest(\n    model_name = \"LinearStateSpaceModel-v1\",\n    description = \"Example model for demonstration\",\n    arguments = Dict(\"state_dimension\" => 2, \"horizon\" => length(dataset.x_test))\n)\n\nresponse, _ = create_model_instance(api, request)\n@test !isnothing(response) #hide\ninstance_id = response.instance_id","category":"page"},{"location":"api/learning/#learning-api-episodes","page":"Learning parameters of a model","title":"Working with Episodes","text":"","category":"section"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"Episodes serve as containers for organizing training data and metadata in your model. They provide a structured way to:","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"Manage different episodes of interacting with the environment\nStore sequential observations and arbitrary metadata attached to each event\nTrack experiments and perform learning\nOrganize model validation","category":"page"},{"location":"api/learning/#Listing-Episodes","page":"Learning parameters of a model","title":"Listing Episodes","text":"","category":"section"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"To view all episodes associated with a model instance, use the get_episodes endpoint. This provides an overview of all available training sessions and their current status.","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"note: Note\nEach model automatically creates a default episode when it is created.","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"import RxInferClientOpenAPI: get_episodes\n\nresponse, _ = get_episodes(api, instance_id)\n@test !isnothing(response) #hide\nresponse","category":"page"},{"location":"api/learning/#Episode-Details","page":"Learning parameters of a model","title":"Episode Details","text":"","category":"section"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"For detailed information about a specific episode, including its events and metadata, use the get_episode_info endpoint. This is particularly useful when analyzing training history or debugging model behavior.","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"import RxInferClientOpenAPI: get_episode_info\n\nresponse, _ = get_episode_info(api, instance_id, \"default\")\n@test !isnothing(response) #hide\nresponse","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"As we can see, the default episode has no events since we haven't loaded any data into it yet nor run any inference.","category":"page"},{"location":"api/learning/#Creating-New-Episodes","page":"Learning parameters of a model","title":"Creating New Episodes","text":"","category":"section"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"When you want to start a new training session or experiment, create a new episode using the create_episode endpoint. ","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"import RxInferClientOpenAPI: create_episode, CreateEpisodeRequest\n\ncreate_episode_request = CreateEpisodeRequest(name = \"experiment-1\")\n\nresponse, _ = create_episode(api, instance_id, create_episode_request)\n@test !isnothing(response) #hide\nresponse","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"note: Current Episode\nCreating a new episode automatically sets it as the current active episode. You can verify this by checking the model instance details:import RxInferClientOpenAPI: get_model_instance\nresponse, _ = get_model_instance(api, instance_id)\n@test !isnothing(response) #hide\n@test response.current_episode == \"experiment-1\" #hide\nresponse.current_episode","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"To confirm the new episode has been added to the list:","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"import RxInferClientOpenAPI: get_episodes\n\nresponse, _ = get_episodes(api, instance_id)\n@test !isnothing(response) #hide\n@test length(response) == 2 #hide\n@test \"default\" in map(episode -> episode.episode_name, response) #hide\n@test \"experiment-1\" in map(episode -> episode.episode_name, response) #hide\nresponse","category":"page"},{"location":"api/learning/#Loading-External-Data-into-an-Episode","page":"Learning parameters of a model","title":"Loading External Data into an Episode","text":"","category":"section"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"The attach_events_to_episode endpoint allows you to load historical data into episodes for training or analysis. This is essential when you have pre-collected data that you want to use for model training or evaluation.","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"Each event in your dataset should include:","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"data: The actual observation or measurement data (required)\ntimestamp: The time when the event occurred (optional, defaults to current time)\nmetadata: Additional contextual information about the event (optional)","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"import Dates\nimport RxInferClientOpenAPI: attach_events_to_episode, AttachEventsToEpisodeRequest\n\n# Create events with timestamps and data\nevents = map(dataset.y_train) do y\n    return Dict(\"data\" => Dict(\"observation\" => y))\nend\n\n# Create the request to attach events\nrequest = AttachEventsToEpisodeRequest(events = events)\n\n# Attach events to an episode\nresponse, _ = attach_events_to_episode(api, instance_id, \"experiment-1\", request)\n@test !isnothing(response) #hide\nresponse","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"To verify that your data was loaded correctly:","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"import RxInferClientOpenAPI: get_episode_info\n\nresponse, _ = get_episode_info(api, instance_id, \"experiment-1\")\n@test !isnothing(response) #hide\nresponse.events[1:5] # show only the first 5 events to avoid overwhelming the console","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"note: Loading External Data\nEvents can be loaded into any episode, not just the default one\nUse wipe_episode to clear an episode's data and start fresh\nEvents persist across episode switches\nDeleting a model instance removes all associated episodes and their data","category":"page"},{"location":"api/learning/#Learn-the-Parameters-of-the-Model","page":"Learning parameters of a model","title":"Learn the Parameters of the Model","text":"","category":"section"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"To learn the parameters of the model on the loaded data, create a learning request that specifies which episodes to use for training:","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"import RxInferClientOpenAPI: LearnRequest, run_learning\n\nlearn_request = LearnRequest(\n    episodes = [\"experiment-1\"] # learn from the \"experiment-1\" episode explicitly\n)\nlearn_response, _ = run_learning(api, instance_id, learn_request)\n@test !isnothing(learn_response) #hide\nlearn_response","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"The learning process returns a LearnResponse containing the model's learned parameters. The model's state has been updated automatically with the new parameters. We can verify this by fetching the current model parameters:","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"import RxInferClientOpenAPI: get_model_instance_parameters\n\nresponse, _ = get_model_instance_parameters(api, instance_id)\n@test !isnothing(response) #hide\nresponse","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"After the learning process is complete, we can use the model to make predictions on new data by calling the inference endpoint. Here we also chose the desired output format for the inference response. Read more about preferences in the Request Preferences section.","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"import RxInferClientOpenAPI.OpenAPI.Clients: set_header\n\nset_header(client, \"Prefer\", \"distributions_repr=data,distributions_data=mean_cov,mdarray_data=diagonal,mdarray_repr=data\")\nnothing #hide","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"That ensures that the inference response will be in the desired format suitable for plotting.","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"import RxInferClientOpenAPI: InferRequest, run_inference\n\ninference_request = InferRequest(\n    data = Dict(\"observation\" => dataset.y_train[end], \"current_state\" => dataset.x_train[end])\n)\ninference_response, _ = run_inference(api, instance_id, inference_request)\n@test !isnothing(inference_response) #hide\nnothing #hide","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"Here are for example the first 5 estimated states:","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"states = inference_response.results[\"states\"] #hide\nstates_mean = map(state -> state[\"mean\"], states) #hide\nstates_cov = map(state -> state[\"cov\"], states) #hide\nstates[1:5]","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"Let's plot all the results:","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"pf1 = plot(getindex.(dataset.x_test, 1), label = \"true states\", lw = 2, legend = :bottomleft) #hide\npf1 = scatter!(pf1, getindex.(dataset.y_test, 1), label = \"observations\", lw = 2) #hide\npf1 = plot!(pf1, getindex.(states_mean, 1), ribbon = getindex.(states_cov, 1), label = \"predicted states\", lw = 2) #hide\npf2 = plot(getindex.(dataset.x_test, 2), label = \"true states\", lw = 2, legend = :bottomleft) #hide\npf2 = scatter!(pf2, getindex.(dataset.y_test, 2), label = \"observations\", lw = 2) #hide\npf2 = plot!(pf2, getindex.(states_mean, 2), ribbon = getindex.(states_cov, 2), label = \"predicted states\", lw = 2) #hide\nplot(pf1, pf2, layout = (2, 1)) #hide","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"The plot above demonstrates the model's predictive performance. The predicted states closely follow the true hidden states, with some deviation due to the inherent stochastic nature of the system.","category":"page"},{"location":"api/learning/#Deleting-Episodes","page":"Learning parameters of a model","title":"Deleting Episodes","text":"","category":"section"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"When an episode is no longer needed, you can remove it using the delete endpoint. ","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"import RxInferClientOpenAPI: delete_episode\n\nresponse, _ = delete_episode(api, instance_id, \"experiment-1\")\n@test !isnothing(response) #hide\nresponse","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"Deleting the current episode automatically switches to the default episode.","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"response, _ = get_model_instance(api, instance_id)\n@test !isnothing(response) #hide\nresponse.current_episode","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"note: Deleting Episode After Learning\nIf you delete an episode after learning, the model state will not be affected. The model will continue to use the learned parameters.","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"warning: Deleting the Default Episode\nThe default episode cannot be deleted. While you can clear the default episode's data, the episode itself must remain","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"# Attempting to delete the default episode\nresponse, _ = delete_episode(api, instance_id, \"default\")\n@test !isnothing(response) #hide\n@test response.error == \"Bad Request\" #hide\nresponse","category":"page"},{"location":"api/learning/#Wiping-Data-from-an-Episode","page":"Learning parameters of a model","title":"Wiping Data from an Episode","text":"","category":"section"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"To clear the data from an episode, use the wipe_episode endpoint. This will remove all events from the episode, effectively resetting it to an empty state.","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"import RxInferClientOpenAPI: wipe_episode\n\n# Clearing the default episode's data\nresponse, _ = get_episode_info(api, instance_id, \"default\")\n@test !isnothing(response) #hide\n@test !isempty(response.events) #hide\nresponse","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"# Clearing the default episode's data\nresponse, _ = wipe_episode(api, instance_id, \"default\")\n@test !isnothing(response) #hide\nresponse","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"response, _ = get_episode_info(api, instance_id, \"default\")\n@test !isnothing(response) #hide\n@test isempty(response.events) #hide\nresponse","category":"page"},{"location":"api/learning/","page":"Learning parameters of a model","title":"Learning parameters of a model","text":"","category":"page"},{"location":"openapi/Models/NotFoundResponse/","page":"NotFoundResponse","title":"NotFoundResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/NotFoundResponse/#NotFoundResponse","page":"NotFoundResponse","title":"NotFoundResponse","text":"","category":"section"},{"location":"openapi/Models/NotFoundResponse/#Properties","page":"NotFoundResponse","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/NotFoundResponse/","page":"NotFoundResponse","title":"NotFoundResponse","text":"Name Type Description Notes\nerror String Error type, always \\&quot;Not Found\\&quot; for this error [default to null]\nmessage String Detailed message explaining why the resource was not found [default to null]","category":"page"},{"location":"openapi/Models/NotFoundResponse/","page":"NotFoundResponse","title":"NotFoundResponse","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/NotFoundResponse/","page":"NotFoundResponse","title":"NotFoundResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/NotFoundResponse/","page":"NotFoundResponse","title":"NotFoundResponse","text":"","category":"page"},{"location":"api/server-info/#server-info","page":"Server details and version","title":"Server details and version","text":"","category":"section"},{"location":"api/server-info/","page":"Server details and version","title":"Server details and version","text":"The server exposes a few endpoints for getting information about the server or checking if the server is running.","category":"page"},{"location":"api/server-info/#Prerequisites","page":"Server details and version","title":"Prerequisites","text":"","category":"section"},{"location":"api/server-info/","page":"Server details and version","title":"Server details and version","text":"Before using the Models API, you need a valid authentication token. If you haven't obtained one yet, please refer to the Authentication guide. The examples below assume you have already set up authentication:","category":"page"},{"location":"api/server-info/","page":"Server details and version","title":"Server details and version","text":"import RxInferClientOpenAPI\nimport RxInferClientOpenAPI.OpenAPI.Clients: Client\nimport RxInferClientOpenAPI: AuthenticationApi, token_generate, basepath\nusing Test\n\napi          = AuthenticationApi(Client(basepath(AuthenticationApi)))\nresponse, _  = token_generate(api)\n@test !isnothing(response)\ntoken = response.token","category":"page"},{"location":"api/server-info/","page":"Server details and version","title":"Server details and version","text":"import RxInferClientOpenAPI.OpenAPI.Clients: Client\nimport RxInferClientOpenAPI: ServerApi\n\nclient = Client(basepath(ServerApi); headers = Dict(\n    \"Authorization\" => \"Bearer $token\"\n))\n\napi = ServerApi(client)\nnothing #hide","category":"page"},{"location":"api/server-info/#Pinging-the-Server","page":"Server details and version","title":"Pinging the Server","text":"","category":"section"},{"location":"api/server-info/","page":"Server details and version","title":"Server details and version","text":"You can ping the server to check if it's running. This should return { \"status\": \"ok\" } if the server is running.","category":"page"},{"location":"api/server-info/","page":"Server details and version","title":"Server details and version","text":"import RxInferClientOpenAPI\nimport RxInferClientOpenAPI.OpenAPI.Clients: Client\nimport RxInferClientOpenAPI: ServerApi, ping_server, basepath\n\nresponse, _ = ping_server(api)\n@test response.status == \"ok\" #hide\nresponse","category":"page"},{"location":"api/server-info/","page":"Server details and version","title":"Server details and version","text":"note: Note\nThe ping endpoint does not require authentication.","category":"page"},{"location":"api/server-info/#Getting-Server-Information","page":"Server details and version","title":"Getting Server Information","text":"","category":"section"},{"location":"api/server-info/","page":"Server details and version","title":"Server details and version","text":"You can also get information about the server properties, such as the server version, running Julia version and the RxInfer version:","category":"page"},{"location":"api/server-info/","page":"Server details and version","title":"Server details and version","text":"import RxInferClientOpenAPI: get_server_info\n\nresponse, _ = get_server_info(api)\nresponse","category":"page"},{"location":"api/server-info/","page":"Server details and version","title":"Server details and version","text":"","category":"page"},{"location":"components/logging/#logging-system","page":"Logging","title":"Logging System","text":"","category":"section"},{"location":"components/logging/","page":"Logging","title":"Logging","text":"The RxInfer Server uses a logging system that divides logs by functional groups and stores them in separate files.","category":"page"},{"location":"components/logging/#Configuration","page":"Logging","title":"Configuration","text":"","category":"section"},{"location":"components/logging/","page":"Logging","title":"Logging","text":"For logging configuration options, see Logging Configuration in the main configuration documentation.","category":"page"},{"location":"components/logging/#Architecture","page":"Logging","title":"Architecture","text":"","category":"section"},{"location":"components/logging/","page":"Logging","title":"Logging","text":"The logging functionality is encapsulated in the Logging module (src/logging.jl), which:","category":"page"},{"location":"components/logging/","page":"Logging","title":"Logging","text":"Uses a TeeLogger to output logs to multiple destinations simultaneously\nGroups logs by their functional component\nMaintains separate log files for each tag/group (e.g., Server.log, Authentification.log)","category":"page"},{"location":"components/logging/#Usage","page":"Logging","title":"Usage","text":"","category":"section"},{"location":"components/logging/","page":"Logging","title":"Logging","text":"The Logging.with_logger function is the primary API:","category":"page"},{"location":"components/logging/","page":"Logging","title":"Logging","text":"Logging.with_logger() do\n    @info \"This message will be logged to both terminal and files\"\nend","category":"page"},{"location":"components/logging/#Log-Groups","page":"Logging","title":"Log Groups","text":"","category":"section"},{"location":"components/logging/","page":"Logging","title":"Logging","text":"Log groups are automatically derived from the file basename. For example:","category":"page"},{"location":"components/logging/","page":"Logging","title":"Logging","text":"Messages from src/tags/Server.jl belong to the :Server group\nMessages from src/tags/Authentification.jl belong to the :Authentification group\nMessages from src/tags/Models.jl belong to the :Models group","category":"page"},{"location":"components/logging/","page":"Logging","title":"Logging","text":"The system routes logs to the appropriate files based on these groups without requiring explicit group specification.","category":"page"},{"location":"components/logging/#API-Reference","page":"Logging","title":"API Reference","text":"","category":"section"},{"location":"components/logging/","page":"Logging","title":"Logging","text":"RxInferServer.Logging.with_logger\nRxInferServer.Logging.with_simple_logger\nRxInferServer.Logging.filter_by_group\nRxInferServer.Logging.filter_by_module\nRxInferServer.Logging.filter_by_level","category":"page"},{"location":"components/logging/#RxInferServer.Logging.with_logger","page":"Logging","title":"RxInferServer.Logging.with_logger","text":"with_logger(f)\n\nSets up the logging system and executes the provided function with the configured logger. Creates a TeeLogger that writes to:\n\nTerminal with human-readable formatting\nA main log file (.log) with all messages\nSeparate files for each functional group (Server.log, Authentification.log, etc.)\nA debug log file (debug.log) if debug logging is enabled, see RxInferServer.Logging.RXINFER_SERVER_ENABLE_DEBUG_LOGGING\n\nArguments\n\nf: The function to execute with the configured logger\n\nExamples\n\nLogging.with_logger() do\n    @info \"This message will be logged to both terminal and files\"\nend\n\nReturns\n\nThe return value of the provided function\n\n\n\n\n\n","category":"function"},{"location":"components/logging/#RxInferServer.Logging.with_simple_logger","page":"Logging","title":"RxInferServer.Logging.with_simple_logger","text":"with_simple_logger(f, io::IO)\n\nSets up the logging system and executes the provided function with the configured logger. Creates a SimpleLogger that writes to the specified IO stream.\n\nArguments\n\nf: The function to execute with the configured logger\nio: The IO stream to write the logs to\n\nReturns\n\nThe return value of the provided function\n\n\n\n\n\n","category":"function"},{"location":"components/logging/#RxInferServer.Logging.filter_by_group","page":"Logging","title":"RxInferServer.Logging.filter_by_group","text":"filter_by_group(group)\n\nCreates a logger filter function that only allows log messages with the specified group tag. Used to separate logs into different files by their functionality/module.\n\nArguments\n\ngroup: The symbol representing a log group (e.g., :Server, :Authentification)\n\nReturns\n\nA function that takes a logger and returns an EarlyFilteredLogger that filters by the specified group\n\n\n\n\n\n","category":"function"},{"location":"components/logging/#RxInferServer.Logging.filter_by_module","page":"Logging","title":"RxInferServer.Logging.filter_by_module","text":"filter_by_module(_module)\n\nCreates a logger filter function that only allows log messages from the specified module. Used to separate logs by their source module. Uses occursin to match the module name.\n\nArguments\n\n_module: The module name to filter by (e.g., \"RxInferServer\"), must be a string\n\nReturns\n\nA function that takes a logger and returns an EarlyFilteredLogger that filters by the specified module\n\n\n\n\n\n","category":"function"},{"location":"components/logging/#RxInferServer.Logging.filter_by_level","page":"Logging","title":"RxInferServer.Logging.filter_by_level","text":"filter_by_level(level_range)\n\nCreates a logger filter function that only allows log messages within the specified range of log levels. Used to separate logs by their severity level.\n\nArguments\n\nlevel_range: A range of log levels to include\n\nReturns\n\nA function that takes a logger and returns an EarlyFilteredLogger that filters by the specified level range\n\n\n\n\n\n","category":"function"},{"location":"components/logging/#Adding-New-OpenAPI-Tags","page":"Logging","title":"Adding New OpenAPI Tags","text":"","category":"section"},{"location":"components/logging/","page":"Logging","title":"Logging","text":"When adding new tags to the OpenAPI schema:","category":"page"},{"location":"components/logging/","page":"Logging","title":"Logging","text":"Create a new file in the src/tags/ directory (e.g., NewTag.jl)\nAdd a corresponding logger in the Logging.with_logger function:","category":"page"},{"location":"components/logging/","page":"Logging","title":"Logging","text":"# In src/logging.jl:\nMiniLoggers.MiniLogger(; io = joinpath(RXINFER_SERVER_LOGS_LOCATION, \"NewTag.log\"), kwargs_logger...) |> filter_by_group(:NewTag)","category":"page"},{"location":"components/logging/","page":"Logging","title":"Logging","text":"This ensures logs from the new tag will be properly captured in a dedicated log file. ","category":"page"},{"location":"components/logging/","page":"Logging","title":"Logging","text":"","category":"page"},{"location":"api/model-management/#model-management-api","page":"Model management","title":"Model management","text":"","category":"section"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"This guide covers the Models management API, which provides endpoints for managing RxInfer models in RxInferServer. You'll learn how to create, manage, and interact with models and their episodes.","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"For information about how to create and add new models to the server, please refer to the How to Add a Model manual.","category":"page"},{"location":"api/model-management/#Prerequisites","page":"Model management","title":"Prerequisites","text":"","category":"section"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"Before using the Models API, you need a valid authentication token. If you haven't obtained one yet, please refer to the Authentication guide. The examples below assume you have already set up authentication:","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"import RxInferClientOpenAPI\nimport RxInferClientOpenAPI.OpenAPI.Clients: Client\nimport RxInferClientOpenAPI: AuthenticationApi, token_generate, basepath\nusing Test\n\napi          = AuthenticationApi(Client(basepath(AuthenticationApi)))\nresponse, _  = token_generate(api)\n@test !isnothing(response)\ntoken = response.token","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"import RxInferClientOpenAPI.OpenAPI.Clients: Client\nimport RxInferClientOpenAPI: ModelsApi\n\nclient = Client(basepath(ModelsApi); headers = Dict(\n    \"Authorization\" => \"Bearer $token\"\n))\n\napi = ModelsApi(client)\nnothing #hide","category":"page"},{"location":"api/model-management/#Terminology","page":"Model management","title":"Terminology","text":"","category":"section"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"In RxInferServer, a model is a type of probabilistic program that you can create and interact with. We distinguish between available models and model instances.","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"Available models are the models that you can use to create an instance of. They contain all the code and configuration to create an actual model instance and are usually identified by their model_name.\nModel instances are the actual instances of a model that you have created. They contain the state of the model, including the learned parameters. You can have multiple model instances of the same model which are identified by a unique instance_id. Individual instances are isolated from each other, meaning that they do not share state.","category":"page"},{"location":"api/model-management/#Discovering-Available-Models","page":"Model management","title":"Discovering Available Models","text":"","category":"section"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"Before creating a new model instance, you can explore which model types are available on the server with the get_available_models operation:","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"import RxInferClientOpenAPI: get_available_models\n\navailable_models, _ = get_available_models(api)\n@test !isnothing(available_models) #hide\n@test length(available_models) > 0 #hide\n\n# only show the model details as the full configuration is quite large\nmap(model -> model.details, available_models)","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"Note that the list of available models depends on the roles assigned to the token used to make the request as well as server settings.","category":"page"},{"location":"api/model-management/#Inspecting-Available-Model-Details-and-Configuration","page":"Model management","title":"Inspecting Available Model Details and Configuration","text":"","category":"section"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"Each model type comes with detailed configuration and specifications. For example:","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"available_models[1].details","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"available_models[1].config","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"Alternatively, you can inspect these using the get_available_model operation with the specific model name:","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"import RxInferClientOpenAPI: get_available_model\n\nsome_model, _ = get_available_model(api, available_models[1].details.name)\n@test some_model.details.name == available_models[1].details.name #hide\n@test some_model.details.description == available_models[1].details.description #hide\n@test !isnothing(some_model) #hide\n@test hasproperty(some_model, :details) #hide\n@test hasproperty(some_model, :config) #hide\nnothing #hide","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"The response provides two key pieces of information:","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"details: Light-weight model information\nconfig: Model-specific configuration","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"some_model.details","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"some_model.config","category":"page"},{"location":"api/model-management/#model-management-api-create-model-instance","page":"Model management","title":"Creating a Model Instance","text":"","category":"section"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"Once you have selected the model you want to use, you can create a new instance of it with the create_model_instance operation together with the CreateModelInstanceRequest type:","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"import RxInferClientOpenAPI: create_model_instance, CreateModelInstanceRequest\n\nrequest = CreateModelInstanceRequest(\n    model_name = available_models[1].details.name,\n    description = \"\"\"\n    An arbitrary instance description, \n    which can be used to identify the instance later on\n    \"\"\",\n    # Optional: Customize model behavior with arguments\n    # arguments = Dict(...)\n)\n\nresponse, _ = create_model_instance(api, request)\n@test !isnothing(response) #hide\ninstance_id = response.instance_id","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"If successful, the server returns a unique instance_id that you'll use to interact with this specific model instance. A server may return an error if the model is not found or if the instance already exists.","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"response, _ = create_model_instance(api, CreateModelInstanceRequest(\n    model_name = \"non_existent_model\"\n))\n@test response.error == \"Not Found\" #hide\nresponse","category":"page"},{"location":"api/model-management/#Listing-Created-Model-Instances","page":"Model management","title":"Listing Created Model Instances","text":"","category":"section"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"View all instances of models you've created with the get_model_instances operation:","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"import RxInferClientOpenAPI: get_model_instances\n\ncreated_models, _ = get_model_instances(api)\n@test !isnothing(created_models) #hide\n@test created_models[1].instance_id == instance_id #hide\ncreated_models","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"We can see indeed that the list contains the instance we created earlier.","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"created_models[1].instance_id == instance_id","category":"page"},{"location":"api/model-management/#Getting-Details-of-a-Specific-Model-Instance","page":"Model management","title":"Getting Details of a Specific Model Instance","text":"","category":"section"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"Previously we retrieved a list of all model instances. Now we can retrieve details about a specific model instance with the get_model_instance operation:","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"import RxInferClientOpenAPI: get_model_instance\n\nresponse, _ = get_model_instance(api, instance_id)\n@test !isnothing(response) #hide\nresponse","category":"page"},{"location":"api/model-management/#model-management-api-get-model-instance-state","page":"Model management","title":"Checking the State of a Specific Model Instance","text":"","category":"section"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"Monitor the current state of your model with the get_model_instance_state operation:","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"import RxInferClientOpenAPI: get_model_instance_state    \n\nresponse, _ = get_model_instance_state(api, instance_id)\n@test !isnothing(response) #hide\nresponse","category":"page"},{"location":"api/model-management/#model-management-api-get-model-instance-parameters","page":"Model management","title":"Checking the Parameters of a Specific Model Instance","text":"","category":"section"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"Monitor the current parameters of your model with the get_model_instance_parameters operation:","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"import RxInferClientOpenAPI: get_model_instance_parameters\n\nresponse, _ = get_model_instance_parameters(api, instance_id)\n@test !isnothing(response) #hide\nresponse","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"note: State of a Model Instance vs Parameters of a Model Instance\nNote that the state of a model instance is not the same as the parameters of the model. You can consider the state as an internal implementation detail of the model and is not exposed to the user. The parameters are, however, directly exposed through the Learning API and can be updated and learned from data using different episodes.","category":"page"},{"location":"api/model-management/#Deleting-a-Model-Instance","page":"Model management","title":"Deleting a Model Instance","text":"","category":"section"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"When you're done with a model instance, you can remove it completely with the delete_model_instance operation:","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"import RxInferClientOpenAPI: delete_model_instance\n\nresponse, _ = delete_model_instance(api, instance_id)\n@test !isnothing(response) #hide\nresponse","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"note: Cascade Deletion\nDeleting an instance automatically removes all its episodes, read more about episodes in the Learning parameters of a model section\nDeleting an instance does not delete other instances of the same model\nThis action cannot be undone\nMake sure to save any important data before deletion","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"Verify the model has been removed:","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"# Check model list\ncreated_models, _ = get_model_instances(api)\n@test !isnothing(created_models) #hide\n@test length(created_models) == 0 #hide\ncreated_models","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"# Check model list\nresponse, _ = get_model_instance(api, instance_id)\n@test response.error == \"Not Found\" #hide\nresponse","category":"page"},{"location":"api/model-management/","page":"Model management","title":"Model management","text":"","category":"page"},{"location":"openapi/Models/AvailableModel/","page":"AvailableModel","title":"AvailableModel","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/AvailableModel/#AvailableModel","page":"AvailableModel","title":"AvailableModel","text":"","category":"section"},{"location":"openapi/Models/AvailableModel/#Properties","page":"AvailableModel","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/AvailableModel/","page":"AvailableModel","title":"AvailableModel","text":"Name Type Description Notes\ndetails AvailableModel_details  [default to null]\nconfig Map The entire model configuration as in the &#x60;config.yaml&#x60; file.  May include arbitrary fields, which are not part of the public interface. Note that this information also includes the properties from the &#x60;details&#x60; object. [default to null]","category":"page"},{"location":"openapi/Models/AvailableModel/","page":"AvailableModel","title":"AvailableModel","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/AvailableModel/","page":"AvailableModel","title":"AvailableModel","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/AvailableModel/","page":"AvailableModel","title":"AvailableModel","text":"","category":"page"},{"location":"openapi/Models/AvailableModel_details/","page":"AvailableModel_details","title":"AvailableModel_details","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/AvailableModel_details/#AvailableModel_details","page":"AvailableModel_details","title":"AvailableModel_details","text":"","category":"section"},{"location":"openapi/Models/AvailableModel_details/#Properties","page":"AvailableModel_details","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/AvailableModel_details/","page":"AvailableModel_details","title":"AvailableModel_details","text":"Name Type Description Notes\nname String Name of the model (usually with the version identifier, e.g. \\&quot;BetaBernoulli-v1\\&quot;) [optional] [default to null]\ndescription String Brief description of the model [optional] [default to null]\nauthor String Author of the model [optional] [default to null]\nroles List List of roles that can access the model [optional] [default to null]","category":"page"},{"location":"openapi/Models/AvailableModel_details/","page":"AvailableModel_details","title":"AvailableModel_details","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/AvailableModel_details/","page":"AvailableModel_details","title":"AvailableModel_details","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/AvailableModel_details/","page":"AvailableModel_details","title":"AvailableModel_details","text":"","category":"page"},{"location":"openapi/Models/CreateEpisodeRequest/","page":"CreateEpisodeRequest","title":"CreateEpisodeRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/CreateEpisodeRequest/#CreateEpisodeRequest","page":"CreateEpisodeRequest","title":"CreateEpisodeRequest","text":"","category":"section"},{"location":"openapi/Models/CreateEpisodeRequest/#Properties","page":"CreateEpisodeRequest","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/CreateEpisodeRequest/","page":"CreateEpisodeRequest","title":"CreateEpisodeRequest","text":"Name Type Description Notes\nname String Name of the episode to create [default to null]","category":"page"},{"location":"openapi/Models/CreateEpisodeRequest/","page":"CreateEpisodeRequest","title":"CreateEpisodeRequest","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/CreateEpisodeRequest/","page":"CreateEpisodeRequest","title":"CreateEpisodeRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/CreateEpisodeRequest/","page":"CreateEpisodeRequest","title":"CreateEpisodeRequest","text":"","category":"page"},{"location":"openapi/Models/ErrorResponse/","page":"ErrorResponse","title":"ErrorResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/ErrorResponse/#ErrorResponse","page":"ErrorResponse","title":"ErrorResponse","text":"","category":"section"},{"location":"openapi/Models/ErrorResponse/#Properties","page":"ErrorResponse","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/ErrorResponse/","page":"ErrorResponse","title":"ErrorResponse","text":"Name Type Description Notes\nerror String Error message explaining the failure [default to null]\nmessage String Additional message providing details about the failure [optional] [default to null]","category":"page"},{"location":"openapi/Models/ErrorResponse/","page":"ErrorResponse","title":"ErrorResponse","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/ErrorResponse/","page":"ErrorResponse","title":"ErrorResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/ErrorResponse/","page":"ErrorResponse","title":"ErrorResponse","text":"","category":"page"},{"location":"openapi/Models/EpisodeInfo/","page":"EpisodeInfo","title":"EpisodeInfo","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/EpisodeInfo/#EpisodeInfo","page":"EpisodeInfo","title":"EpisodeInfo","text":"","category":"section"},{"location":"openapi/Models/EpisodeInfo/#Properties","page":"EpisodeInfo","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/EpisodeInfo/","page":"EpisodeInfo","title":"EpisodeInfo","text":"Name Type Description Notes\ninstance_id UUID ID of the model instance this episode belongs to [default to null]\nepisode_name String Name of the episode [default to null]\ncreated_at Date Timestamp of when the episode was created [default to null]\nevents List List of events that have occurred in the episode [default to null]","category":"page"},{"location":"openapi/Models/EpisodeInfo/","page":"EpisodeInfo","title":"EpisodeInfo","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/EpisodeInfo/","page":"EpisodeInfo","title":"EpisodeInfo","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/EpisodeInfo/","page":"EpisodeInfo","title":"EpisodeInfo","text":"","category":"page"},{"location":"openapi/Models/InferRequest/","page":"InferRequest","title":"InferRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/InferRequest/#InferRequest","page":"InferRequest","title":"InferRequest","text":"","category":"section"},{"location":"openapi/Models/InferRequest/#Properties","page":"InferRequest","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/InferRequest/","page":"InferRequest","title":"InferRequest","text":"Name Type Description Notes\ndata Map Model-specific data to run inference on [default to null]\ntimestamp Date Timestamp of the inference request, used to mark the event in the episode [optional] [default to null]\nepisode_name String Name of the episode to run inference on [optional] [default to default]","category":"page"},{"location":"openapi/Models/InferRequest/","page":"InferRequest","title":"InferRequest","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/InferRequest/","page":"InferRequest","title":"InferRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/InferRequest/","page":"InferRequest","title":"InferRequest","text":"","category":"page"},{"location":"openapi/Models/TokenGenerateResponse/","page":"TokenGenerateResponse","title":"TokenGenerateResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/TokenGenerateResponse/#TokenGenerateResponse","page":"TokenGenerateResponse","title":"TokenGenerateResponse","text":"","category":"section"},{"location":"openapi/Models/TokenGenerateResponse/#Properties","page":"TokenGenerateResponse","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/TokenGenerateResponse/","page":"TokenGenerateResponse","title":"TokenGenerateResponse","text":"Name Type Description Notes\ntoken String The token to use in the Authorization header with the format \\&quot;Bearer {token}\\&quot; [default to null]","category":"page"},{"location":"openapi/Models/TokenGenerateResponse/","page":"TokenGenerateResponse","title":"TokenGenerateResponse","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/TokenGenerateResponse/","page":"TokenGenerateResponse","title":"TokenGenerateResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/TokenGenerateResponse/","page":"TokenGenerateResponse","title":"TokenGenerateResponse","text":"","category":"page"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Apis/ServerApi/#ServerApi","page":"ServerApi","title":"ServerApi","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"All URIs are relative to http://localhost:8000/v1","category":"page"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"Method HTTP request Description\nget_server_info GET /info Get server information\nping_server GET /ping Health check endpoint","category":"page"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"<a name=\"getServerInfo\"></a>","category":"page"},{"location":"openapi/Apis/ServerApi/#**get_server_info**","page":"ServerApi","title":"get_server_info","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"ServerInfo get_server_info()","category":"page"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"Get server information","category":"page"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"Returns information about the server, such as the RxInferServer version, RxInfer version, Julia version, server edition and API version","category":"page"},{"location":"openapi/Apis/ServerApi/#Parameters","page":"ServerApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"This endpoint does not need any parameter.","category":"page"},{"location":"openapi/Apis/ServerApi/#Return-type","page":"ServerApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"ServerInfo","category":"page"},{"location":"openapi/Apis/ServerApi/#Authorization","page":"ServerApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ServerApi/#HTTP-request-headers","page":"ServerApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"<a name=\"pingServer\"></a>","category":"page"},{"location":"openapi/Apis/ServerApi/#**ping_server**","page":"ServerApi","title":"ping_server","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"PingResponse ping_server()","category":"page"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"Health check endpoint","category":"page"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"Simple endpoint to check if the server is alive and running","category":"page"},{"location":"openapi/Apis/ServerApi/#Parameters-2","page":"ServerApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"This endpoint does not need any parameter.","category":"page"},{"location":"openapi/Apis/ServerApi/#Return-type-2","page":"ServerApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"PingResponse","category":"page"},{"location":"openapi/Apis/ServerApi/#Authorization-2","page":"ServerApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"No authorization required","category":"page"},{"location":"openapi/Apis/ServerApi/#HTTP-request-headers-2","page":"ServerApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Apis/ServerApi/","page":"ServerApi","title":"ServerApi","text":"","category":"page"},{"location":"openapi/Models/CreateModelInstanceResponse/","page":"CreateModelInstanceResponse","title":"CreateModelInstanceResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/CreateModelInstanceResponse/#CreateModelInstanceResponse","page":"CreateModelInstanceResponse","title":"CreateModelInstanceResponse","text":"","category":"section"},{"location":"openapi/Models/CreateModelInstanceResponse/#Properties","page":"CreateModelInstanceResponse","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/CreateModelInstanceResponse/","page":"CreateModelInstanceResponse","title":"CreateModelInstanceResponse","text":"Name Type Description Notes\ninstance_id UUID Unique identifier for the created model instance [default to null]","category":"page"},{"location":"openapi/Models/CreateModelInstanceResponse/","page":"CreateModelInstanceResponse","title":"CreateModelInstanceResponse","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/CreateModelInstanceResponse/","page":"CreateModelInstanceResponse","title":"CreateModelInstanceResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/CreateModelInstanceResponse/","page":"CreateModelInstanceResponse","title":"CreateModelInstanceResponse","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = RxInferServer","category":"page"},{"location":"#Welcome-to-RxInferServer","page":"Home","title":"Welcome to RxInferServer","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"warning: Warning\nThe implementation is work in progress and the API is not yet stable and may undergo significant changes. Use at your own risk.","category":"page"},{"location":"","page":"Home","title":"Home","text":"RxInferServer is a Julia package that provides an implementation of a REST API server for RxInfer.jl, enabling remote access to inference capabilities through HTTP endpoints. The server is built on top of HTTP.jl and follows OpenAPI specifications. Read more about the OpenAPI specification here.","category":"page"},{"location":"","page":"Home","title":"Home","text":"note: Note\nWhile the server is technically implemented as a Julia package, it relies on locally auto-generated code from the OpenAPI specification. This makes it more challenging (though not impossible) to use it as a direct dependency in another Julia project. For the same reason, the server is not registered as a Julia package and cannot be installed using Pkg.jl. Please refer to the Pkg.jl documentation for more information on working with such packages.","category":"page"},{"location":"#Getting-started","page":"Home","title":"Getting started","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"See the Getting started section to learn how to use the server.\nSee the Configuration section to learn how to configure the server.\nSee the How to Add a Model manual to learn how to create and add your own models.\nSee the Developers guide section for more details on the development process and implementation details.\nSee the OpenAPI documentation section for more details on the OpenAPI specification and the generated server and client code.","category":"page"},{"location":"#Available-SDKs","page":"Home","title":"Available SDKs","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"RxInferServer provides official SDKs for different programming languages:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Julia SDK: Included in this repository under the openapi/client folder. This SDK is automatically generated from the OpenAPI specification and is the most up-to-date implementation.\nPython SDK: Available as a separate package at RxInferClient.py. This client provides a Python interface to interact with RxInferServer.","category":"page"},{"location":"#license","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This project is licensed under the GNU Affero General Public License v3.0 - see the LICENSE in the repository for details. For companies and organizations that require different licensing terms, alternative licensing options are available from Lazy Dynamics. Please contact Lazy Dynamics for more information about licensing options that may better suit your specific needs and use cases.","category":"page"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"openapi/#openapi","page":"Overview","title":"OpenAPI Specification","text":"","category":"section"},{"location":"openapi/","page":"Overview","title":"Overview","text":"RxInfer Server provides a comprehensive OpenAPI (formerly known as Swagger) specification that describes all available REST API endpoints, request/response schemas, and authentication methods. This integration offers several key benefits for developers:","category":"page"},{"location":"openapi/#Benefits-for-Developers","page":"Overview","title":"Benefits for Developers","text":"","category":"section"},{"location":"openapi/","page":"Overview","title":"Overview","text":"Interactive Documentation: Access the interactive API documentation, allowing you to explore and test API endpoints directly from your browser. You can explore the API in the following ways:","category":"page"},{"location":"openapi/","page":"Overview","title":"Overview","text":"Interact with the stable version of the API using the Swagger UI\nInteract with the latest version of the API using the Swagger UI","category":"page"},{"location":"openapi/","page":"Overview","title":"Overview","text":"Code Generation: Generate client libraries in various programming languages using OpenAPI tools. This enables quick integration with the RxInferServer in your preferred language while maintaining type safety and proper error handling.\nAPI Consistency: The OpenAPI specification serves as a single source of truth for the API, ensuring that both the server implementation and client expectations remain in sync.\nType Safety: Generated client libraries provide type-safe interfaces, reducing runtime errors and improving development experience through better IDE support.","category":"page"},{"location":"openapi/#Client-Generation","page":"Overview","title":"Client Generation","text":"","category":"section"},{"location":"openapi/","page":"Overview","title":"Overview","text":"Generate client libraries using standard OpenAPI tools:","category":"page"},{"location":"openapi/","page":"Overview","title":"Overview","text":"# Using openapi-generator-cli\nopenapi-generator-cli generate \\\n    -i https://server.rxinfer.com/stable/openapi/spec.yaml \\\n    -g python \\\n    -o ./client\n\n# Using swagger-codegen\nswagger-codegen generate \\\n    -i https://server.rxinfer.com/stable/openapi/spec.yaml \\\n    -l python \\\n    -o ./client","category":"page"},{"location":"openapi/","page":"Overview","title":"Overview","text":"Read more about the OpenAPI specification here.","category":"page"},{"location":"openapi/","page":"Overview","title":"Overview","text":"","category":"page"},{"location":"openapi/Models/DeleteModelInstanceRequest/","page":"DeleteModelInstanceRequest","title":"DeleteModelInstanceRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/DeleteModelInstanceRequest/#DeleteModelInstanceRequest","page":"DeleteModelInstanceRequest","title":"DeleteModelInstanceRequest","text":"","category":"section"},{"location":"openapi/Models/DeleteModelInstanceRequest/#Properties","page":"DeleteModelInstanceRequest","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/DeleteModelInstanceRequest/","page":"DeleteModelInstanceRequest","title":"DeleteModelInstanceRequest","text":"Name Type Description Notes\ninstance_id UUID ID of the model instance to delete [default to null]","category":"page"},{"location":"openapi/Models/DeleteModelInstanceRequest/","page":"DeleteModelInstanceRequest","title":"DeleteModelInstanceRequest","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/DeleteModelInstanceRequest/","page":"DeleteModelInstanceRequest","title":"DeleteModelInstanceRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/DeleteModelInstanceRequest/","page":"DeleteModelInstanceRequest","title":"DeleteModelInstanceRequest","text":"","category":"page"},{"location":"openapi/Models/LearnRequest/","page":"LearnRequest","title":"LearnRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/LearnRequest/#LearnRequest","page":"LearnRequest","title":"LearnRequest","text":"","category":"section"},{"location":"openapi/Models/LearnRequest/#Properties","page":"LearnRequest","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/LearnRequest/","page":"LearnRequest","title":"LearnRequest","text":"Name Type Description Notes\nepisodes List List of episodes to learn from [default to [\"default\"]]","category":"page"},{"location":"openapi/Models/LearnRequest/","page":"LearnRequest","title":"LearnRequest","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/LearnRequest/","page":"LearnRequest","title":"LearnRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/LearnRequest/","page":"LearnRequest","title":"LearnRequest","text":"","category":"page"},{"location":"openapi/Models/PingResponse/","page":"PingResponse","title":"PingResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/PingResponse/#PingResponse","page":"PingResponse","title":"PingResponse","text":"","category":"section"},{"location":"openapi/Models/PingResponse/#Properties","page":"PingResponse","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/PingResponse/","page":"PingResponse","title":"PingResponse","text":"Name Type Description Notes\nstatus String Status of the server [default to ok]","category":"page"},{"location":"openapi/Models/PingResponse/","page":"PingResponse","title":"PingResponse","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/PingResponse/","page":"PingResponse","title":"PingResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/PingResponse/","page":"PingResponse","title":"PingResponse","text":"","category":"page"},{"location":"openapi/Models/ModelInstanceParameters/","page":"ModelInstanceParameters","title":"ModelInstanceParameters","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/ModelInstanceParameters/#ModelInstanceParameters","page":"ModelInstanceParameters","title":"ModelInstanceParameters","text":"","category":"section"},{"location":"openapi/Models/ModelInstanceParameters/#Properties","page":"ModelInstanceParameters","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/ModelInstanceParameters/","page":"ModelInstanceParameters","title":"ModelInstanceParameters","text":"Name Type Description Notes\nparameters Map An object containing the current parameters of the model instance. The keys are the parameter names as defined in the model configuration, and the values are the parameter values. [default to null]","category":"page"},{"location":"openapi/Models/ModelInstanceParameters/","page":"ModelInstanceParameters","title":"ModelInstanceParameters","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/ModelInstanceParameters/","page":"ModelInstanceParameters","title":"ModelInstanceParameters","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/ModelInstanceParameters/","page":"ModelInstanceParameters","title":"ModelInstanceParameters","text":"","category":"page"},{"location":"openapi/Models/TokenRolesResponse/","page":"TokenRolesResponse","title":"TokenRolesResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/TokenRolesResponse/#TokenRolesResponse","page":"TokenRolesResponse","title":"TokenRolesResponse","text":"","category":"section"},{"location":"openapi/Models/TokenRolesResponse/#Properties","page":"TokenRolesResponse","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/TokenRolesResponse/","page":"TokenRolesResponse","title":"TokenRolesResponse","text":"Name Type Description Notes\nroles List List of roles for the token [default to null]","category":"page"},{"location":"openapi/Models/TokenRolesResponse/","page":"TokenRolesResponse","title":"TokenRolesResponse","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/TokenRolesResponse/","page":"TokenRolesResponse","title":"TokenRolesResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/TokenRolesResponse/","page":"TokenRolesResponse","title":"TokenRolesResponse","text":"","category":"page"},{"location":"api/authentication/#authentication-api","page":"Authentication","title":"Authentication","text":"","category":"section"},{"location":"api/authentication/","page":"Authentication","title":"Authentication","text":"The RxInferServer uses token-based authentication to secure access to its endpoints. This guide explains how to obtain and use authentication tokens, understand token roles, and manage model access.","category":"page"},{"location":"api/authentication/#Overview","page":"Authentication","title":"Overview","text":"","category":"section"},{"location":"api/authentication/","page":"Authentication","title":"Authentication","text":"Most endpoints in RxInferServer require authentication, with a few exceptions. The authentication system is based on tokens and follows the Bearer token scheme. All authentication-related endpoints are grouped under the Authentication tag in the OpenAPI specification.","category":"page"},{"location":"api/authentication/#Getting-Started-with-Authentication","page":"Authentication","title":"Getting Started with Authentication","text":"","category":"section"},{"location":"api/authentication/#Obtaining-a-Token","page":"Authentication","title":"Obtaining a Token","text":"","category":"section"},{"location":"api/authentication/","page":"Authentication","title":"Authentication","text":"To authenticate with the server, you first need to obtain a token using the token_generate operation. This endpoint supports both user authentication and API key authentication.","category":"page"},{"location":"api/authentication/","page":"Authentication","title":"Authentication","text":"import RxInferClientOpenAPI\nimport RxInferClientOpenAPI.OpenAPI.Clients: Client\nimport RxInferClientOpenAPI: AuthenticationApi, token_generate, basepath\nusing Test #hide\n\nurl          = basepath(AuthenticationApi)\nclient       = Client(url)\napi          = AuthenticationApi(client)\nresponse, _  = token_generate(api)\n@test !isnothing(response) #hide\n\nresponse.token","category":"page"},{"location":"api/authentication/","page":"Authentication","title":"Authentication","text":"tip: Development Mode\nDuring development, you can enable the development mode by setting the RXINFER_SERVER_ENABLE_DEV_TOKEN environment variable to true.","category":"page"},{"location":"api/authentication/#Using-the-Token","page":"Authentication","title":"Using the Token","text":"","category":"section"},{"location":"api/authentication/","page":"Authentication","title":"Authentication","text":"Once you have obtained a token, you need to include it in the Authorization header of your requests. The token should be prefixed with Bearer as shown below:","category":"page"},{"location":"api/authentication/","page":"Authentication","title":"Authentication","text":"import RxInferClientOpenAPI.OpenAPI.Clients: set_header\n\nset_header(client, \"Authorization\", \"Bearer $(response.token)\")","category":"page"},{"location":"api/authentication/","page":"Authentication","title":"Authentication","text":"warning: Token Security\nKeep your tokens secure and private\nStore tokens in a secure location\nNever expose tokens in client-side code or version control\nImplement proper token rotation and management in production\nRemember that models are associated with the token used to create them","category":"page"},{"location":"api/authentication/#authentication-api-roles","page":"Authentication","title":"Understanding Token Roles","text":"","category":"section"},{"location":"api/authentication/#Viewing-Token-Roles","page":"Authentication","title":"Viewing Token Roles","text":"","category":"section"},{"location":"api/authentication/","page":"Authentication","title":"Authentication","text":"Each token comes with a set of assigned roles that determine its access permissions. You can retrieve the roles associated with your token using the token_roles operation:","category":"page"},{"location":"api/authentication/","page":"Authentication","title":"Authentication","text":"import RxInferClientOpenAPI: token_roles\n\nresponse, _ = token_roles(api)\n@test !isnothing(response) #hide\n\nresponse.roles","category":"page"},{"location":"api/authentication/#Model-Access-and-Roles","page":"Authentication","title":"Model Access and Roles","text":"","category":"section"},{"location":"api/authentication/","page":"Authentication","title":"Authentication","text":"Roles control which models a token can access. Here's how to list accessible models:","category":"page"},{"location":"api/authentication/","page":"Authentication","title":"Authentication","text":"import RxInferClientOpenAPI: ModelsApi, get_available_models\n\nmodels_api = ModelsApi(client)\navailable_models, _ = get_available_models(models_api)\n@test !isnothing(available_models) #hide\n@test length(available_models) > 0 #hide\n\navailable_models","category":"page"},{"location":"api/authentication/","page":"Authentication","title":"Authentication","text":"To inspect the roles required for a specific model, you can simply access the roles field of the model details:","category":"page"},{"location":"api/authentication/","page":"Authentication","title":"Authentication","text":"available_models[1].details","category":"page"},{"location":"api/authentication/","page":"Authentication","title":"Authentication","text":"or alternatively use the get_available_model operation:","category":"page"},{"location":"api/authentication/","page":"Authentication","title":"Authentication","text":"import RxInferClientOpenAPI: ModelsApi, get_available_model\n\nmodels_api = ModelsApi(client)\nresponse, _ = get_available_model(models_api, available_models[1].details.name)\n@test !isnothing(response) #hide\n\nresponse.details","category":"page"},{"location":"api/authentication/","page":"Authentication","title":"Authentication","text":"Read more about how to create and manage models in the Models management section.","category":"page"},{"location":"api/authentication/","page":"Authentication","title":"Authentication","text":"","category":"page"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Apis/AuthenticationApi/#AuthenticationApi","page":"AuthenticationApi","title":"AuthenticationApi","text":"","category":"section"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"All URIs are relative to http://localhost:8000/v1","category":"page"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"Method HTTP request Description\ntoken_generate POST /token/generate Generate authentication token\ntoken_roles GET /token/roles Get token roles","category":"page"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"<a name=\"tokenGenerate\"></a>","category":"page"},{"location":"openapi/Apis/AuthenticationApi/#**token_generate**","page":"AuthenticationApi","title":"token_generate","text":"","category":"section"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"TokenGenerateResponse token_generate()","category":"page"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"Generate authentication token","category":"page"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"Generates a new authentication token for accessing protected endpoints","category":"page"},{"location":"openapi/Apis/AuthenticationApi/#Parameters","page":"AuthenticationApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"This endpoint does not need any parameter.","category":"page"},{"location":"openapi/Apis/AuthenticationApi/#Return-type","page":"AuthenticationApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"TokenGenerateResponse","category":"page"},{"location":"openapi/Apis/AuthenticationApi/#Authorization","page":"AuthenticationApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"No authorization required","category":"page"},{"location":"openapi/Apis/AuthenticationApi/#HTTP-request-headers","page":"AuthenticationApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"<a name=\"tokenRoles\"></a>","category":"page"},{"location":"openapi/Apis/AuthenticationApi/#**token_roles**","page":"AuthenticationApi","title":"token_roles","text":"","category":"section"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"TokenRolesResponse token_roles()","category":"page"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"Get token roles","category":"page"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"Retrieve the list of roles for a specific token","category":"page"},{"location":"openapi/Apis/AuthenticationApi/#Parameters-2","page":"AuthenticationApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"This endpoint does not need any parameter.","category":"page"},{"location":"openapi/Apis/AuthenticationApi/#Return-type-2","page":"AuthenticationApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"TokenRolesResponse","category":"page"},{"location":"openapi/Apis/AuthenticationApi/#Authorization-2","page":"AuthenticationApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/AuthenticationApi/#HTTP-request-headers-2","page":"AuthenticationApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Apis/AuthenticationApi/","page":"AuthenticationApi","title":"AuthenticationApi","text":"","category":"page"},{"location":"api/status-codes/#status-codes","page":"Status codes and error handling","title":"Status codes and error handling","text":"","category":"section"},{"location":"api/status-codes/","page":"Status codes and error handling","title":"Status codes and error handling","text":"RxInferServer uses standard HTTP status codes to indicate the success or failure of API requests. This section describes the responses you can expect from the server.","category":"page"},{"location":"api/status-codes/#200-OK","page":"Status codes and error handling","title":"200 OK","text":"","category":"section"},{"location":"api/status-codes/","page":"Status codes and error handling","title":"Status codes and error handling","text":"The 200 OK status code indicates that the request was successful.","category":"page"},{"location":"api/status-codes/","page":"Status codes and error handling","title":"Status codes and error handling","text":"import RxInferClientOpenAPI.OpenAPI.Clients: Client\nimport RxInferClientOpenAPI: ServerApi, ping_server, basepath\nusing Test #hide\n\nclient = Client(basepath(ServerApi))\n\nresponse, info = ping_server(ServerApi(client))\n@test info.status == 200 #hide\n\ninfo.status","category":"page"},{"location":"api/status-codes/","page":"Status codes and error handling","title":"Status codes and error handling","text":"response","category":"page"},{"location":"api/status-codes/#401-Unauthorized","page":"Status codes and error handling","title":"401 Unauthorized","text":"","category":"section"},{"location":"api/status-codes/","page":"Status codes and error handling","title":"Status codes and error handling","text":"If you try to access a resource that requires authentication, the server will return a 401 Unauthorized error. This typically happens when you try to access a resource that requires a token, but you haven't provided a valid token.","category":"page"},{"location":"api/status-codes/","page":"Status codes and error handling","title":"Status codes and error handling","text":"import RxInferClientOpenAPI.OpenAPI.Clients: Client\nimport RxInferClientOpenAPI: ServerApi, get_server_info, basepath\nusing Test #hide\n\nclient = Client(basepath(ServerApi))\n\nresponse, info = get_server_info(ServerApi(client))\n@test !isnothing(response) #hide\n@test response.error == \"Unauthorized\" #hide\n@test info.status == 401 #hide\n\ninfo.status","category":"page"},{"location":"api/status-codes/","page":"Status codes and error handling","title":"Status codes and error handling","text":"response","category":"page"},{"location":"api/status-codes/","page":"Status codes and error handling","title":"Status codes and error handling","text":"For accessing protected resources, you need to provide a valid token. See the Authentication section for more information.","category":"page"},{"location":"api/status-codes/","page":"Status codes and error handling","title":"Status codes and error handling","text":"using RxInferServer #hide\ntoken = RxInferServer.DEFAULT_DEV_TOKEN #hide\nclient = Client(basepath(ServerApi); headers = Dict(\n    \"Authorization\" => \"Bearer $token\"\n))\nnothing #hide","category":"page"},{"location":"api/status-codes/#404-Not-Found","page":"Status codes and error handling","title":"404 Not Found","text":"","category":"section"},{"location":"api/status-codes/","page":"Status codes and error handling","title":"Status codes and error handling","text":"The 404 Not Found error indicates that the resource you're trying to access does not exist.","category":"page"},{"location":"api/status-codes/","page":"Status codes and error handling","title":"Status codes and error handling","text":"import RxInferClientOpenAPI: ModelsApi, get_model_instance\n\nresponse, info = get_model_instance(ModelsApi(client), \"non-existent-model\")\n@test !isnothing(response) #hide\n@test response.error == \"Not Found\" #hide\n@test info.status == 404 #hide\n\ninfo.status","category":"page"},{"location":"api/status-codes/","page":"Status codes and error handling","title":"Status codes and error handling","text":"response","category":"page"},{"location":"api/status-codes/#400-Bad-Request","page":"Status codes and error handling","title":"400 Bad Request","text":"","category":"section"},{"location":"api/status-codes/","page":"Status codes and error handling","title":"Status codes and error handling","text":"The 400 Bad Request error indicates that the request is invalid. This can happen for various reasons, such as invalid JSON payloads, missing required fields, or incorrect parameter values.","category":"page"},{"location":"api/status-codes/","page":"Status codes and error handling","title":"Status codes and error handling","text":"import RxInferClientOpenAPI: ModelsApi, CreateModelInstanceRequest, create_model_instance, delete_episode\n\nresponse, info = create_model_instance(ModelsApi(client), CreateModelInstanceRequest(\n    model_name = \"BetaBernoulli-v1\",\n    description = \"Example model for demonstration\"\n))\n@test !isnothing(response) #hide\n\n# Get the model id from the response\ninstance_id = response.instance_id\n\n# Attempt to delete the default episode, \n# which should result in a 400 Bad Request error\nresponse, info = delete_episode(ModelsApi(client), instance_id, \"default\")\n@test !isnothing(response) #hide\n@test response.error == \"Bad Request\" #hide\n@test info.status == 400 #hide\n\ninfo.status","category":"page"},{"location":"api/status-codes/","page":"Status codes and error handling","title":"Status codes and error handling","text":"response","category":"page"},{"location":"api/status-codes/","page":"Status codes and error handling","title":"Status codes and error handling","text":"","category":"page"},{"location":"configuration/#configuration","page":"Configuration","title":"Configuration","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"This section describes the configuration options for the RxInferServer.jl package. All configuration is done through environment variables, which can be set before starting the server. These settings are runtime configurations that do not require recompilation of the project.","category":"page"},{"location":"configuration/#environment-configuration-with-env-files","page":"Configuration","title":"Environment Configuration with .env files","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The server supports loading environment variables from .env files. The specific files loaded depend on the server environment setting:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.RXINFER_SERVER_ENV\nRxInferServer.RXINFER_SERVER_ENV_PWD\nRxInferServer.RXINFER_SERVER_ENV_OVERRIDE","category":"page"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_ENV","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_ENV","text":"RXINFER_SERVER_ENV() -> String\n\nControls which .env files are loaded by the server.\n\nReturns the value of the RXINFER_SERVER_ENV environment variable,  which determines the environment-specific configuration files to load. Defaults to an empty string when the environment variable is not set.\n\nBy default, values already set in the environment variable are not overridden by the .env files. Set RXINFER_SERVER_ENV_OVERRIDE to true to override existing values.\n\nFiles Loaded Based on Environment Value\n\nEnvironment Value .env Files Loaded\n\"\" (default) .env.local, .env\n\"production\" .env.production.local, .env.production, .env\n\"development\" .env.development.local, .env.development, .env\n\"test\" .env.test.local, .env.test, .env\n\"local\" .env.local.local, .env.local, .env\nCustom value \"xyz\" .env.xyz.local, .env.xyz, .env\n\nIf the same key is defined in multiple files, the first occurrence of the key is used (e.g the .env.local file takes precedence over the .env file). However, if the RXINFER_SERVER_ENV_OVERRIDE environment variable is set to true, the last occurrence of the key is used instead (e.g the .env file takes precedence over the .env.local file).\n\nAll files are assumed to be in the directory specified by the RXINFER_SERVER_ENV_PWD environment variable. If this variable is not set, the current working directory (pwd()) is used instead.\n\nwarning: Warning\nNever store sensitive information in the .env files. The .env files are included in the repository by default to simplify the setup process. In a production environment, sensitive information should be stored in a more secure manner, such as in environment variables or in a secrets manager.\n\nnote: Note\nRXINFER_SERVER_ENV, RXINFER_SERVER_ENV_PWD and RXINFER_SERVER_ENV_OVERRIDE cannot be set via the .env files as they are accessed before the .env files are loaded.\n\nSee also: RXINFER_SERVER_ENV_PWD, RXINFER_SERVER_ENV_OVERRIDE.\n\n\n\n\n\n","category":"function"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_ENV_PWD","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_ENV_PWD","text":"RXINFER_SERVER_ENV_PWD() -> String\n\nReturns the directory in which to search for .env files. Defaults to the current working directory (pwd()) when the environment variable is not set.\n\nnote: Note\nRXINFER_SERVER_ENV, RXINFER_SERVER_ENV_PWD and RXINFER_SERVER_ENV_OVERRIDE cannot be set via the .env files as they are accessed before the .env files are loaded.\n\nSee also: RXINFER_SERVER_ENV, RXINFER_SERVER_ENV_OVERRIDE.\n\n\n\n\n\n","category":"function"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_ENV_OVERRIDE","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_ENV_OVERRIDE","text":"RXINFER_SERVER_ENV_OVERRIDE() -> Bool\n\nReturns the value of the RXINFER_SERVER_ENV_OVERRIDE environment variable. Defaults to false when the environment variable is not set.\n\nIf RXINFER_SERVER_ENV_OVERRIDE environment variable is set to true,  values already set in the environment variable are overridden by the .env files.\n\nnote: Note\nRXINFER_SERVER_ENV, RXINFER_SERVER_ENV_PWD and RXINFER_SERVER_ENV_OVERRIDE cannot be set via the .env files as they are accessed before the .env files are loaded.\n\nSee also: RXINFER_SERVER_ENV, RXINFER_SERVER_ENV_PWD.\n\n\n\n\n\n","category":"function"},{"location":"configuration/#port-configuration","page":"Configuration","title":"Port Configuration","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The server port can be configured using the following environment variable:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.RXINFER_SERVER_PORT","category":"page"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_PORT","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_PORT","text":"The port on which the RxInfer server will run.  This can be configured using the RXINFER_SERVER_PORT environment variable. Defaults to 8000 if not specified.\n\n# Set port via environment variable\nENV[\"RXINFER_SERVER_PORT\"] = 9000\nRxInferServer.serve()\n\n\n\n\n\n","category":"function"},{"location":"configuration/#models-configuration","page":"Configuration","title":"Models Configuration","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The server supports models configuration. The following environment variables can be set to configure the models:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.Models.RXINFER_SERVER_MODELS_LOCATIONS\nRxInferServer.Models.RXINFER_SERVER_LOAD_TEST_MODELS","category":"page"},{"location":"configuration/#RxInferServer.Models.RXINFER_SERVER_MODELS_LOCATIONS","page":"Configuration","title":"RxInferServer.Models.RXINFER_SERVER_MODELS_LOCATIONS","text":"RXINFER_SERVER_MODELS_LOCATIONS\n\nThe directories where the models are stored. Colon-separated list of directories. This can be configured using the RXINFER_SERVER_MODELS_LOCATIONS environment variable. Defaults to \"models:custom_models\" if not specified.  Note that the custom_models directory is git-ignored by default. Use the custom_models directory to experiment with custom models without committing them to the repository.\n\nENV[\"RXINFER_SERVER_MODELS_LOCATIONS\"] = \"/path/to/models1:/path/to/models2\"\nRxInferServer.serve()\n\n\n\n\n\n","category":"function"},{"location":"configuration/#RxInferServer.Models.RXINFER_SERVER_LOAD_TEST_MODELS","page":"Configuration","title":"RxInferServer.Models.RXINFER_SERVER_LOAD_TEST_MODELS","text":"RXINFER_SERVER_LOAD_TEST_MODELS\n\nEnvironment variable to determine whether to load test models. Can be either true or false. The test models are located under the test directory of the project.\n\nnote: Note\npkgdir(@__MODULE__) is used to locate the project's directory and load the test models from there. This means that the test models can be loaded only when the package is installed in the development mode. Do not use this variable in the production environment.\n\n\n\n\n\n","category":"function"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"For detailed information about model configuration and implementation, including the structure of config.yaml files and model implementation requirements, please refer to the How to Add a Model manual.","category":"page"},{"location":"configuration/#logging-configuration","page":"Configuration","title":"Logging Configuration","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The server implements a comprehensive logging system that writes logs both to the terminal and to files. Logs are organized by functional groups (e.g., Server, Authentication) and stored in separate files. The configurable options include:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.Logging.RXINFER_SERVER_LOGS_LOCATION\nRxInferServer.Logging.RXINFER_SERVER_ENABLE_DEBUG_LOGGING","category":"page"},{"location":"configuration/#RxInferServer.Logging.RXINFER_SERVER_LOGS_LOCATION","page":"Configuration","title":"RxInferServer.Logging.RXINFER_SERVER_LOGS_LOCATION","text":"The directory where server logs will be stored. This can be configured using the RXINFER_SERVER_LOGS_LOCATION environment variable. Defaults to \".server-logs\" in the current working directory if not specified. The server automatically creates this directory if it doesn't exist.\n\nThe logging system uses:\n\nTerminal output with formatted, human-readable logs\nFile-based logging with separate files for different functional groups\n\n# Set logs directory via environment variable\nENV[\"RXINFER_SERVER_LOGS_LOCATION\"] = \"/path/to/logs\"\nRxInferServer.serve()\n\n\n\n\n\n","category":"function"},{"location":"configuration/#RxInferServer.Logging.RXINFER_SERVER_ENABLE_DEBUG_LOGGING","page":"Configuration","title":"RxInferServer.Logging.RXINFER_SERVER_ENABLE_DEBUG_LOGGING","text":"Whether to enable debug logging. This can be configured using the RXINFER_SERVER_ENABLE_DEBUG_LOGGING environment variable. Defaults to \"false\" if not specified. Note that this is a string variable, not a boolean. If enabled, writes to debug.log in the RXINFERSERVERLOGS_LOCATION directory. Note that the debug logs are overwritten each time the server is restarted.\n\nENV[\"RXINFER_SERVER_ENABLE_DEBUG_LOGGING\"] = \"true\"\nRxInferServer.serve()\n\n\n\n\n\n","category":"function"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"note: Note\nFor production deployments, consider setting a persistent, absolute path for your log files to ensure they are preserved and easily accessible for monitoring and debugging.","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"note: Note\nmake serve command runs the server with debug logging enabled.","category":"page"},{"location":"configuration/#mongodb-configuration","page":"Configuration","title":"MongoDB Configuration","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The MongoDB connection can be configured using the following environment variables:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.Database.RXINFER_SERVER_MONGODB_URL\nRxInferServer.Database.RXINFER_SERVER_MONGODB_DATABASE","category":"page"},{"location":"configuration/#RxInferServer.Database.RXINFER_SERVER_MONGODB_URL","page":"Configuration","title":"RxInferServer.Database.RXINFER_SERVER_MONGODB_URL","text":"The MongoDB connection URL for the server. This can be configured using the RXINFER_SERVER_MONGODB_URL environment variable. Defaults to mongodb://localhost:27017 if not specified.\n\n# Set MongoDB URL via environment variable\nENV[\"RXINFER_SERVER_MONGODB_URL\"] = \"mongodb://user:password@host:port/database\"\nRxInferServer.serve()\n\n\n\n\n\n","category":"function"},{"location":"configuration/#RxInferServer.Database.RXINFER_SERVER_MONGODB_DATABASE","page":"Configuration","title":"RxInferServer.Database.RXINFER_SERVER_MONGODB_DATABASE","text":"The MongoDB database name to use. This can be configured using the RXINFER_SERVER_MONGODB_DATABASE environment variable. Defaults to rxinferserver if not specified.\n\n# Set MongoDB database name via environment variable\nENV[\"RXINFER_SERVER_MONGODB_DATABASE\"] = \"my-database\"\nRxInferServer.serve()\n\n\n\n\n\n","category":"function"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The default connection URL for the Docker development environment is mongodb://database:27017, which connects to the MongoDB Atlas Local instance running in the Docker Compose environment. When deploying to production, you should set this to your actual MongoDB Atlas connection string or other MongoDB instance.","category":"page"},{"location":"configuration/#SSL-Certificates-for-MongoDB","page":"Configuration","title":"SSL Certificates for MongoDB","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"When connecting to MongoDB servers with SSL/TLS enabled, you'll need to provide appropriate certificate files. RxInferServer includes functionality to help find SSL certificates on your system.","category":"page"},{"location":"configuration/#Automatic-Certificate-Discovery","page":"Configuration","title":"Automatic Certificate Discovery","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"For remote MongoDB connections (not localhost), RxInferServer can automatically find and use SSL certificates from standard system locations. This behavior is controlled by the RXINFER_SERVER_SSL_CA_FILE environment variable:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.Database.RXINFER_SERVER_SSL_CA_FILE","category":"page"},{"location":"configuration/#RxInferServer.Database.RXINFER_SERVER_SSL_CA_FILE","page":"Configuration","title":"RxInferServer.Database.RXINFER_SERVER_SSL_CA_FILE","text":"The SSL/TLS CA file path to use for MongoDB connections. This can be configured using the RXINFER_SERVER_SSL_CA_FILE environment variable. If not specified, the system will try to automatically find a suitable CA certificate.\n\n# Set SSL CA file path via environment variable\nENV[\"RXINFER_SERVER_SSL_CA_FILE\"] = \"/path/to/ca.pem\"\nRxInferServer.serve()\n\n\n\n\n\n","category":"function"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"See more details in the Database section.","category":"page"},{"location":"configuration/#Using-MongoDB-Compass","page":"Configuration","title":"Using MongoDB Compass","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"If you're using MongoDB Compass to connect to and manage your MongoDB database during development:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"Always connect to localhost:27017 from your host machine (except when using the RxInferServer.Database.RXINFER_SERVER_MONGODB_URL environment variable)\nThis is because Docker maps the container's port 27017 to your host's port 27017\nNo authentication is required for the development database by default","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"For production MongoDB Atlas connections in Compass, you would use the standard Atlas connection string format.","category":"page"},{"location":"configuration/#cors-configuration","page":"Configuration","title":"CORS Configuration","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The server supports CORS configuration. The following environment variables can be set to configure the CORS settings:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_ORIGIN\nRxInferServer.RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_METHODS\nRxInferServer.RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_HEADERS","category":"page"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_ORIGIN","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_ORIGIN","text":"The allowed origins for CORS requests. This can be configured using the RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_ORIGIN environment variable. Defaults to \"*\" (all origins) if not specified.\n\n# Set allowed origins\nENV[\"RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_ORIGIN\"] = \"https://mydomain.com\"\n\nSee also: RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_ORIGIN\n\n\n\n\n\n","category":"function"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_METHODS","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_METHODS","text":"The allowed methods for CORS requests. This can be configured using the RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_METHODS environment variable. Defaults to \"GET, POST, PUT, DELETE, OPTIONS\" if not specified.\n\n# Set allowed methods\nENV[\"RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_METHODS\"] = \"GET, POST, PUT, DELETE, OPTIONS\"\n\nSee also: RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_METHODS\n\n\n\n\n\n","category":"function"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_HEADERS","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_HEADERS","text":"The allowed headers for CORS requests. This can be configured using the RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_HEADERS environment variable. Defaults to \"Content-Type, Authorization\" if not specified.\n\n# Set allowed headers\nENV[\"RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_HEADERS\"] = \"Content-Type, Authorization\"\n\nSee also: RXINFER_SERVER_CORS_ACCESS_CONTROL_ALLOW_HEADERS\n\n\n\n\n\n","category":"function"},{"location":"configuration/#authentication-configuration","page":"Configuration","title":"Authentication Configuration","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The server implements standard Bearer token authentication using the HTTP Authorization header. Most of the endpoints except for /generate-token and /ping require authentication by default.","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"When implementing client applications, you must include the token in the Authorization header with the Bearer prefix:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"Authorization: Bearer your-token-here","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"A simplified authentication for development can be configured through the environment variable:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.RXINFER_SERVER_ENABLE_DEV_TOKEN\nRxInferServer.DEFAULT_DEV_TOKEN\nRxInferServer.DEFAULT_DEV_TOKEN_ROLES\nRxInferServer.check_dev_token","category":"page"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_ENABLE_DEV_TOKEN","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_ENABLE_DEV_TOKEN","text":"An environment variable that can be used to enable development token authentication. By default, the development token is disabled and the RXINFER_SERVER_ENABLE_DEV_TOKEN environment variable set to \"false\". Set to \"true\" to enable development token authentication (do not use in production!). Note that RxInferServer checks this environment variable only once before starting the server.\n\n# Use a specific development token\nENV[\"RXINFER_SERVER_ENABLE_DEV_TOKEN\"] = \"true\"\n\n# Disable development token (production mode)\nENV[\"RXINFER_SERVER_ENABLE_DEV_TOKEN\"] = \"false\"\n\nIf enabled use dev-token as the development token. The development token has [\"user\"] roles by default. This, however, can be overriden by appending a different comma-separated list of roles directly into the development token after the : symbol. For example:\n\nENV[\"RXINFER_SERVER_ENABLE_DEV_TOKEN\"] = \"true\"\n\n# ...\n# token used for making requests with extra roles\ntoken = \"dev-token:user,admin\"\n\nwarning: Warning\nIn production environments, you should always set RXINFER_SERVER_ENABLE_DEV_TOKEN=false. Failure to do so will make the development token available and usable by anyone, which leads to a huge potential security risk.\n\nSee also: check_dev_token\n\n\n\n\n\n","category":"function"},{"location":"configuration/#RxInferServer.DEFAULT_DEV_TOKEN","page":"Configuration","title":"RxInferServer.DEFAULT_DEV_TOKEN","text":"DEFAULT_DEV_TOKEN\n\nThe default development token.\n\n\n\n\n\n","category":"constant"},{"location":"configuration/#RxInferServer.DEFAULT_DEV_TOKEN_ROLES","page":"Configuration","title":"RxInferServer.DEFAULT_DEV_TOKEN_ROLES","text":"DEFAULT_DEV_TOKEN_ROLES\n\nThe default roles for the development token.\n\n\n\n\n\n","category":"constant"},{"location":"configuration/#RxInferServer.check_dev_token","page":"Configuration","title":"RxInferServer.check_dev_token","text":"check_dev_token(token::String)\n\nChecks if the token provided is the development token. Additionally, parses the token to extract the roles from the token. Returns both the token and the roles if the token is the development token. Returns nothing if the token is not the development token.\n\nSee also: RXINFER_SERVER_ENABLE_DEV_TOKEN\n\n\n\n\n\n","category":"function"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"This is particularly useful for development and testing.","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"warning: Warning\nDo not use the development token in production environments.","category":"page"},{"location":"configuration/#server-edition-configuration","page":"Configuration","title":"Server Edition","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The server edition can be configured using the following environment variable:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.RXINFER_SERVER_EDITION","category":"page"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_EDITION","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_EDITION","text":"The server edition identifier. This can be configured using the RXINFER_SERVER_EDITION environment variable. This setting is used to identify the server edition in the server information endpoint and has no functional impact on server behavior. Defaults to \"CommunityEdition\" if not specified.\n\n# Set server edition via environment variable\nENV[\"RXINFER_SERVER_EDITION\"] = \"EnterpriseEdition\"\nRxInferServer.serve()\n\n\n\n\n\n","category":"function"},{"location":"configuration/#other-configuration","page":"Configuration","title":"Other Configuration","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.RXINFER_SERVER_SHOW_BANNER\nRxInferServer.RXINFER_SERVER_LISTEN_KEYBOARD","category":"page"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_SHOW_BANNER","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_SHOW_BANNER","text":"Whether to show the welcome banner. This can be configured using the RXINFER_SERVER_SHOW_BANNER environment variable. Defaults to \"true\" if not specified.\n\nENV[\"RXINFER_SERVER_SHOW_BANNER\"] = \"false\"\nRxInferServer.serve()\n\n\n\n\n\n","category":"function"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_LISTEN_KEYBOARD","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_LISTEN_KEYBOARD","text":"Whether to listen for keyboard input to quit the server. This can be configured using the RXINFER_SERVER_LISTEN_KEYBOARD environment variable. Defaults to \"true\" if not specified. Defaults to \"false\" if \"CI\" environment variable is set to \"true\".\n\nENV[\"RXINFER_SERVER_LISTEN_KEYBOARD\"] = \"false\"\nRxInferServer.serve()\n\n\n\n\n\n","category":"function"},{"location":"configuration/#hot-reloading-configuration","page":"Configuration","title":"Hot Reloading","text":"","category":"section"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"The server supports hot reloading, which automatically updates endpoints when code changes are detected.  This feature is controlled by the following environment variable:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"RxInferServer.RXINFER_SERVER_ENABLE_HOT_RELOAD\nRxInferServer.is_hot_reload_enabled","category":"page"},{"location":"configuration/#RxInferServer.RXINFER_SERVER_ENABLE_HOT_RELOAD","page":"Configuration","title":"RxInferServer.RXINFER_SERVER_ENABLE_HOT_RELOAD","text":"RXINFER_SERVER_ENABLE_HOT_RELOAD()\n\nWhether to enable hot reloading or not. This can be configured using the RXINFER_SERVER_ENABLE_HOT_RELOAD environment variable. Defaults to \"true\" if not specified, but Revise.jl must be loaded in the current Julia session for this functionality to work. If the setting is set to \"true\", but Revise.jl is not loaded, the server will not hot reload the source code and models when the source code changes and print a warning instead. Set to \"false\" to disable hot reloading even if Revise.jl is loaded.\n\nusing Revise\n\n# Check current setting\nENV[\"RXINFER_SERVER_ENABLE_HOT_RELOAD\"] = \"true\"\n\nRxInferServer.serve()\n\nSee also: RxInferServer.is_hot_reload_enabled\n\n\n\n\n\n","category":"function"},{"location":"configuration/#RxInferServer.is_hot_reload_enabled","page":"Configuration","title":"RxInferServer.is_hot_reload_enabled","text":"is_hot_reload_enabled()\n\nCheck if hot reloading is enabled.\n\n# Check current setting\nRxInferServer.is_hot_reload_enabled() \n\nSee also: RxInferServer.RXINFER_SERVER_ENABLE_HOT_RELOAD\n\n\n\n\n\n","category":"function"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"Hot reloading consists of two separate mechanisms:","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"Source Code Hot-Reloading: Updates API endpoints and server code when changes are detected\nModels Hot-Reloading: Refreshes models when their files change","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"Both mechanisms monitor files for changes using Revise.jl and automatically apply updates when detected. Console logs with the [HOT-RELOAD] prefix indicate reloading activity.","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"note: Note\nHot reloading requires Revise.jl to be loaded in the current Julia session. If Revise.jl is not loaded, hot reloading will be disabled even if enabled through the environment variable.","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"warning: Warning\nHot reloading should be disabled in production environments as it can impact performance and may cause unexpected behavior.","category":"page"},{"location":"configuration/","page":"Configuration","title":"Configuration","text":"","category":"page"},{"location":"developers-guide/#developers-guide","page":"Developers guide","title":"Developers guide","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"This section describes the development process for the RxInferServer.jl project and how to setup the development environment.","category":"page"},{"location":"developers-guide/#OpenAPI-Specification-and-Code-Generation","page":"Developers guide","title":"OpenAPI Specification and Code Generation","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"This repository includes an OpenAPI specification for the RxInferServer.jl API and tools to generate Julia server and client code from it.","category":"page"},{"location":"developers-guide/#Prerequisites","page":"Developers guide","title":"Prerequisites","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Docker and Docker Compose installed on your system\nVisual Studio Code (or your preferred code editor) for editing the OpenAPI specification","category":"page"},{"location":"developers-guide/#Development-environment-with-Docker","page":"Developers guide","title":"Development environment with Docker","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"To start the development environment with Docker, from the root directory of the repository, run:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"docker compose up -d --build --wait --wait-timeout 240","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Or use the Makefile convenience command:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"make docker-start","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"note: Note\nThe very first startup will be slower as all Docker images are being pulled and volumes are being created. Subsequent startups will be faster.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"To stop the Docker environment:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"make docker-stop","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Or alternatively, use VSCode extension \"Docker\" to start the containers. The VSCode extension also allows to check the logs and attach to the running containers. Read more about docker here: Docker.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The docker-compose.yaml currently has the following services:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Swagger UI: a web interface for visualizing and testing the OpenAPI specification, the UI is available at http://localhost:8080 and allows to test the API endpoints, the endpoints can also be tested in VSCode by opening spec.yaml directly and clicking on the \"Try it\" button\nMongoDB Atlas Local: a local MongoDB instance running on localhost:27017 that mimics MongoDB Atlas functionality for development and testing purposes","category":"page"},{"location":"developers-guide/#Starting-the-RxInferServer","page":"Developers guide","title":"Starting the RxInferServer","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Unlike the Docker services, RxInferServer now needs to be started manually. To start the server in the development mode, run:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"make dev","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"This command will start the server on localhost:8000 with hot-reloading enabled and debug logging enabled by default. ","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"note: Note\nThe very first startup will be slower as all Julia packages are being installed and precompiled. Subsequent startups will be faster as the system image is already built unless there is a significant change to the dependencies of the project or its source code in which case Julia will recompile the project again.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"You can verify the server is running by accessing the health check endpoint:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"curl -f localhost:8000/v1/ping","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"If the server is running correctly, this should return a successful response. See the .env.development file for more details on the options used to start the server in the development mode.","category":"page"},{"location":"developers-guide/#Hot-Reloading","page":"Developers guide","title":"Hot-Reloading","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"RxInferServer includes built-in hot-reloading that automatically applies code changes without requiring server restarts.","category":"page"},{"location":"developers-guide/#Overview","page":"Developers guide","title":"Overview","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The server uses two separate hot-reloading mechanisms:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Source Code Hot-Reloading: Updates API endpoints and server code\nModels Hot-Reloading: Refreshes models when their files change","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Both mechanisms monitor files for changes using Revise.jl and automatically apply updates when detected. Console logs with the [HOT-RELOAD] prefix indicate reloading activity.","category":"page"},{"location":"developers-guide/#Controlling-Hot-Reloading","page":"Developers guide","title":"Controlling Hot-Reloading","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Hot reloading can be controlled through the RXINFER_SERVER_ENABLE_HOT_RELOAD environment variable:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"# Enable hot reloading (default is \"false\")\nexport RXINFER_SERVER_ENABLE_HOT_RELOAD=\"true\"\n\n# Start the server with hot reloading enabled\nmake serve","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"note: Note\nHot reloading requires Revise.jl to be loaded in the current Julia session. If Revise.jl is not loaded, hot reloading will be disabled even if enabled through the environment variable.","category":"page"},{"location":"developers-guide/#Best-Practices-and-Troubleshooting","page":"Developers guide","title":"Best Practices and Troubleshooting","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Hot-reloading works best for typical code changes but complex structural changes may require server restart\nDisable hot-reloading in production environments by setting RXINFER_SERVER_ENABLE_HOT_RELOAD=\"false\"\nIf issues occur, check logs for [HOT-RELOAD] errors and verify files are in monitored directories\nWhen hot reloading is enabled but not working, ensure Revise.jl is loaded in your Julia session","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"See Hot Reloading for more details.","category":"page"},{"location":"developers-guide/#Development-Workflow-with-Makefile","page":"Developers guide","title":"Development Workflow with Makefile","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The project includes a Makefile with various commands to streamline common development tasks. Here are some of the most useful commands:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"# Start the Docker environment (Swagger UI and MongoDB)\nmake docker-start\n\n# Stop the Docker environment\nmake docker-stop\n\n# Start the RxInferServer in production mode\n# (1) debug logging enabled\n# (2) hot-reloading enabled\n# (3) test models loaded\n# (4) development token enabled\nmake dev\n\n# Start the RxInferServer normally\nmake serve\n\n# Run the test suite\nmake test\n\n# Install dependencies\nmake deps\n\n# Build documentation\nmake docs\n\n# Generate OpenAPI client code\nmake generate-client\n\n# Generate OpenAPI server code\nmake generate-server\n\n# Generate both client and server code\nmake generate-all\n\n# Format Julia code\nmake format\n\n# Check code formatting without modifying files\nmake check-format","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"For a full list of available commands, run:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"make help","category":"page"},{"location":"developers-guide/#MongoDB-in-Development","page":"Developers guide","title":"MongoDB in Development","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The development environment includes a MongoDB Atlas Local instance that's accessible to the RxInferServer service. The connection is pre-configured and available through the environment variable RXINFER_MONGODB_URL.","category":"page"},{"location":"developers-guide/#Connecting-with-MongoDB-Compass","page":"Developers guide","title":"Connecting with MongoDB Compass","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"MongoDB Compass is a GUI for MongoDB that allows you to explore and manipulate your data visually. To connect to the development MongoDB instance:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Download and install MongoDB Compass\nOpen MongoDB Compass\nUse the following connection string to connect to the local MongoDB instance:\nmongodb://localhost:27017\nClick \"Connect\"","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Note that when connecting from your host machine (outside the Docker network), you'll always use localhost:27017 as the address (except when using the RXINFER_MONGODB_URL environment variable). This is because the Docker port mapping makes the database accessible at this address on your host machine.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"When running in the Docker development environment, the connection URL will automatically point to the MongoDB container (mongodb://database:27017).","category":"page"},{"location":"developers-guide/#Editing-the-OpenAPI-Specification","page":"Developers guide","title":"Editing the OpenAPI Specification","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Edit the openapi/spec.yaml file directly in VSCode or your preferred code editor. The OpenAPI specification uses the YAML format and follows the OpenAPI 3 standard.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Some useful VS Code extensions for working with OpenAPI specifications include:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"\"OpenAPI (Swagger) Editor\" by 42Crunch\n\"YAML\" by Red Hat\n\"Docker\" by Microsoft","category":"page"},{"location":"developers-guide/#Accessing-Swagger-UI","page":"Developers guide","title":"Accessing Swagger UI","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Open your browser and navigate to: http://localhost:8080","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The Swagger UI will automatically load the openapi/spec.yaml file, allowing you to visualize and test your API without leaving your browser. Alternatively, you can test the API endpoints in VSCode by opening spec.yaml directly and clicking on the \"Try it\" button.","category":"page"},{"location":"developers-guide/#Testing-Authenticated-Endpoints","page":"Developers guide","title":"Testing Authenticated Endpoints","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The API uses standard Bearer token authentication with the Authorization header. Here's how to test authenticated endpoints:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Get a token:\nNavigate to the /generate-token endpoint\nClick \"Try it out\" followed by \"Execute\"\nCopy the token from the response\nFor development: You can use the predefined dev token enabled by setting the RXINFER_SERVER_ENABLE_DEV_TOKEN environment variable to true.\nSet up authentication:\nClick the \"Authorize\" button (padlock icon) at the top of Swagger UI\nEnter your token in the value field (without \"Bearer\" prefix)\nFor local development, you can enter dev-token\nClick \"Authorize\" and \"Close\"\nThe client will send requests with Authorization: Bearer your-token-here\nTest protected endpoints:\nAll subsequent requests will include the authorization header\nThe token remains active until you log out or close the browser\nBy default, all endpoints except /generate-token and /ping require authentication","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"See Configuration for more details on setting up authentication for development and production.","category":"page"},{"location":"developers-guide/#Generating-Code-from-OpenAPI-Specification","page":"Developers guide","title":"Generating Code from OpenAPI Specification","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"You can generate both server and client code from the OpenAPI specification using the provided scripts and Makefile commands.","category":"page"},{"location":"developers-guide/#Generating-Code-with-Makefile","page":"Developers guide","title":"Generating Code with Makefile","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The project includes several convenient Makefile commands for code generation:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"# Generate only the client code\nmake generate-client\n\n# Generate only the server code\nmake generate-server\n\n# Generate both client and server code in one go\nmake generate-all","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"These commands use the underlying combined script to perform the code generation with appropriate settings.","category":"page"},{"location":"developers-guide/#Using-the-Generation-Script-Directly","page":"Developers guide","title":"Using the Generation Script Directly","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"You can also run the generation script directly with various options:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"# Generate both client and server code (default)\n./openapi/generate.sh all\n\n# Generate only client code\n./openapi/generate.sh client\n\n# Generate only server code\n./openapi/generate.sh server\n\n# Generate to a custom output directory\nOPENAPI_OUTPUT_DIR=\"/path/to/output\" ./openapi/generate.sh all","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The script checks if Docker is running, then uses the OpenAPI Generator Docker image to generate Julia code based on the OpenAPI specification.","category":"page"},{"location":"developers-guide/#Customizing-Output-Location","page":"Developers guide","title":"Customizing Output Location","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"By default, generated code is placed in the openapi/client and openapi/server directories. You can customize this by setting the OPENAPI_OUTPUT_DIR environment variable:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"# Example: Generate code to a different directory\nOPENAPI_OUTPUT_DIR=\"/path/to/custom/directory\" ./openapi/generate.sh all","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The script will create client and server subdirectories under the specified path.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"note: Note\nAfter the re-generation of the server code, the initial startup time will be longer due to initial compilation of the generated code.","category":"page"},{"location":"developers-guide/#Working-with-the-Generated-Code","page":"Developers guide","title":"Working with the Generated Code","text":"","category":"section"},{"location":"developers-guide/#Server-Code","page":"Developers guide","title":"Server Code","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The generated server code will be placed in the openapi/server directory as a separate Julia module and should never be modified directly. The RxInferServer.jl package will automatically load the generated code when the package is loaded. ","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The generated code does not contain the actual implementation of the endpoints. The actual implementation is located in the src/tags directory for each tag specified in the OpenAPI specification. You can also manually open the openapi/server/src/RxInferServerOpenAPI.jl file to view which endpoints must be implemented. An example generated output might look like this:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"@doc raw\"\"\"\nEncapsulates generated server code for RxInferServerOpenAPI\n\nThe following server methods must be implemented:\n\n- **get_server_info**\n    - *invocation:* GET /info\n    - *signature:* get_server_info(req::HTTP.Request;) -> ServerInfo\n\"\"\"\nmodule RxInferServerOpenAPI\n\n# ... a lot of auto generated code ...\n\nend","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"This tells you that you need to implement the get_server_info function that must return a ServerInfo object as defined in the openapi/spec.yaml file. You however, can also return other types of objects, for example ErrorResponse or UnauthorizedResponse. Those will be converted to the appropriate HTTP response codes by the server.","category":"page"},{"location":"developers-guide/#Implementing-API-Endpoints","page":"Developers guide","title":"Implementing API Endpoints","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"To implement a new API endpoint, you'll need to create a handler function that processes HTTP requests and returns appropriate responses. Each endpoint function should match the signature defined in the OpenAPI specification. You'll need to implement these functions with your business logic. Endpoints typically involve parsing request parameters, performing operations (like database queries), and formatting responses according to the API specification. For authenticated endpoints, you can use RxInferServer.current_token() and RxInferServer.current_roles() to access authentication information. ","category":"page"},{"location":"developers-guide/#Using-the-@expect-macro","page":"Developers guide","title":"Using the @expect macro","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The @expect macro is a helper macro that allows you to handle errors and return a default value from a function when an unexpected value is encountered.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"RxInferServer.@expect","category":"page"},{"location":"developers-guide/#RxInferServer.@expect","page":"Developers guide","title":"RxInferServer.@expect","text":"@expect expr || default\n\nEvaluates expr and returns its value if it's not nothing.  If expr evaluates to nothing, exits the current function immediately and returns default.\n\nThis operation is useful to handle errors and return a default value from a function when an unexpected value is encountered. Might be useful to handle database operations that return nothing to indicate an error.\n\nfunction update_user(id::String)\n    user = @expect __database_op_get_user(id) || return RxInferServerOpenAPI.ErrorResponse(\n        error = \"Bad Request\", message = \"Unable to get user due to internal error\"\n    )\n\n    ## update user here\n\n    return user\nend\n\nThis function will return an error response if the user is not found.\nOtherwise, it will update the user and return the updated user.\n\n\n\n\n\n","category":"macro"},{"location":"developers-guide/#Client-Code","page":"Developers guide","title":"Client Code","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"The generated client code will be placed in the openapi/client directory as a separate Julia module. This client code can be used to interact with the RxInfer API from Julia applications. The client provides Julia functions that correspond to each API endpoint defined in the OpenAPI specification.","category":"page"},{"location":"developers-guide/#Customizing-the-OpenAPI-Specification","page":"Developers guide","title":"Customizing the OpenAPI Specification","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Edit the openapi/spec.yaml file directly in your code editor to customize your API specification. ","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"warning: Important\nAfter making ANY changes to the OpenAPI specification, you MUST regenerate both the server and client code by running the generation scripts again or using the Makefile command make generate-all.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"See Generating Code from OpenAPI Specification for more details.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Failing to regenerate the code after changes to the OpenAPI specification will result in inconsistencies between your API specification and the actual server implementation. The code is not being re-generated automatically for two primary reasons:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"It might be somewhat slow for a lot of endpoints\nIt most likely will cause Revise errors with redefined structures ","category":"page"},{"location":"developers-guide/#Additional-Resources","page":"Developers guide","title":"Additional Resources","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"OpenAPI Specification\nOpenAPI Generator\nJulia Server Template\nJulia Client Template","category":"page"},{"location":"developers-guide/#Working-with-Authorization-in-Endpoints","page":"Developers guide","title":"Working with Authorization in Endpoints","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Most endpoints in RxInferServer require authentication. The middleware automatically handles token validation, but your endpoint implementation often needs to access the current user's token or roles for authorization decisions.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"RxInferServer.is_authorized\nRxInferServer.current_token\nRxInferServer.current_roles","category":"page"},{"location":"developers-guide/#RxInferServer.is_authorized","page":"Developers guide","title":"RxInferServer.is_authorized","text":"is_authorized()::Bool\n\nChecks if the current request is authenticated. Returns true if a token is available in the current scope, false otherwise.\n\nSee also: current_token, current_roles\n\n\n\n\n\n","category":"function"},{"location":"developers-guide/#RxInferServer.current_token","page":"Developers guide","title":"RxInferServer.current_token","text":"current_token()::String\n\nReturns the current authenticated user's token string. This function should only be called within endpoints that require authentication.\n\nSee also: is_authorized, current_roles\n\n\n\n\n\n","category":"function"},{"location":"developers-guide/#RxInferServer.current_roles","page":"Developers guide","title":"RxInferServer.current_roles","text":"current_roles()::Vector{String}\n\nReturns the roles assigned to the current authenticated user as a vector of strings. This function should only be called within endpoints that require authentication.\n\nSee also: is_authorized, current_token\n\n\n\n\n\n","category":"function"},{"location":"developers-guide/#Using-current_token()-and-current_roles()","page":"Developers guide","title":"Using current_token() and current_roles()","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"RxInferServer provides two helper functions for accessing the authenticated user's information:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"current_token(): Returns the authenticated user's token string\ncurrent_roles(): Returns a vector of role strings assigned to the current user","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Here's how to implement an endpoint that requires authorization:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"function get_protected_resource(req::HTTP.Request)::HTTP.Response\n    # The middleware has already verified that the request is authenticated\n    \n    # If you need the token for any reason (e.g., logging, user-specific resources)\n    token = current_token()\n    \n    # If you need to check roles for authorization\n    roles = current_roles()\n    \n    # Example: Filter resources based on user roles\n    if \"admin\" in roles\n        # Return admin-level resources\n    else\n        # Return regular user resources\n    end\n    \n    return HTTP.Response(200, your_response_data)\nend","category":"page"},{"location":"developers-guide/#Example:-Role-Based-Resource-Filtering","page":"Developers guide","title":"Example: Role-Based Resource Filtering","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"Here's a real example from the get_models endpoint that filters models based on user roles:","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"function get_models(req::HTTP.Request)::HTTP.Response\n    # Get models from storage\n    models = Models.get_models()\n\n    # Get current user's roles\n    roles = current_roles()\n\n    # Filter models by checking if any of the model's roles\n    # match any of the user's roles\n    filtered_models = filter(models) do model\n        return any(r -> r in roles, model.roles)\n    end\n\n    # rest of the implementation...\nend","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"note: Note\nThese functions will throw an error if called in a non-authenticated context. Always ensure they are only called in endpoints protected by the authentication middleware.","category":"page"},{"location":"developers-guide/#API-Reference","page":"Developers guide","title":"API Reference","text":"","category":"section"},{"location":"developers-guide/#Server-Lifecycle-Management","page":"Developers guide","title":"Server Lifecycle Management","text":"","category":"section"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"RxInferServer uses a ServerState struct to manage the server's lifecycle and state. This is created automatically when the server is instantiated with the RxInferServer.serve function. This structure is used internally to keep track of the server's status and manage the server's lifecycle. The most notable use case is for the hot-reloading mechanism to check if the server is running and/or has encountered an error. The hot-reloading tasks also track the server pid file to trigger the hot-reloading tasks when the server is instantiated or shuts down.","category":"page"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"RxInferServer.ServerState\nRxInferServer.RoutesHandler\nRxInferServer.is_server_running\nRxInferServer.set_server_running\nRxInferServer.is_server_errored\nRxInferServer.set_server_errored\nRxInferServer.notify_instantiated\nRxInferServer.wait_instantiated\nRxInferServer.pid_server_event","category":"page"},{"location":"developers-guide/#RxInferServer.ServerState","page":"Developers guide","title":"RxInferServer.ServerState","text":"ServerState\n\nA structure that keeps track of the server state, including whether it is running or has errored. Used internally to check server status and manage server lifecycle events.\n\nFields\n\nis_running::Threads.Atomic{Bool}: Atomic boolean indicating if server is currently running\nis_errored::Threads.Atomic{Bool}: Atomic boolean indicating if server has encountered an error\nevent_instantiated::Base.Threads.Event: Event triggered when server is instantiated\npid_file::String: File path used to trigger the hot reload task\nrouter::HTTP.Router: The HTTP router handling server requests\nhandler::H: The handler for the routes, defaults to RxInferServer.RoutesHandler()\nip::Sockets.IPv4: IP address the server binds to\nport::Int: Port number the server listens on\n\n\n\n\n\n","category":"type"},{"location":"developers-guide/#RxInferServer.RoutesHandler","page":"Developers guide","title":"RxInferServer.RoutesHandler","text":"RoutesHandler\n\nA structure that is used to handle the routes. It is used to inject extra post-processing logic into the routes,  e.g. overriding the JSON serialization settings and the response codes.\n\n\n\n\n\n","category":"type"},{"location":"developers-guide/#RxInferServer.is_server_running","page":"Developers guide","title":"RxInferServer.is_server_running","text":"is_server_running(server::ServerState) -> Bool\n\nCheck if the server is currently running.\n\nSee also: RxInferServer.set_server_running\n\n\n\n\n\n","category":"function"},{"location":"developers-guide/#RxInferServer.set_server_running","page":"Developers guide","title":"RxInferServer.set_server_running","text":"set_server_running(server::ServerState, running::Bool)\n\nSet the server running flag to the given value.\n\nSee also: RxInferServer.is_server_running\n\n\n\n\n\n","category":"function"},{"location":"developers-guide/#RxInferServer.is_server_errored","page":"Developers guide","title":"RxInferServer.is_server_errored","text":"is_server_errored(server::ServerState) -> Bool\n\nCheck if the server has encountered an error.\n\nSee also: RxInferServer.set_server_errored\n\n\n\n\n\n","category":"function"},{"location":"developers-guide/#RxInferServer.set_server_errored","page":"Developers guide","title":"RxInferServer.set_server_errored","text":"set_server_errored(server::ServerState, errored::Bool)\n\nSet the server errored flag to the given value.\n\nSee also: RxInferServer.is_server_errored\n\n\n\n\n\n","category":"function"},{"location":"developers-guide/#RxInferServer.notify_instantiated","page":"Developers guide","title":"RxInferServer.notify_instantiated","text":"notify_instantiated(server::ServerState)\n\nNotify threads which are waiting for the server to be instantiated.\n\nSee also: RxInferServer.wait_instantiated\n\n\n\n\n\n","category":"function"},{"location":"developers-guide/#RxInferServer.wait_instantiated","page":"Developers guide","title":"RxInferServer.wait_instantiated","text":"wait_instantiated(server::ServerState)\n\nWait for the server to be instantiated.\n\nSee also: RxInferServer.notify_instantiated\n\n\n\n\n\n","category":"function"},{"location":"developers-guide/#RxInferServer.pid_server_event","page":"Developers guide","title":"RxInferServer.pid_server_event","text":"pid_server_event(server::ServerState, event::String)\n\nLogs an event to the server's PID file. This is used, for example, to trigger the hot reload task when the server is instantiated or shuts down.\n\n\n\n\n\n","category":"function"},{"location":"developers-guide/","page":"Developers guide","title":"Developers guide","text":"","category":"page"},{"location":"components/models/#models","page":"Models","title":"Models","text":"","category":"section"},{"location":"components/models/","page":"Models","title":"Models","text":"RxInferServer provides a flexible system for loading, managing, and exposing RxInfer probabilistic models through the API. This section explains the technical implementation details of how models work in the server, including the model dispatcher, loading process, and API integration.","category":"page"},{"location":"components/models/","page":"Models","title":"Models","text":"For information about how to create and add new models, please refer to the How to Add a Model manual.","category":"page"},{"location":"components/models/#Model-System-Overview","page":"Models","title":"Model System Overview","text":"","category":"section"},{"location":"components/models/","page":"Models","title":"Models","text":"The model system in RxInferServer consists of several key components:","category":"page"},{"location":"components/models/","page":"Models","title":"Models","text":"RxInferServer.Models.ModelsDispatcher: Manages model discovery, loading, and access\nRxInferServer.Models.LoadedModel: Represents a loaded model with its configuration and implementation\nModel registry: Maintains a collection of available models\nHot-reloading system: Enables dynamic model updates during development","category":"page"},{"location":"components/models/#Model-Discovery-and-Loading","page":"Models","title":"Model Discovery and Loading","text":"","category":"section"},{"location":"components/models/","page":"Models","title":"Models","text":"The server discovers and loads models at startup using this process:","category":"page"},{"location":"components/models/","page":"Models","title":"Models","text":"It scans all directories specified in RxInferServer.Models.RXINFER_SERVER_MODELS_LOCATIONS\nFor each directory, it looks for subdirectories that might contain models\nIn each subdirectory, it checks for model.jl and config.yaml files\nIf both files exist, it loads the model's configuration and code\nThe model is added to the server's model registry if successful","category":"page"},{"location":"components/models/","page":"Models","title":"Models","text":"Models are accessed through a RxInferServer.Models.ModelsDispatcher which provides methods to retrieve models by name or list all available (non-private) models.","category":"page"},{"location":"components/models/#Hot-Reloading-System","page":"Models","title":"Hot-Reloading System","text":"","category":"section"},{"location":"components/models/","page":"Models","title":"Models","text":"RxInferServer supports hot-reloading of models during development. When model files are modified:","category":"page"},{"location":"components/models/","page":"Models","title":"Models","text":"The server detects the changes automatically\nIt reloads all models from their directories\nThe updated models become immediately available through the API","category":"page"},{"location":"components/models/","page":"Models","title":"Models","text":"This feature is enabled by default during development and can be disabled through the server's configuration. See Hot-Reloading for more details.","category":"page"},{"location":"components/models/#API-Integration","page":"Models","title":"API Integration","text":"","category":"section"},{"location":"components/models/","page":"Models","title":"Models","text":"Models are exposed through the API endpoints defined in the OpenAPI specification. When a client requests model information or executes a model, the server:","category":"page"},{"location":"components/models/","page":"Models","title":"Models","text":"Looks up the requested model by name using the dispatcher\nIf found, returns the model's metadata\nReturns appropriate error responses if the model is not found or other issues occur","category":"page"},{"location":"components/models/#API-Reference","page":"Models","title":"API Reference","text":"","category":"section"},{"location":"components/models/","page":"Models","title":"Models","text":"RxInferServer.Models\nRxInferServer.Models.ModelsDispatcher\nRxInferServer.Models.LoadedModel\nRxInferServer.Models.get_models\nRxInferServer.Models.get_model\nRxInferServer.Models.load_models!\nRxInferServer.Models.reload!\nRxInferServer.Models.with_models\nRxInferServer.Models.get_models_dispatcher\nRxInferServer.Models.serialize_parameters\nRxInferServer.Models.serialize_state\nRxInferServer.Models.deserialize_state\nRxInferServer.Models.deserialize_parameters\nRxInferServer.Models.validate_model_config_header\nRxInferServer.Models.validate_model_config_arguments\nRxInferServer.Models.parse_model_config_default_arguments\nRxInferServer.Models.ModelConfigurationValidationError","category":"page"},{"location":"components/models/#RxInferServer.Models","page":"Models","title":"RxInferServer.Models","text":"Models\n\nModule responsible for loading, managing, and accessing RxInfer probabilistic models in the server. Handles model discovery, loading, and provides access to models through a dispatcher.\n\n\n\n\n\n","category":"module"},{"location":"components/models/#RxInferServer.Models.ModelsDispatcher","page":"Models","title":"RxInferServer.Models.ModelsDispatcher","text":"ModelsDispatcher\n\nA dispatcher that manages loaded models from specified locations. Responsible for model discovery, loading, and providing access to models.\n\nFields\n\nlocations::L: The locations where models are stored\nmodels::M: Dictionary mapping model names to loaded model instances\n\n\n\n\n\n","category":"type"},{"location":"components/models/#RxInferServer.Models.LoadedModel","page":"Models","title":"RxInferServer.Models.LoadedModel","text":"LoadedModel\n\nRepresents a loaded RxInfer probabilistic model with its metadata and implementation.\n\nFields\n\npath::String: Path to the model directory\nname::String: Name of the model\ndescription::String: Description of the model's purpose and functionality\nauthor::String: Author or organization that created the model\nroles::Vector{String}: List of roles that can access the model\nconfig::Dict{String, Any}: Configuration parameters for the model\nmod::Module: Julia module containing the model's implementation\n\n\n\n\n\n","category":"type"},{"location":"components/models/#RxInferServer.Models.get_models","page":"Models","title":"RxInferServer.Models.get_models","text":"get_models(dispatcher::ModelsDispatcher; role = nothing)\n\nGet all non-private models from the given dispatcher.\n\nArguments\n\ndispatcher::ModelsDispatcher: The dispatcher to get models from\nroles::Union{Vector{String}, Nothing}: The roles to filter models by (optional)\n\nReturns\n\nA collection of all non-private loaded models\n\n\n\n\n\nget_models()\n\nGet all non-private models using the current dispatcher.\n\nReturns\n\nA collection of all non-private loaded models\n\n\n\n\n\n","category":"function"},{"location":"components/models/#RxInferServer.Models.get_model","page":"Models","title":"RxInferServer.Models.get_model","text":"get_model(dispatcher::ModelsDispatcher, model_name::String)\n\nGet a specific model by name from the dispatcher.\n\nArguments\n\ndispatcher::ModelsDispatcher: The dispatcher to get the model from\nmodel_name::String: The name of the model to retrieve\n\nReturns\n\nLoadedModel or nothing: The requested model if found, otherwise nothing\n\n\n\n\n\nget_model(model_name::String)\n\nGet a specific model by name from the current dispatcher.\n\nArguments\n\nmodel_name::String: The name of the model to retrieve\n\nReturns\n\nLoadedModel or nothing: The requested model if found, otherwise nothing\n\n\n\n\n\n","category":"function"},{"location":"components/models/#RxInferServer.Models.load_models!","page":"Models","title":"RxInferServer.Models.load_models!","text":"load_models!(models, locations)\n\nLoad models from the specified locations into the models dictionary.\n\nArguments\n\nmodels: Dictionary to populate with loaded models (name => LoadedModel)\nlocations: List of directories to scan for models\n\nThrows\n\nErrorException: If a location does not exist or if duplicate model names are found\n\n\n\n\n\n","category":"function"},{"location":"components/models/#RxInferServer.Models.reload!","page":"Models","title":"RxInferServer.Models.reload!","text":"reload!(dispatcher::ModelsDispatcher)\n\nReload all models from the dispatcher's locations, updating the dispatcher's models. Used for hot-reloading models when their files change.\n\nArguments\n\ndispatcher::ModelsDispatcher: The dispatcher to reload models for\n\nwarning: Warning\nThis function completely replaces the models dictionary with newly loaded models, allowing for model updates, additions, and removals to be recognized. Indented for interactive use only.\n\n\n\n\n\n","category":"function"},{"location":"components/models/#RxInferServer.Models.with_models","page":"Models","title":"RxInferServer.Models.with_models","text":"with_models(f::Function; locations = RXINFER_SERVER_MODELS_LOCATIONS())\n\nExecute function f with an initialized models dispatcher for the given locations. Creates a scoped context where models can be accessed via the dispatcher.\n\nArguments\n\nf::Function: The function to execute within the models context\nlocations: The locations to scan for models, defaults to RXINFER_SERVER_MODELS_LOCATIONS()\n\n\n\n\n\n","category":"function"},{"location":"components/models/#RxInferServer.Models.get_models_dispatcher","page":"Models","title":"RxInferServer.Models.get_models_dispatcher","text":"get_models_dispatcher()::ModelsDispatcher\n\nGet the current active models dispatcher. Must be called within a with_models context.\n\nReturns\n\nModelsDispatcher: The active models dispatcher\n\nThrows\n\nErrorException: If called outside of a with_models context\n\n\n\n\n\n","category":"function"},{"location":"components/models/#RxInferServer.Models.serialize_parameters","page":"Models","title":"RxInferServer.Models.serialize_parameters","text":"serialize_parameters(parameters)\n\nSerialize the given parameters to an opaque binary format.\n\n\n\n\n\n","category":"function"},{"location":"components/models/#RxInferServer.Models.serialize_state","page":"Models","title":"RxInferServer.Models.serialize_state","text":"serialize_state(state)\n\nSerialize the given state to an opaque binary format.\n\n\n\n\n\n","category":"function"},{"location":"components/models/#RxInferServer.Models.deserialize_state","page":"Models","title":"RxInferServer.Models.deserialize_state","text":"deserialize_state(state_buffer)\n\nDeserialize the given state from an opaque binary format.\n\n\n\n\n\n","category":"function"},{"location":"components/models/#RxInferServer.Models.deserialize_parameters","page":"Models","title":"RxInferServer.Models.deserialize_parameters","text":"deserialize_parameters(parameters_buffer)\n\nDeserialize the given parameters from an opaque binary format.\n\n\n\n\n\n","category":"function"},{"location":"components/models/#RxInferServer.Models.validate_model_config_header","page":"Models","title":"RxInferServer.Models.validate_model_config_header","text":"validate_model_config_header(config)\n\nValidate the model config header. This includes checking that the config satisfies the model config schema. The function checks the existence of the following named keys:\n\nname must be a string\ndescription must be a string\nauthor must be a string\nroles must be an array of strings\n\nArguments\n\nconfig: The model configuration\n\nReturns\n\nnothing: If the model configuration is valid\nRxInferServer.Models.ModelConfigurationValidationError: If the model configuration is invalid\n\n\n\n\n\n","category":"function"},{"location":"components/models/#RxInferServer.Models.validate_model_config_arguments","page":"Models","title":"RxInferServer.Models.validate_model_config_arguments","text":"validate_model_config_required_arguments(config, arguments)\n\nValidate the arguments from the model configuration. This includes checking that \n\nthe required arguments are present\n\nArguments\n\nconfig: The model configuration\narguments: The arguments to validate\n\n\n\n\n\n","category":"function"},{"location":"components/models/#RxInferServer.Models.parse_model_config_default_arguments","page":"Models","title":"RxInferServer.Models.parse_model_config_default_arguments","text":"parse_model_config_default_arguments(config)\n\nParse the default arguments from the model configuration.\n\nArguments\n\nconfig: The model configuration\n\nReturns\n\nDict{String, Any}: The default arguments\n\n\n\n\n\n","category":"function"},{"location":"components/models/#RxInferServer.Models.ModelConfigurationValidationError","page":"Models","title":"RxInferServer.Models.ModelConfigurationValidationError","text":"ModelConfigurationValidationError\n\nA custom error type for model configuration validation errors.\n\n\n\n\n\n","category":"type"},{"location":"components/models/","page":"Models","title":"Models","text":"","category":"page"},{"location":"openapi/Models/ServerInfo/","page":"ServerInfo","title":"ServerInfo","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/ServerInfo/#ServerInfo","page":"ServerInfo","title":"ServerInfo","text":"","category":"section"},{"location":"openapi/Models/ServerInfo/#Properties","page":"ServerInfo","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/ServerInfo/","page":"ServerInfo","title":"ServerInfo","text":"Name Type Description Notes\nrxinfer_version String The version of RxInfer that the server is using, returns unknown if the version is unknown or hidden [default to null]\nserver_version String The version of the RxInferServer, returns unknown if the version is unknown or hidden [default to null]\nserver_edition String The edition of the RxInferServer, as set in RXINFER_EDITION environment variable [default to null]\njulia_version String The version of Julia as presented in VERSION [default to null]\napi_version String The version of the API being used [default to v1]","category":"page"},{"location":"openapi/Models/ServerInfo/","page":"ServerInfo","title":"ServerInfo","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/ServerInfo/","page":"ServerInfo","title":"ServerInfo","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/ServerInfo/","page":"ServerInfo","title":"ServerInfo","text":"","category":"page"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/README/#Documentation-for-RxInferServer-OpenAPI-specification","page":"Overview","title":"Documentation for RxInferServer OpenAPI specification","text":"","category":"section"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"<a name=\"documentation-for-api-endpoints\"></a>","category":"page"},{"location":"openapi/README/#Documentation-for-API-Endpoints","page":"Overview","title":"Documentation for API Endpoints","text":"","category":"section"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"All URIs are relative to http://localhost:8000/v1","category":"page"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"Class Method HTTP request Description\nAuthenticationApi token_generate POST /token/generate Generate authentication token\nAuthenticationApi token_roles GET /token/roles Get token roles\nModelsApi attach_events_to_episode POST /models/i/{instanceid}/episodes/{episodename}/attach-events Attach events to an episode\nModelsApi attach_metadata_to_event POST /models/i/{instanceid}/episodes/{episodename}/events/{event_id}/attach-metadata Attach metadata to an event\nModelsApi create_episode POST /models/i/{instance_id}/create-episode Create a new episode for a model instance\nModelsApi create_model_instance POST /models/create-instance Create a new model instance\nModelsApi delete_episode DELETE /models/i/{instanceid}/episodes/{episodename} Delete an episode for a model\nModelsApi delete_model_instance DELETE /models/i/{instance_id} Delete a model instance\nModelsApi get_available_model GET /models/available/{model_name} Get information about a specific model available for creation\nModelsApi get_available_models GET /models/available Get models available for creation\nModelsApi get_episode_info GET /models/i/{instanceid}/episodes/{episodename} Get episode information\nModelsApi get_episodes GET /models/i/{instance_id}/episodes Get all episodes for a model instance\nModelsApi get_model_instance GET /models/i/{instance_id} Get model instance information\nModelsApi get_model_instanceParameters GET /models/i/{instance_id}/parameters Get the parameters of a model instance\nModelsApi get_model_instanceState GET /models/i/{instance_id}/state Get the state of a model instance\nModelsApi get_model_instances GET /models/instances Get all created model instances\nModelsApi run_inference POST /models/i/{instance_id}/infer Run inference\nModelsApi run_learning POST /models/i/{instance_id}/learn Learn from previous observations\nModelsApi wipe_episode POST /models/i/{instanceid}/episodes/{episodename}/wipe Wipe all events from an episode\nServerApi get_server_info GET /info Get server information\nServerApi ping_server GET /ping Health check endpoint","category":"page"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"<a name=\"documentation-for-models\"></a>","category":"page"},{"location":"openapi/README/#Documentation-for-Models","page":"Overview","title":"Documentation for Models","text":"","category":"section"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"AttachEventsToEpisodeRequest\nAttachEventsToEpisodeRequesteventsinner\nAttachMetadataToEventRequest\nAvailableModel\nAvailableModel_details\nCreateEpisodeRequest\nCreateModelInstanceRequest\nCreateModelInstanceResponse\nDeleteModelInstanceRequest\nEpisodeInfo\nErrorResponse\nInferRequest\nInferResponse\nLearnRequest\nLearnResponse\nModelInstance\nModelInstanceParameters\nModelInstanceState\nNotFoundResponse\nPingResponse\nServerInfo\nSuccessResponse\nTokenGenerateResponse\nTokenRolesResponse\nUnauthorizedResponse","category":"page"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"<a name=\"documentation-for-authorization\"></a>","category":"page"},{"location":"openapi/README/#Documentation-for-Authorization","page":"Overview","title":"Documentation for Authorization","text":"","category":"section"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"<a name=\"ApiKeyAuth\"></a>","category":"page"},{"location":"openapi/README/#ApiKeyAuth","page":"Overview","title":"ApiKeyAuth","text":"","category":"section"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"Type: HTTP Bearer Token authentication","category":"page"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/README/","page":"Overview","title":"Overview","text":"","category":"page"},{"location":"openapi/Models/AttachMetadataToEventRequest/","page":"AttachMetadataToEventRequest","title":"AttachMetadataToEventRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/AttachMetadataToEventRequest/#AttachMetadataToEventRequest","page":"AttachMetadataToEventRequest","title":"AttachMetadataToEventRequest","text":"","category":"section"},{"location":"openapi/Models/AttachMetadataToEventRequest/#Properties","page":"AttachMetadataToEventRequest","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/AttachMetadataToEventRequest/","page":"AttachMetadataToEventRequest","title":"AttachMetadataToEventRequest","text":"Name Type Description Notes\nmetadata Map Metadata to attach to the event [default to null]","category":"page"},{"location":"openapi/Models/AttachMetadataToEventRequest/","page":"AttachMetadataToEventRequest","title":"AttachMetadataToEventRequest","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/AttachMetadataToEventRequest/","page":"AttachMetadataToEventRequest","title":"AttachMetadataToEventRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/AttachMetadataToEventRequest/","page":"AttachMetadataToEventRequest","title":"AttachMetadataToEventRequest","text":"","category":"page"},{"location":"openapi/Models/AttachEventsToEpisodeRequest_events_inner/","page":"AttachEventsToEpisodeRequesteventsinner","title":"AttachEventsToEpisodeRequesteventsinner","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/AttachEventsToEpisodeRequest_events_inner/#AttachEventsToEpisodeRequest*events*inner","page":"AttachEventsToEpisodeRequesteventsinner","title":"AttachEventsToEpisodeRequesteventsinner","text":"","category":"section"},{"location":"openapi/Models/AttachEventsToEpisodeRequest_events_inner/#Properties","page":"AttachEventsToEpisodeRequesteventsinner","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/AttachEventsToEpisodeRequest_events_inner/","page":"AttachEventsToEpisodeRequesteventsinner","title":"AttachEventsToEpisodeRequesteventsinner","text":"Name Type Description Notes\ntimestamp Date Timestamp of the event [optional] [default to null]\ndata Map Arbitrary data to attach to the event, model-specific [optional] [default to null]\nmetadata Map Arbitrary metadata to attach to the event, model-specific [optional] [default to null]","category":"page"},{"location":"openapi/Models/AttachEventsToEpisodeRequest_events_inner/","page":"AttachEventsToEpisodeRequesteventsinner","title":"AttachEventsToEpisodeRequesteventsinner","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/AttachEventsToEpisodeRequest_events_inner/","page":"AttachEventsToEpisodeRequesteventsinner","title":"AttachEventsToEpisodeRequesteventsinner","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/AttachEventsToEpisodeRequest_events_inner/","page":"AttachEventsToEpisodeRequesteventsinner","title":"AttachEventsToEpisodeRequesteventsinner","text":"","category":"page"},{"location":"components/serialization/#serialization","page":"Serialization","title":"Serialization","text":"","category":"section"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"The Serialization module provides type-safe JSON serialization for OpenAPI data types in RxInferServer.jl, with special focus on handling multi-dimensional arrays and probability distributions.","category":"page"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"RxInferServer.Serialization.JSONSerialization","category":"page"},{"location":"components/serialization/#RxInferServer.Serialization.JSONSerialization","page":"Serialization","title":"RxInferServer.Serialization.JSONSerialization","text":"JSONSerialization(; kwargs...)\n\nType-safe JSON serializer for OpenAPI data types with configurable multi-dimensional array handling.\n\nKeywords\n\nmdarray_repr: Multi-dimensional array representation format, see RxInferServer.Serialization.MultiDimensionalArrayRepr\nmdarray_data: Multi-dimensional array data encoding format, see RxInferServer.Serialization.MultiDimensionalArrayData\n\n\n\n\n\n","category":"type"},{"location":"components/serialization/#Supported-Types","page":"Serialization","title":"Supported Types","text":"","category":"section"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"The serialization supports standard OpenAPI data types as defined in the OpenAPI specification:","category":"page"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"string (including dates and files)\nnumber\ninteger\nboolean\narray (corresponds to AbstractVector for Julia)\nobject (corresponds to AbstractDict for Julia)\ndistribution (corresponds to Distribution from RxInfer.jl)","category":"page"},{"location":"components/serialization/#Multi-dimensional-Array-Serialization","page":"Serialization","title":"Multi-dimensional Array Serialization","text":"","category":"section"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"OpenAPI specification does not natively support multi-dimensional arrays. To handle this limitation while ensuring compatibility across different programming languages (which may use different array layouts), RxInferServer implements a customizable serialization strategy through two key preferences:","category":"page"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"Array representation format (RxInferServer.Serialization.MultiDimensionalArrayRepr)\nArray data encoding (RxInferServer.Serialization.MultiDimensionalArrayData)","category":"page"},{"location":"components/serialization/#Example:-Matrix-Serialization-Challenge","page":"Serialization","title":"Example: Matrix Serialization Challenge","text":"","category":"section"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"Consider serializing a 2x2 matrix:","category":"page"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"A = [1 2; 3 4]","category":"page"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"A naive approach might serialize this as:","category":"page"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"encoded_A = Dict(\n    \"shape\" => size(A),\n    \"data\" => collect(Iterators.flatten(A))\n)","category":"page"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"While this works fine in Julia:","category":"page"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"decoded_A = reshape(encoded_A[\"data\"], encoded_A[\"shape\"]...)","category":"page"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"It, however, does not work in python:","category":"page"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":">>> import numpy as np\n\n>>> np.reshape([ 1, 3, 2, 4 ], shape = (2, 2))\narray([[1, 3],\n       [2, 4]])","category":"page"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"You can see that the data is not correctly reshaped in python. Elements 2 and 3 are swapped. If we would send this data to a python SDK client, the data would be incorrect. This is due to the different array layout conventions (row-major in Python/NumPy vs column-major in Julia). RxInferServer does not assume a particular layout for multi-dimensional arrays, so it leaves it to the user to configure the serialization preferences. ","category":"page"},{"location":"components/serialization/#Serialization-Preferences","page":"Serialization","title":"Serialization Preferences","text":"","category":"section"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"RxInferServer provides two key preferences to control how multi-dimensional arrays are serialized:","category":"page"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"Array Data Encoding (RxInferServer.Serialization.MultiDimensionalArrayData): Determines how the array data itself is transformed for serialization. For example, the ArrayOfArrays option encodes multi-dimensional arrays as nested arrays with row-major ordering to ensure cross-language compatibility.\nArray Representation Format (RxInferServer.Serialization.MultiDimensionalArrayRepr): Controls the structure of the serialized output, offering several options ranging from a fully-specified dictionary with type, encoding, shape, and data fields to a minimal representation with just the data itself.","category":"page"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"These preferences can be configured when creating a RxInferServer.Serialization.JSONSerialization instance, allowing you to balance between explicit metadata and compact representation based on your specific needs. Read the Request Preferences section for more information on how to set these preferences in the request headers.","category":"page"},{"location":"components/serialization/#serialization-multi-dimensional-array-representation-format","page":"Serialization","title":"Multi-dimensional Array Representation Format","text":"","category":"section"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"RxInferServer.Serialization.MultiDimensionalArrayRepr\nRxInferServer.Serialization.MultiDimensionalArrayRepr.Dict\nRxInferServer.Serialization.MultiDimensionalArrayRepr.DictTypeAndShape\nRxInferServer.Serialization.MultiDimensionalArrayRepr.DictShape\nRxInferServer.Serialization.MultiDimensionalArrayRepr.Data\nRxInferServer.Serialization.MultiDimensionalArrayRepr.Unknown","category":"page"},{"location":"components/serialization/#RxInferServer.Serialization.MultiDimensionalArrayRepr","page":"Serialization","title":"RxInferServer.Serialization.MultiDimensionalArrayRepr","text":"Specifies the JSON representation format for multi-dimensional arrays. Is supposed to be used as a namespace for the MultiDimensionalArrayRepr enum.\n\nSee also: RxInferServer.Serialization.MultiDimensionalArrayData\n\n\n\n\n\n","category":"module"},{"location":"components/serialization/#RxInferServer.Serialization.MultiDimensionalArrayRepr.Dict","page":"Serialization","title":"RxInferServer.Serialization.MultiDimensionalArrayRepr.Dict","text":"Represents the multi-dimensional array as a dictionary with the following keys:\n\ntype set to \"mdarray\"\nencoding set to to a selected transformation of the array, e.g. \"array_of_arrays\"\nshape set to the size of the array\ndata set to the encoded array itself as defined by the transformation\n\njulia> import RxInferServer.Serialization: MultiDimensionalArrayData, MultiDimensionalArrayRepr, JSONSerialization, to_json\n\njulia> s = JSONSerialization(mdarray_repr = MultiDimensionalArrayRepr.Dict, mdarray_data = MultiDimensionalArrayData.ArrayOfArrays);\n\njulia> to_json(s, [1 2; 3 4])\n\"{\\\"type\\\":\\\"mdarray\\\",\\\"encoding\\\":\\\"array_of_arrays\\\",\\\"shape\\\":[2,2],\\\"data\\\":[[1,2],[3,4]]}\"\n\n\n\n\n\n","category":"constant"},{"location":"components/serialization/#RxInferServer.Serialization.MultiDimensionalArrayRepr.DictTypeAndShape","page":"Serialization","title":"RxInferServer.Serialization.MultiDimensionalArrayRepr.DictTypeAndShape","text":"Same as RxInferServer.Serialization.MultiDimensionalArrayRepr.Dict, but excludes the encoding key, leaving only the type, shape and data keys.\n\njulia> import RxInferServer.Serialization: MultiDimensionalArrayData, MultiDimensionalArrayRepr, JSONSerialization, to_json\n\njulia> s = JSONSerialization(mdarray_repr = MultiDimensionalArrayRepr.DictTypeAndShape, mdarray_data = MultiDimensionalArrayData.ArrayOfArrays);\n\njulia> to_json(s, [1 2; 3 4])\n\"{\\\"type\\\":\\\"mdarray\\\",\\\"shape\\\":[2,2],\\\"data\\\":[[1,2],[3,4]]}\"\n\n\n\n\n\n","category":"constant"},{"location":"components/serialization/#RxInferServer.Serialization.MultiDimensionalArrayRepr.DictShape","page":"Serialization","title":"RxInferServer.Serialization.MultiDimensionalArrayRepr.DictShape","text":"Same as RxInferServer.Serialization.MultiDimensionalArrayRepr.Dict, but excludes the encoding and type keys, leaving only the shape and data keys.\n\njulia> import RxInferServer.Serialization: MultiDimensionalArrayData, MultiDimensionalArrayRepr, JSONSerialization, to_json\n\njulia> s = JSONSerialization(mdarray_repr = MultiDimensionalArrayRepr.DictShape, mdarray_data = MultiDimensionalArrayData.ArrayOfArrays);\n\njulia> to_json(s, [1 2; 3 4])\n\"{\\\"shape\\\":[2,2],\\\"data\\\":[[1,2],[3,4]]}\"\n\n\n\n\n\n","category":"constant"},{"location":"components/serialization/#RxInferServer.Serialization.MultiDimensionalArrayRepr.Data","page":"Serialization","title":"RxInferServer.Serialization.MultiDimensionalArrayRepr.Data","text":"Compact representation of the multi-dimensional array as returned from the transformation.\n\njulia> import RxInferServer.Serialization: MultiDimensionalArrayData, MultiDimensionalArrayRepr, JSONSerialization, to_json\n\njulia> s = JSONSerialization(mdarray_repr = MultiDimensionalArrayRepr.Data, mdarray_data = MultiDimensionalArrayData.ArrayOfArrays);\n\njulia> to_json(s, [1 2; 3 4])\n\"[[1,2],[3,4]]\"\n\n\n\n\n\n","category":"constant"},{"location":"components/serialization/#RxInferServer.Serialization.MultiDimensionalArrayRepr.Unknown","page":"Serialization","title":"RxInferServer.Serialization.MultiDimensionalArrayRepr.Unknown","text":"Unknown representation format. Used to indicate that the representation format is not known or cannot be parsed from the request.\n\n\n\n\n\n","category":"constant"},{"location":"components/serialization/#serialization-multi-dimensional-array-data-encoding","page":"Serialization","title":"Multi-dimensional Array Data Encoding","text":"","category":"section"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"RxInferServer.Serialization.MultiDimensionalArrayData\nRxInferServer.Serialization.MultiDimensionalArrayData.ArrayOfArrays\nRxInferServer.Serialization.MultiDimensionalArrayData.ReshapeColumnMajor\nRxInferServer.Serialization.MultiDimensionalArrayData.ReshapeRowMajor\nRxInferServer.Serialization.MultiDimensionalArrayData.Diagonal\nRxInferServer.Serialization.MultiDimensionalArrayData.None\nRxInferServer.Serialization.MultiDimensionalArrayData.Unknown","category":"page"},{"location":"components/serialization/#RxInferServer.Serialization.MultiDimensionalArrayData","page":"Serialization","title":"RxInferServer.Serialization.MultiDimensionalArrayData","text":"A module that specifies the encoding format for multi-dimensional array data. Is supposed to be used as a namespace for the MultiDimensionalArrayData enum.\n\nSee also: RxInferServer.Serialization.MultiDimensionalArrayRepr\n\n\n\n\n\n","category":"module"},{"location":"components/serialization/#RxInferServer.Serialization.MultiDimensionalArrayData.ArrayOfArrays","page":"Serialization","title":"RxInferServer.Serialization.MultiDimensionalArrayData.ArrayOfArrays","text":"Encodes the data of multi-dimensional arrays as nested arrays of arrays with row-major ordering.\n\njulia> import RxInferServer.Serialization: MultiDimensionalArrayData, JSONSerialization, to_json\n\njulia> s = JSONSerialization(mdarray_data = MultiDimensionalArrayData.ArrayOfArrays);\n\njulia> to_json(s, [1 2; 3 4])\n\"{\\\"type\\\":\\\"mdarray\\\",\\\"encoding\\\":\\\"array_of_arrays\\\",\\\"shape\\\":[2,2],\\\"data\\\":[[1,2],[3,4]]}\"\n\njulia> to_json(s, [1 3; 2 4])\n\"{\\\"type\\\":\\\"mdarray\\\",\\\"encoding\\\":\\\"array_of_arrays\\\",\\\"shape\\\":[2,2],\\\"data\\\":[[1,3],[2,4]]}\"\n\nnote: Note\nJulia uses column-major ordering for multi-dimensional arrays, but this setting explicitly uses row-major ordering.\n\n\n\n\n\n","category":"constant"},{"location":"components/serialization/#RxInferServer.Serialization.MultiDimensionalArrayData.ReshapeColumnMajor","page":"Serialization","title":"RxInferServer.Serialization.MultiDimensionalArrayData.ReshapeColumnMajor","text":"Encodes the data of multi-dimensional arrays as a flattened array using column-major ordering.\n\njulia> import RxInferServer.Serialization: MultiDimensionalArrayData, JSONSerialization, to_json\n\njulia> s = JSONSerialization(mdarray_data = MultiDimensionalArrayData.ReshapeColumnMajor);\n\njulia> to_json(s, [1 2; 3 4])\n\"{\\\"type\\\":\\\"mdarray\\\",\\\"encoding\\\":\\\"reshape_column_major\\\",\\\"shape\\\":[2,2],\\\"data\\\":[1,3,2,4]}\"\n\njulia> to_json(s, [1 3; 2 4])\n\"{\\\"type\\\":\\\"mdarray\\\",\\\"encoding\\\":\\\"reshape_column_major\\\",\\\"shape\\\":[2,2],\\\"data\\\":[1,2,3,4]}\"\n\nnote: Note\nJulia uses column-major ordering for multi-dimensional arrays, so this encoding preserves the natural ordering of elements in memory.\n\n\n\n\n\n","category":"constant"},{"location":"components/serialization/#RxInferServer.Serialization.MultiDimensionalArrayData.ReshapeRowMajor","page":"Serialization","title":"RxInferServer.Serialization.MultiDimensionalArrayData.ReshapeRowMajor","text":"Encodes the data of multi-dimensional arrays as a flattened array using row-major ordering.\n\njulia> import RxInferServer.Serialization: MultiDimensionalArrayData, JSONSerialization, to_json\n\njulia> s = JSONSerialization(mdarray_data = MultiDimensionalArrayData.ReshapeRowMajor);\n\njulia> to_json(s, [1 2; 3 4])\n\"{\\\"type\\\":\\\"mdarray\\\",\\\"encoding\\\":\\\"reshape_row_major\\\",\\\"shape\\\":[2,2],\\\"data\\\":[1,2,3,4]}\"\n\njulia> to_json(s, [1 3; 2 4])\n\"{\\\"type\\\":\\\"mdarray\\\",\\\"encoding\\\":\\\"reshape_row_major\\\",\\\"shape\\\":[2,2],\\\"data\\\":[1,3,2,4]}\"\n\nnote: Note\nThis encoding traverses the array in row-major order, which is different from Julia's native column-major storage, but is compatible with numpy.ndarray memory layout.\n\n\n\n\n\n","category":"constant"},{"location":"components/serialization/#RxInferServer.Serialization.MultiDimensionalArrayData.Diagonal","page":"Serialization","title":"RxInferServer.Serialization.MultiDimensionalArrayData.Diagonal","text":"Encodes the data of multi-dimensional arrays as a single array containing only the diagonal elements of the parent array.\n\njulia> import RxInferServer.Serialization: MultiDimensionalArrayData, JSONSerialization, to_json\n\njulia> s = JSONSerialization(mdarray_data = MultiDimensionalArrayData.Diagonal);\n\njulia> to_json(s, [1 2; 3 4])\n\"{\\\"type\\\":\\\"mdarray\\\",\\\"encoding\\\":\\\"diagonal\\\",\\\"shape\\\":[2,2],\\\"data\\\":[1,4]}\"\n\n\n\n\n\n","category":"constant"},{"location":"components/serialization/#RxInferServer.Serialization.MultiDimensionalArrayData.None","page":"Serialization","title":"RxInferServer.Serialization.MultiDimensionalArrayData.None","text":"Removes the multi-dimensional array data from the response entirely.\n\njulia> import RxInferServer.Serialization: MultiDimensionalArrayData, JSONSerialization, to_json\n\njulia> s = JSONSerialization(mdarray_data = MultiDimensionalArrayData.None);\n\njulia> to_json(s, [1 2; 3 4])\n\"{\\\"type\\\":\\\"mdarray\\\",\\\"encoding\\\":\\\"none\\\",\\\"shape\\\":[2,2],\\\"data\\\":null}\"\n\nnote: Note\nUse RxInferServer.Serialization.MultiDimensionalArrayRepr.Data to remove everything.\n\n\n\n\n\n","category":"constant"},{"location":"components/serialization/#RxInferServer.Serialization.MultiDimensionalArrayData.Unknown","page":"Serialization","title":"RxInferServer.Serialization.MultiDimensionalArrayData.Unknown","text":"Unknown encoding format. Used to indicate that the encoding format is not known or cannot be parsed from the request.\n\n\n\n\n\n","category":"constant"},{"location":"components/serialization/#Distribution-Serialization","page":"Serialization","title":"Distribution Serialization","text":"","category":"section"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"RxInferServer provides robust serialization support for probability distributions from RxInfer.jl, enabling seamless communication between the server and clients in different programming languages. This functionality is particularly important when working with statistical models that rely on various distribution types. The serialization system offers flexible options to control how distributions are represented in JSON, allowing you to choose between detailed representations that include type information and compact formats that focus solely on the distribution parameters.","category":"page"},{"location":"components/serialization/#Serialization-Preferences-2","page":"Serialization","title":"Serialization Preferences","text":"","category":"section"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"RxInferServer provides customizable serialization for probability distributions from RxInfer.jl. Similar to multi-dimensional arrays, the serialization strategy is controlled through two key preferences:","category":"page"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"Distribution Data Encoding (RxInferServer.Serialization.DistributionsData): Determines how the distribution parameters are encoded. For example, the NamedParams option encodes parameters with their semantic names (e.g., μ for mean), while the Params option uses a simple array of values.\nDistribution Representation Format (RxInferServer.Serialization.DistributionsRepr): Controls the structure of the serialized output, offering several options ranging from a fully-specified dictionary with type, encoding, tag, and data fields to a minimal representation with just the data itself.","category":"page"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"These preferences can be configured when creating a RxInferServer.Serialization.JSONSerialization instance, allowing you to balance between explicit metadata and compact representation based on your specific needs. Read the Request Preferences section for more information on how to set these preferences in the request headers.","category":"page"},{"location":"components/serialization/#serialization-distribution-representation-format","page":"Serialization","title":"Distribution Representation Format","text":"","category":"section"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"RxInferServer.Serialization.DistributionsRepr\nRxInferServer.Serialization.DistributionsRepr.Dict\nRxInferServer.Serialization.DistributionsRepr.DictTypeAndTag\nRxInferServer.Serialization.DistributionsRepr.DictTag\nRxInferServer.Serialization.DistributionsRepr.Data\nRxInferServer.Serialization.DistributionsRepr.Unknown","category":"page"},{"location":"components/serialization/#RxInferServer.Serialization.DistributionsRepr","page":"Serialization","title":"RxInferServer.Serialization.DistributionsRepr","text":"Specifies the JSON representation format for distributions. Is supposed to be used as a namespace for the DistributionsRepr enum.\n\nSee also: RxInferServer.Serialization.DistributionsData\n\n\n\n\n\n","category":"module"},{"location":"components/serialization/#RxInferServer.Serialization.DistributionsRepr.Dict","page":"Serialization","title":"RxInferServer.Serialization.DistributionsRepr.Dict","text":"Represents the distribution as a dictionary with the following keys:\n\ntype set to the distribution type (e.g. \"Distribution{Univariate, Continuous}\")\nencoding set to the selected encoding format (e.g. \"named_params\")\ntag set to the specific distribution tag (e.g. \"NormalMeanVariance\")\ndata set to the encoded distribution parameters\n\njulia> import RxInferServer.Serialization: DistributionsData, DistributionsRepr, JSONSerialization, to_json\n\njulia> using RxInfer\n\njulia> s = JSONSerialization(distributions_repr = DistributionsRepr.Dict, distributions_data = DistributionsData.NamedParams);\n\njulia> to_json(s, NormalMeanVariance(1.0, 2.0))\n\"{\\\"encoding\\\":\\\"named_params\\\",\\\"type\\\":\\\"Distribution{Univariate, Continuous}\\\",\\\"tag\\\":\\\"NormalMeanVariance\\\",\\\"data\\\":{\\\"μ\\\":1.0,\\\"v\\\":2.0}}\"\n\n\n\n\n\n","category":"constant"},{"location":"components/serialization/#RxInferServer.Serialization.DistributionsRepr.DictTypeAndTag","page":"Serialization","title":"RxInferServer.Serialization.DistributionsRepr.DictTypeAndTag","text":"Same as RxInferServer.Serialization.DistributionsRepr.Dict, but excludes the encoding key, leaving only the type, tag and data keys.\n\njulia> import RxInferServer.Serialization: DistributionsData, DistributionsRepr, JSONSerialization, to_json\n\njulia> using RxInfer\n\njulia> s = JSONSerialization(distributions_repr = DistributionsRepr.DictTypeAndTag, distributions_data = DistributionsData.NamedParams);\n\njulia> to_json(s, NormalMeanVariance(1.0, 2.0))\n\"{\\\"type\\\":\\\"Distribution{Univariate, Continuous}\\\",\\\"tag\\\":\\\"NormalMeanVariance\\\",\\\"data\\\":{\\\"μ\\\":1.0,\\\"v\\\":2.0}}\"\n\n\n\n\n\n","category":"constant"},{"location":"components/serialization/#RxInferServer.Serialization.DistributionsRepr.DictTag","page":"Serialization","title":"RxInferServer.Serialization.DistributionsRepr.DictTag","text":"Same as RxInferServer.Serialization.DistributionsRepr.Dict, but excludes the encoding and type keys, leaving only the tag and data keys.\n\njulia> import RxInferServer.Serialization: DistributionsData, DistributionsRepr, JSONSerialization, to_json\n\njulia> using RxInfer\n\njulia> s = JSONSerialization(distributions_repr = DistributionsRepr.DictTag, distributions_data = DistributionsData.NamedParams);\n\njulia> to_json(s, NormalMeanVariance(1.0, 2.0))\n\"{\\\"tag\\\":\\\"NormalMeanVariance\\\",\\\"data\\\":{\\\"μ\\\":1.0,\\\"v\\\":2.0}}\"\n\n\n\n\n\n","category":"constant"},{"location":"components/serialization/#RxInferServer.Serialization.DistributionsRepr.Data","page":"Serialization","title":"RxInferServer.Serialization.DistributionsRepr.Data","text":"Compact representation of the distribution data as returned from the encoding.\n\njulia> import RxInferServer.Serialization: DistributionsData, DistributionsRepr, JSONSerialization, to_json\n\njulia> using RxInfer\n\njulia> s = JSONSerialization(distributions_repr = DistributionsRepr.Data, distributions_data = DistributionsData.NamedParams);\n\njulia> to_json(s, NormalMeanVariance(1.0, 2.0))\n\"{\\\"μ\\\":1.0,\\\"v\\\":2.0}\"\n\n\n\n\n\n","category":"constant"},{"location":"components/serialization/#RxInferServer.Serialization.DistributionsRepr.Unknown","page":"Serialization","title":"RxInferServer.Serialization.DistributionsRepr.Unknown","text":"Unknown representation format. Used to indicate that the representation format is not known or cannot be parsed from the request.\n\n\n\n\n\n","category":"constant"},{"location":"components/serialization/#serialization-distribution-data-encoding","page":"Serialization","title":"Distribution Data Encoding","text":"","category":"section"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"RxInferServer.Serialization.DistributionsData\nRxInferServer.Serialization.DistributionsData.NamedParams\nRxInferServer.Serialization.DistributionsData.Params\nRxInferServer.Serialization.DistributionsData.MeanCov\nRxInferServer.Serialization.DistributionsData.None\nRxInferServer.Serialization.DistributionsData.Unknown","category":"page"},{"location":"components/serialization/#RxInferServer.Serialization.DistributionsData","page":"Serialization","title":"RxInferServer.Serialization.DistributionsData","text":"A module that specifies the encoding format for distribution data. Is supposed to be used as a namespace for the DistributionsData enum.\n\nSee also: RxInferServer.Serialization.DistributionsRepr\n\n\n\n\n\n","category":"module"},{"location":"components/serialization/#RxInferServer.Serialization.DistributionsData.NamedParams","page":"Serialization","title":"RxInferServer.Serialization.DistributionsData.NamedParams","text":"Encodes the data of distributions as a dictionary with named parameters.\n\njulia> import RxInferServer.Serialization: DistributionsData, JSONSerialization, to_json\n\njulia> using RxInfer\n\njulia> s = JSONSerialization(distributions_data = DistributionsData.NamedParams);\n\njulia> to_json(s, NormalMeanVariance(1.0, 2.0))\n\"{\\\"encoding\\\":\\\"named_params\\\",\\\"type\\\":\\\"Distribution{Univariate, Continuous}\\\",\\\"tag\\\":\\\"NormalMeanVariance\\\",\\\"data\\\":{\\\"μ\\\":1.0,\\\"v\\\":2.0}}\"\n\nnote: Note\nThis encoding preserves the semantic meaning of each parameter by using its name as a key in the dictionary.\n\n\n\n\n\n","category":"constant"},{"location":"components/serialization/#RxInferServer.Serialization.DistributionsData.Params","page":"Serialization","title":"RxInferServer.Serialization.DistributionsData.Params","text":"Encodes the data of distributions as an array of parameters in their natural order.\n\njulia> import RxInferServer.Serialization: DistributionsData, JSONSerialization, to_json\n\njulia> using RxInfer\n\njulia> s = JSONSerialization(distributions_data = DistributionsData.Params);\n\njulia> to_json(s, NormalMeanVariance(1.0, 2.0))\n\"{\\\"encoding\\\":\\\"params\\\",\\\"type\\\":\\\"Distribution{Univariate, Continuous}\\\",\\\"tag\\\":\\\"NormalMeanVariance\\\",\\\"data\\\":[1.0,2.0]}\"\n\nnote: Note\nThis encoding is more compact but requires knowledge of the parameter order for each distribution type.\n\n\n\n\n\n","category":"constant"},{"location":"components/serialization/#RxInferServer.Serialization.DistributionsData.MeanCov","page":"Serialization","title":"RxInferServer.Serialization.DistributionsData.MeanCov","text":"Always encodes distributions with mean and covariance parameters, converting from other parameterizations as needed.\n\njulia> import RxInferServer.Serialization: DistributionsData, JSONSerialization, to_json\n\njulia> using RxInfer\n\njulia> s = JSONSerialization(distributions_data = DistributionsData.MeanCov);\n\njulia> to_json(s, NormalMeanVariance(1.0, 2.0))\n\"{\\\"encoding\\\":\\\"mean_cov\\\",\\\"type\\\":\\\"Distribution{Univariate, Continuous}\\\",\\\"tag\\\":\\\"NormalMeanVariance\\\",\\\"data\\\":{\\\"mean\\\":1.0,\\\"cov\\\":2.0}}\"\n\njulia> to_json(s, NormalMeanPrecision(1.0, 0.5))\n\"{\\\"encoding\\\":\\\"mean_cov\\\",\\\"type\\\":\\\"Distribution{Univariate, Continuous}\\\",\\\"tag\\\":\\\"NormalMeanPrecision\\\",\\\"data\\\":{\\\"mean\\\":1.0,\\\"cov\\\":2.0}}\"\n\nnote: Note\nThis encoding ensures consistent parameterization across different distribution types, making it easier for clients to work with the data.\n\n\n\n\n\n","category":"constant"},{"location":"components/serialization/#RxInferServer.Serialization.DistributionsData.None","page":"Serialization","title":"RxInferServer.Serialization.DistributionsData.None","text":"Removes the distribution data from the response entirely.\n\njulia> import RxInferServer.Serialization: DistributionsData, JSONSerialization, to_json\n\njulia> using RxInfer\n\njulia> s = JSONSerialization(distributions_data = DistributionsData.None);\n\njulia> to_json(s, NormalMeanVariance(1.0, 2.0))\n\"{\\\"encoding\\\":\\\"none\\\",\\\"type\\\":\\\"Distribution{Univariate, Continuous}\\\",\\\"tag\\\":\\\"NormalMeanVariance\\\",\\\"data\\\":null}\"\n\nnote: Note\nUse RxInferServer.Serialization.DistributionsRepr.Data to remove everything.\n\n\n\n\n\n","category":"constant"},{"location":"components/serialization/#RxInferServer.Serialization.DistributionsData.Unknown","page":"Serialization","title":"RxInferServer.Serialization.DistributionsData.Unknown","text":"Unknown encoding format. Used to indicate that the encoding format is not known or cannot be parsed from the request.\n\n\n\n\n\n","category":"constant"},{"location":"components/serialization/#API-Reference","page":"Serialization","title":"API Reference","text":"","category":"section"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"RxInferServer.Serialization.to_json\nRxInferServer.Serialization.from_json\nRxInferServer.Serialization.UnsupportedPreferenceError","category":"page"},{"location":"components/serialization/#RxInferServer.Serialization.to_json","page":"Serialization","title":"RxInferServer.Serialization.to_json","text":"to_json([io::IO], [serialization::JSONSerialization], value)\n\nSerialize value to JSON using the specified serialization strategy.\n\nReturns a string if io is not provided.\n\nSee also: RxInferServer.Serialization.JSONSerialization\n\n\n\n\n\n","category":"function"},{"location":"components/serialization/#RxInferServer.Serialization.from_json","page":"Serialization","title":"RxInferServer.Serialization.from_json","text":"from_json(string)\n\nParse a JSON string into Julia data structures.\n\njulia> import RxInferServer.Serialization: JSONSerialization, MultiDimensionalArrayRepr, MultiDimensionalArrayData, to_json, from_json\n\njulia> s = JSONSerialization(mdarray_repr = MultiDimensionalArrayRepr.Dict, mdarray_data = MultiDimensionalArrayData.ArrayOfArrays);\n\njulia> from_json(to_json(s, [1 2; 3 4]))\nDict{String, Any} with 4 entries:\n  \"shape\"    => Any[2, 2]\n  \"encoding\" => \"array_of_arrays\"\n  \"data\"     => Any[Any[1, 2], Any[3, 4]]\n  \"type\"     => \"mdarray\"\n\nNote: No post-processing is performed on the deserialized value.\n\n\n\n\n\n","category":"function"},{"location":"components/serialization/#RxInferServer.Serialization.UnsupportedPreferenceError","page":"Serialization","title":"RxInferServer.Serialization.UnsupportedPreferenceError","text":"UnsupportedPreferenceError(option, options)\n\nError thrown when an unknown options value is used for a given set of options.\n\n\n\n\n\n","category":"type"},{"location":"components/serialization/","page":"Serialization","title":"Serialization","text":"","category":"page"},{"location":"getting-started/#getting-started","page":"Getting started","title":"Getting Started","text":"","category":"section"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"RxInferServer is a web server that provides a REST API for running Bayesian inference using the RxInfer.jl package. It allows users to define probabilistic models, upload data, and run inference through HTTP requests. This guide will walk you through the installation process and shows how to start the server.","category":"page"},{"location":"getting-started/#Installation","page":"Getting started","title":"Installation","text":"","category":"section"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"To begin using RxInferServer, first clone the repository:","category":"page"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"git clone git@github.com:lazydynamics/RxInferServer.git","category":"page"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"and navigate to the repository's directory by running:","category":"page"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"cd RxInferServer","category":"page"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"note: Note\nWhile the server is technically implemented as a Julia package, it relies on locally auto-generated code from the OpenAPI specification. This makes it more challenging (though not impossible) to use it as a direct dependency in another Julia project. For the same reason, the server is not registered as a Julia package and cannot be installed using Pkg.jl. Please refer to the Pkg.jl documentation for more information on working with such packages.","category":"page"},{"location":"getting-started/#Makefile","page":"Getting started","title":"Makefile","text":"","category":"section"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"The repository includes a Makefile for convenience. To check the available commands, run:","category":"page"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"make help","category":"page"},{"location":"getting-started/#Database-setup","page":"Getting started","title":"Database setup","text":"","category":"section"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"The server requires a database to store model and inference related information. Read more about the database in the Database section. For development purposes, the server can be started with make docker command which will automatically start the database in a docker container","category":"page"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"make docker","category":"page"},{"location":"getting-started/#Starting-the-Server","page":"Getting started","title":"Starting the Server","text":"","category":"section"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"To start the development version of the server, run:","category":"page"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"make serve","category":"page"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"This will automatically start Julia and call the RxInferServer.serve function with default settings. Read more about available options in the Configuration section.","category":"page"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"It is also possible to manually start the server from the Julia REPL:","category":"page"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"julia --project","category":"page"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"julia> using RxInferServer\n\njulia> ENV[\"RXINFER_SERVER_ENABLE_HOT_RELOAD\"] = \"true\"\n\njulia> RxInferServer.serve()","category":"page"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"Note that the RxInferServer.serve is a blocking function and will keep the REPL busy. To start the server in the background, you can use the @async or Threads.@spawn macros. Read more about the @async and Threads.@spawn macros in the Julia Documentation.","category":"page"},{"location":"getting-started/#Configuration","page":"Getting started","title":"Configuration","text":"","category":"section"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"To change the configuration of the server, you can set the environment variables before starting the server. Read more about the configuration in the Configuration section. Alternatively, you can change the configuration using the .env files.","category":"page"},{"location":"getting-started/#Closing-the-Server","page":"Getting started","title":"Closing the Server","text":"","category":"section"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"To close the server, type q and hit ENTER. Alternatively, you can use the Ctrl-C shortcut.","category":"page"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"note: Note\nWhen running the server from script, e.g. make serve, Ctrl-C might not work properly. See How do I catch CTRL-C in a script? for more information.","category":"page"},{"location":"getting-started/#API-Reference","page":"Getting started","title":"API Reference","text":"","category":"section"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"RxInferServer.serve","category":"page"},{"location":"getting-started/#RxInferServer.serve","page":"Getting started","title":"RxInferServer.serve","text":"serve() -> HTTP.Server\n\nStart the RxInfer API server with the configured settings. Official documentation is available at https://server.rxinfer.com/\n\nDescription\n\nInitializes and starts an HTTP server that exposes RxInfer functionality through a REST API. The server uses the OpenAPI specification defined in RxInferServerOpenAPI module to register endpoints.\n\nFeatures\n\nConfigurable port via the RXINFER_SERVER_PORT environment variable (default: 8000)\nGraceful shutdown with proper resource cleanup when interrupted\nLoads the .env files based on the RXINFER_SERVER_ENV environment variable\nWhen Revise.jl is loaded in the current Julia session, and the RXINFER_SERVER_ENABLE_HOT_RELOAD environment variable is set to \"true\",  the server will hot reload the source code and models when the source code changes.\n\nThis is a blocking operation that runs until interrupted (e.g., with Ctrl+C). To gracefully shut down the server, type the q or quit and press ENTER in the REPL. Note that Ctrl+C cannot be catched reliably when running in a non-interactive session.\n\nExamples\n\nusing RxInferServer\n\n# Start the server with default settings (blocks until interrupted)\nRxInferServer.serve()\n\nSee Also\n\nRxInferServer.RXINFER_SERVER_ENV: The environment on which the RxInfer server will run, determines which .env files are loaded\nRxInferServer.RXINFER_SERVER_PORT: The port on which the RxInfer server will run\nRxInferServer.RXINFER_SERVER_ENABLE_HOT_RELOAD: Check if hot reloading is enabled\nRxInferServer.RXINFER_SERVER_SHOW_BANNER: Whether to show the welcome banner\nRxInferServer.RXINFER_SERVER_LISTEN_KEYBOARD: Whether to listen for keyboard input to quit the server\n\n\n\n\n\n","category":"function"},{"location":"getting-started/#Where-to-go-next?","page":"Getting started","title":"Where to go next?","text":"","category":"section"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"Read more about the different configuration options in the Configuration section\nCreate your first model with the Model management section\nFor detailed information about how to create and add your own models to the server, check out the How to Add a Model manual\nIf you want to contribute to the project, read more about the Development section","category":"page"},{"location":"getting-started/","page":"Getting started","title":"Getting started","text":"","category":"page"},{"location":"openapi/Models/UnauthorizedResponse/","page":"UnauthorizedResponse","title":"UnauthorizedResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/UnauthorizedResponse/#UnauthorizedResponse","page":"UnauthorizedResponse","title":"UnauthorizedResponse","text":"","category":"section"},{"location":"openapi/Models/UnauthorizedResponse/#Properties","page":"UnauthorizedResponse","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/UnauthorizedResponse/","page":"UnauthorizedResponse","title":"UnauthorizedResponse","text":"Name Type Description Notes\nerror String Error type, always \\&quot;Unauthorized\\&quot; for this error [default to null]\nmessage String Detailed message explaining why authentication failed [default to null]","category":"page"},{"location":"openapi/Models/UnauthorizedResponse/","page":"UnauthorizedResponse","title":"UnauthorizedResponse","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/UnauthorizedResponse/","page":"UnauthorizedResponse","title":"UnauthorizedResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/UnauthorizedResponse/","page":"UnauthorizedResponse","title":"UnauthorizedResponse","text":"","category":"page"},{"location":"openapi/Models/LearnResponse/","page":"LearnResponse","title":"LearnResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/LearnResponse/#LearnResponse","page":"LearnResponse","title":"LearnResponse","text":"","category":"section"},{"location":"openapi/Models/LearnResponse/#Properties","page":"LearnResponse","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/LearnResponse/","page":"LearnResponse","title":"LearnResponse","text":"Name Type Description Notes\nlearned_parameters Map A dictionary of learned parameters and their values [default to null]","category":"page"},{"location":"openapi/Models/LearnResponse/","page":"LearnResponse","title":"LearnResponse","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/LearnResponse/","page":"LearnResponse","title":"LearnResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/LearnResponse/","page":"LearnResponse","title":"LearnResponse","text":"","category":"page"},{"location":"openapi/Models/CreateModelInstanceRequest/","page":"CreateModelInstanceRequest","title":"CreateModelInstanceRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/CreateModelInstanceRequest/#CreateModelInstanceRequest","page":"CreateModelInstanceRequest","title":"CreateModelInstanceRequest","text":"","category":"section"},{"location":"openapi/Models/CreateModelInstanceRequest/#Properties","page":"CreateModelInstanceRequest","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/CreateModelInstanceRequest/","page":"CreateModelInstanceRequest","title":"CreateModelInstanceRequest","text":"Name Type Description Notes\nmodel_name String The name of the model to create (including version identifier if applicable, e.g. \\&quot;BetaBernoulli-v1\\&quot;) [default to null]\narguments Map Model-specific configuration arguments [optional] [default to null]\ndescription String Optional description of the model instance [optional] [default to null]","category":"page"},{"location":"openapi/Models/CreateModelInstanceRequest/","page":"CreateModelInstanceRequest","title":"CreateModelInstanceRequest","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/CreateModelInstanceRequest/","page":"CreateModelInstanceRequest","title":"CreateModelInstanceRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/CreateModelInstanceRequest/","page":"CreateModelInstanceRequest","title":"CreateModelInstanceRequest","text":"","category":"page"},{"location":"manuals/how-to-add-a-model/#manual-how-to-add-a-model","page":"How to add a model","title":"How to Add a Model","text":"","category":"section"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"warning: Warning\nRxInferServer is a young package and the model configuration format as well as the requirements for the model implementation are subject to change to improve the developer and user experience.","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"Welcome to the guide on adding models to RxInferServer! This comprehensive guide will walk you through everything you need to know to create and integrate your own probabilistic models into the server. Whether you're building a simple prediction model or a complex inference system, this guide has you covered.","category":"page"},{"location":"manuals/how-to-add-a-model/#Learning-by-Example","page":"How to add a model","title":"Learning by Example","text":"","category":"section"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"The best way to get started is by exploring existing models. In the RxInferServer repository, you'll find a models directory containing several example models. These examples serve as practical templates and demonstrate:","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"Model configuration best practices\nImplementation patterns for different use cases\nHandling various input/output scenarios\nEffective model organization strategies","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"Feel free to use these examples as starting points for your own models, adapting them to your specific needs.","category":"page"},{"location":"manuals/how-to-add-a-model/#Model-Components","page":"How to add a model","title":"Model Components","text":"","category":"section"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"Every model in RxInferServer consists of two essential files:","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"config.yaml - Defines the model's metadata and parameters\nmodel.jl - Contains the actual model implementation","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"Let's dive into each component in detail.","category":"page"},{"location":"manuals/how-to-add-a-model/#Model-Configuration","page":"How to add a model","title":"Model Configuration","text":"","category":"section"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"The configuration file (config.yaml) is your model's blueprint. It defines how your model will be presented to users and what parameters it accepts.","category":"page"},{"location":"manuals/how-to-add-a-model/#Basic-Configuration","page":"How to add a model","title":"Basic Configuration","text":"","category":"section"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"Every model must specify these core fields:","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"Field Description Type Required\nname Model name with version identifier String Yes\ndescription Brief description of the model String Yes\nauthor Model author's name String Yes\nroles User roles that can access the model Array of Strings Yes","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"Example:","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"name: WeatherPredictor-v1\ndescription: A probabilistic model for weather prediction\nauthor: John Doe\nroles:\n  - user\n  - admin","category":"page"},{"location":"manuals/how-to-add-a-model/#Model-Parameters","page":"How to add a model","title":"Model Parameters","text":"","category":"section"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"The arguments section defines what parameters your model accepts:","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"Field Description Type Required\nname Parameter name String Yes\ndescription Parameter description String No\ntype Expected data type String No\ndefault Default value Any No\nrequired Whether parameter is mandatory Boolean No","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"Example:","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"arguments:\n  - name: state_dimension\n    description: The dimension of the state space\n    type: int\n    required: true\n  - name: horizon\n    description: The prediction horizon\n    type: int\n    default: 10","category":"page"},{"location":"manuals/how-to-add-a-model/#Model-Implementation","page":"How to add a model","title":"Model Implementation","text":"","category":"section"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"Now, let's explore how to implement your model's logic in model.jl. First, let's clarify some key concepts:","category":"page"},{"location":"manuals/how-to-add-a-model/#Key-Concepts","page":"How to add a model","title":"Key Concepts","text":"","category":"section"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"Model: A probabilistic model description for inference and learning\nModel Instance: A specific instance of a model with its own arguments, state, and parameters\nModel Arguments: Constants passed during model creation\nModel State: Internal state that persists between inference calls\nModel Parameters: Learnable parameters exposed through the Learning API","category":"page"},{"location":"manuals/how-to-add-a-model/#Model-Lifecycle","page":"How to add a model","title":"Model Lifecycle","text":"","category":"section"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"When the server starts, it only loads model configurations. The actual model code executes only when a user creates a model instance through the Model management API. Each model instance maintains its own isolated state, allowing multiple instances of the same model to operate independently.","category":"page"},{"location":"manuals/how-to-add-a-model/#Required-Functions","page":"How to add a model","title":"Required Functions","text":"","category":"section"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"Your model implementation must define these four essential functions. Each function plays a specific role in the model's lifecycle and has a distinct semantic meaning in the context of probabilistic inference.","category":"page"},{"location":"manuals/how-to-add-a-model/#initial_state(arguments)","page":"How to add a model","title":"initial_state(arguments)","text":"","category":"section"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"This function represents the initial conditions of your model and is called when a new model instance is created. The state is a persistent memory that evolves over time as the model processes data. It can store any information that needs to be maintained between inference calls, such as running statistics, cached computations, or model-specific metadata.","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"The function takes a single argument:","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"arguments: A dictionary containing the model arguments specified in config.yaml","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"It should return a dictionary representing the initial state of the model.","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"Here's an example implementation:","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"function initial_state(arguments)\n    return Dict(\n        \"state_dimension\" => arguments[\"state_dimension\"],\n        \"horizon\" => arguments[\"horizon\"],\n        \"learning_rate\" => arguments[\"horizon\"] > 10 ? 0.01 : 0.001\n    )\nend","category":"page"},{"location":"manuals/how-to-add-a-model/#initial_parameters(arguments)","page":"How to add a model","title":"initial_parameters(arguments)","text":"","category":"section"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"This function initializes the model's learnable parameters when a new model instance is created. Parameters represent the core components of your probabilistic model that can be learned from data. These are the variables that define your model's behavior and are updated during the learning process. In Bayesian terms, these often correspond to the parameters of your prior distributions or the structure of your probabilistic model.","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"The function takes a single argument:","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"arguments: A dictionary containing the model arguments specified in config.yaml","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"It should return a dictionary containing the initial values of all learnable parameters.","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"Here's an example implementation:","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"function initial_parameters(arguments)\n    return Dict(\n        \"A\" => randn(arguments[\"state_dimension\"], arguments[\"state_dimension\"]),\n        \"B\" => randn(arguments[\"state_dimension\"], arguments[\"state_dimension\"])\n    )\nend","category":"page"},{"location":"manuals/how-to-add-a-model/#run_inference(state,-parameters,-event)","page":"How to add a model","title":"run_inference(state, parameters, event)","text":"","category":"section"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"This function implements the core inference algorithm of your model and is called to perform inference on a single data point. It takes a single observation (event) and computes the posterior distribution or point estimates based on the current state and parameters. The function should return both the inference results and an updated state that reflects any changes from processing the new data point.","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"The function takes three arguments:","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"state: A dictionary containing the current model state\nparameters: A dictionary containing the current model parameters\nevent: A dictionary containing the input data for inference","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"It should return a tuple containing:","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"A dictionary with the inference results\nA dictionary with the updated model state","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"Here's an example implementation:","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"function run_inference(state, parameters, event)\n    # Inference logic here\n    result = ...\n    new_state = ...\n    return result, new_state\nend","category":"page"},{"location":"manuals/how-to-add-a-model/#run_learning(state,-parameters,-events)","page":"How to add a model","title":"run_learning(state, parameters, events)","text":"","category":"section"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"This function implements the learning algorithm for your model and is called to update model parameters based on a batch of data. It processes a batch of observations to update the model parameters, typically using some form of gradient-based optimization or Bayesian updating. The function should return updated parameters, an updated state, and any relevant learning metrics or diagnostics.","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"The function takes three arguments:","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"state: A dictionary containing the current model state\nparameters: A dictionary containing the current model parameters\nevents: An array of dictionaries containing the batch of input data for learning","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"It should return a tuple containing:","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"A dictionary with the learning results (e.g., metrics, diagnostics)\nA dictionary with the updated model state\nA dictionary with the updated model parameters","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"Here's an example implementation:","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"function run_learning(state, parameters, events)\n    # Learning logic here\n    result = ...\n    new_state = ...\n    new_parameters = ...\n    return result, new_state, new_parameters\nend","category":"page"},{"location":"manuals/how-to-add-a-model/#Important-Considerations","page":"How to add a model","title":"Important Considerations","text":"","category":"section"},{"location":"manuals/how-to-add-a-model/#Dependencies","page":"How to add a model","title":"Dependencies","text":"","category":"section"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"Currently, if your model requires additional Julia packages, you must add them to the main Project.toml file of the RxInferServer repository. This is because the server uses the same environment to run all models.","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"note: Note\nThis limitation might be lifted in future versions with more flexible dependency management.","category":"page"},{"location":"manuals/how-to-add-a-model/#Serialization","page":"How to add a model","title":"Serialization","text":"","category":"section"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"Remember that state, parameters, and result objects are serialized to JSON when communicating with the server. RxInferServer uses the Serialization module to handle complex objects like matrices and distributions. For more details, see the Serialization manual and Request preferences documentation.","category":"page"},{"location":"manuals/how-to-add-a-model/#Next-Steps","page":"How to add a model","title":"Next Steps","text":"","category":"section"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"Now that you understand the basics of adding a model to RxInferServer, you might want to:","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"Explore the Model management API to understand how to interact with your model\nCheck out the Learning API for details on model training\nReview the Serialization guide for handling complex data types\nLook at existing models in the repository for practical examples","category":"page"},{"location":"manuals/how-to-add-a-model/","page":"How to add a model","title":"How to add a model","text":"","category":"page"},{"location":"openapi/Models/ModelInstanceState/","page":"ModelInstanceState","title":"ModelInstanceState","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/ModelInstanceState/#ModelInstanceState","page":"ModelInstanceState","title":"ModelInstanceState","text":"","category":"section"},{"location":"openapi/Models/ModelInstanceState/#Properties","page":"ModelInstanceState","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/ModelInstanceState/","page":"ModelInstanceState","title":"ModelInstanceState","text":"Name Type Description Notes\nstate Map An object containing the current state of the model instance.  May include arbitrary fields specific to the model. See the model documentation for more details. [default to null]","category":"page"},{"location":"openapi/Models/ModelInstanceState/","page":"ModelInstanceState","title":"ModelInstanceState","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/ModelInstanceState/","page":"ModelInstanceState","title":"ModelInstanceState","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/ModelInstanceState/","page":"ModelInstanceState","title":"ModelInstanceState","text":"","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Apis/ModelsApi/#ModelsApi","page":"ModelsApi","title":"ModelsApi","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"All URIs are relative to http://localhost:8000/v1","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Method HTTP request Description\nattach_events_to_episode POST /models/i/{instanceid}/episodes/{episodename}/attach-events Attach events to an episode\nattach_metadata_to_event POST /models/i/{instanceid}/episodes/{episodename}/events/{event_id}/attach-metadata Attach metadata to an event\ncreate_episode POST /models/i/{instance_id}/create-episode Create a new episode for a model instance\ncreate_model_instance POST /models/create-instance Create a new model instance\ndelete_episode DELETE /models/i/{instanceid}/episodes/{episodename} Delete an episode for a model\ndelete_model_instance DELETE /models/i/{instance_id} Delete a model instance\nget_available_model GET /models/available/{model_name} Get information about a specific model available for creation\nget_available_models GET /models/available Get models available for creation\nget_episode_info GET /models/i/{instanceid}/episodes/{episodename} Get episode information\nget_episodes GET /models/i/{instance_id}/episodes Get all episodes for a model instance\nget_model_instance GET /models/i/{instance_id} Get model instance information\nget_model_instanceParameters GET /models/i/{instance_id}/parameters Get the parameters of a model instance\nget_model_instanceState GET /models/i/{instance_id}/state Get the state of a model instance\nget_model_instances GET /models/instances Get all created model instances\nrun_inference POST /models/i/{instance_id}/infer Run inference\nrun_learning POST /models/i/{instance_id}/learn Learn from previous observations\nwipe_episode POST /models/i/{instanceid}/episodes/{episodename}/wipe Wipe all events from an episode","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"attachEventsToEpisode\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**attach_events_to_episode**","page":"ModelsApi","title":"attach_events_to_episode","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"SuccessResponse attach_events_to_episode(instance_id, episode_name, AttachEventsToEpisodeRequest)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Attach events to an episode","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Attach events to a specific episode for a model","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\ninstance_id UUID ID of the model instance to attach events to [default to null]\nepisode_name String Name of the episode to attach events to [default to null]\nAttachEventsToEpisodeRequest AttachEventsToEpisodeRequest  ","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"SuccessResponse","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: application/json\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"attachMetadataToEvent\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**attach_metadata_to_event**","page":"ModelsApi","title":"attach_metadata_to_event","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"SuccessResponse attach_metadata_to_event(instance_id, episode_name, event_id, AttachMetadataToEventRequest)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Attach metadata to an event","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Attach metadata to a specific event for a model","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-2","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\ninstance_id UUID ID of the model instance to attach metadata to [default to null]\nepisode_name String Name of the episode to attach metadata to [default to null]\nevent_id Long ID of the event to attach metadata to [default to null]\nAttachMetadataToEventRequest AttachMetadataToEventRequest  ","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-2","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"SuccessResponse","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-2","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-2","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: application/json\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"createEpisode\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**create_episode**","page":"ModelsApi","title":"create_episode","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"EpisodeInfo create_episode(instance_id, CreateEpisodeRequest)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Create a new episode for a model instance","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Create a new episode for a specific model instance. Note that the default episode is created automatically when the model instance is created.  When a new episode is created, it becomes the current episode for the model instance.","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-3","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\ninstance_id UUID ID of the model instance to create episode for [default to null]\nCreateEpisodeRequest CreateEpisodeRequest  ","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-3","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"EpisodeInfo","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-3","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-3","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: application/json\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"createModelInstance\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**create_model_instance**","page":"ModelsApi","title":"create_model_instance","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"CreateModelInstanceResponse create_model_instance(CreateModelInstanceRequest)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Create a new model instance","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Creates a new instance of a model with the specified configuration","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-4","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\nCreateModelInstanceRequest CreateModelInstanceRequest  ","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-4","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"CreateModelInstanceResponse","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-4","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-4","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: application/json\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"deleteEpisode\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**delete_episode**","page":"ModelsApi","title":"delete_episode","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"SuccessResponse delete_episode(instance_id, episode_name)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Delete an episode for a model","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Delete a specific episode for a model instance. Note that the default episode cannot be deleted, but you can wipe data from it. If the deleted episode was the current episode, the default episode will become the current episode.","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-5","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\ninstance_id UUID ID of the model instance to delete episode for [default to null]\nepisode_name String Name of the episode to delete [default to null]","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-5","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"SuccessResponse","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-5","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-5","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"deleteModelInstance\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**delete_model_instance**","page":"ModelsApi","title":"delete_model_instance","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"SuccessResponse delete_model_instance(instance_id)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Delete a model instance","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Delete a specific model instance by its ID","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-6","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\ninstance_id UUID ID of the model instance to delete [default to null]","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-6","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"SuccessResponse","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-6","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-6","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"getAvailableModel\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**get_available_model**","page":"ModelsApi","title":"get_available_model","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"AvailableModel get_available_model(model_name)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Get information about a specific model available for creation","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Retrieve detailed information about a specific model available for creation","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-7","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\nmodel_name String Name of the model to retrieve information for (including version identifier if applicable, e.g. \\&quot;BetaBernoulli-v1\\&quot;) [default to null]","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-7","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"AvailableModel","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-7","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-7","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"getAvailableModels\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**get_available_models**","page":"ModelsApi","title":"get_available_models","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"List get_available_models()","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Get models available for creation","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Retrieve the list of models available for creation for a given token. This list specifies names and available arguments for each model.  **Note** The list of available models might differ for different access tokens. For example, a token with only the \\&quot;user\\&quot; role might not have access to all models.","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-8","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"This endpoint does not need any parameter.","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-8","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"List","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-8","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-8","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"getEpisodeInfo\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**get_episode_info**","page":"ModelsApi","title":"get_episode_info","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"EpisodeInfo get_episode_info(instance_id, episode_name)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Get episode information","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Retrieve information about a specific episode of a model","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-9","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\ninstance_id UUID ID of the model instance to retrieve episode for [default to null]\nepisode_name String Name of the episode to retrieve [default to null]","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-9","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"EpisodeInfo","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-9","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-9","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"getEpisodes\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**get_episodes**","page":"ModelsApi","title":"get_episodes","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"List get_episodes(instance_id)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Get all episodes for a model instance","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Retrieve all episodes for a specific model instance","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-10","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\ninstance_id UUID ID of the model instance to retrieve episodes for [default to null]","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-10","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"List","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-10","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-10","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"getModelInstance\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**get_model_instance**","page":"ModelsApi","title":"get_model_instance","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ModelInstance get_model_instance(instance_id)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Get model instance information","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Retrieve detailed information about a specific model instance","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-11","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\ninstance_id UUID ID of the model instance to retrieve information for [default to null]","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-11","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ModelInstance","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-11","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-11","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"getModelInstanceParameters\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**get_model_instanceParameters**","page":"ModelsApi","title":"get_model_instanceParameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ModelInstanceParameters get_model_instanceParameters(instance_id)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Get the parameters of a model instance","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Retrieve the parameters of a specific model instance","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-12","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\ninstance_id UUID  [default to null]","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-12","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ModelInstanceParameters","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-12","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-12","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"getModelInstanceState\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**get_model_instanceState**","page":"ModelsApi","title":"get_model_instanceState","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ModelInstanceState get_model_instanceState(instance_id)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Get the state of a model instance","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Retrieve the state of a specific model instance","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-13","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\ninstance_id UUID ID of the model instance to retrieve state for [default to null]","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-13","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ModelInstanceState","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-13","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-13","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"getModelInstances\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**get_model_instances**","page":"ModelsApi","title":"get_model_instances","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"List get_model_instances()","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Get all created model instances","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Retrieve detailed information about all created model instances for a specific token","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-14","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"This endpoint does not need any parameter.","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-14","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"List","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-14","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-14","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"runInference\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**run_inference**","page":"ModelsApi","title":"run_inference","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"InferResponse run_inference(instance_id, InferRequest)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Run inference","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Run inference on a specific model instance","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-15","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\ninstance_id UUID ID of the model instance to run inference on [default to null]\nInferRequest InferRequest  ","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-15","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"InferResponse","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-15","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-15","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: application/json\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"runLearning\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**run_learning**","page":"ModelsApi","title":"run_learning","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"LearnResponse run_learning(instance_id, LearnRequest)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Learn from previous observations","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Learn from previous episodes for a specific model","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-16","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\ninstance_id UUID  [default to null]\nLearnRequest LearnRequest  ","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-16","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"LearnResponse","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-16","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-16","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: application/json\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"<a name=\"wipeEpisode\"></a>","category":"page"},{"location":"openapi/Apis/ModelsApi/#**wipe_episode**","page":"ModelsApi","title":"wipe_episode","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"SuccessResponse wipe_episode(instance_id, episode_name)","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Wipe all events from an episode","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Wipe all events from a specific episode for a model","category":"page"},{"location":"openapi/Apis/ModelsApi/#Parameters-17","page":"ModelsApi","title":"Parameters","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Name Type Description Notes\ninstance_id UUID ID of the model instance to wipe episode for [default to null]\nepisode_name String Name of the episode to wipe [default to null]","category":"page"},{"location":"openapi/Apis/ModelsApi/#Return-type-17","page":"ModelsApi","title":"Return type","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"SuccessResponse","category":"page"},{"location":"openapi/Apis/ModelsApi/#Authorization-17","page":"ModelsApi","title":"Authorization","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"ApiKeyAuth","category":"page"},{"location":"openapi/Apis/ModelsApi/#HTTP-request-headers-17","page":"ModelsApi","title":"HTTP request headers","text":"","category":"section"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"Content-Type: Not defined\nAccept: application/json","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Apis/ModelsApi/","page":"ModelsApi","title":"ModelsApi","text":"","category":"page"},{"location":"components/database/#database","page":"Database","title":"Database","text":"","category":"section"},{"location":"components/database/","page":"Database","title":"Database","text":"The Database module provides functionality for connecting to and interacting with MongoDB databases in RxInferServer.jl. This module uses the Mongoc.jl package to provide MongoDB integration. It implements a scoped connection pattern that ensures proper resource cleanup and provides convenient access to database resources.","category":"page"},{"location":"components/database/#Configuration","page":"Database","title":"Configuration","text":"","category":"section"},{"location":"components/database/","page":"Database","title":"Database","text":"Read more about the configuration of the database in the Database Configuration section.","category":"page"},{"location":"components/database/#SSL-Certificates","page":"Database","title":"SSL Certificates","text":"","category":"section"},{"location":"components/database/","page":"Database","title":"Database","text":"When connecting to MongoDB servers, it is often require to provide SSL certificates. RxInferServer will automatically try to find the certificates on your system and append them to the MongoDB connection string when MongoDB connection string does not contain the \"localhost\" or \"127.0.0.1\" address. You can manually set the SSL certificates file by setting the RxInferServer.Database.RXINFER_SERVER_SSL_CA_FILE environment variable to your own MongoDB connection string. RxInferServer also will not inject the TLS CA file if the MongoDB connection string already contains the tlsCAFile parameter.","category":"page"},{"location":"components/database/#API-Reference","page":"Database","title":"API Reference","text":"","category":"section"},{"location":"components/database/","page":"Database","title":"Database","text":"RxInferServer.Database.with_connection\nRxInferServer.Database.client\nRxInferServer.Database.database\nRxInferServer.Database.collection\nRxInferServer.Database.find_ssl_certificates\nRxInferServer.Database.inject_tls_ca_file\nRxInferServer.Database.RedactedURL\nRxInferServer.Database.DatabaseFailedConnectionError","category":"page"},{"location":"components/database/#RxInferServer.Database.with_connection","page":"Database","title":"RxInferServer.Database.with_connection","text":"with_connection(f::F; url::String = RXINFER_SERVER_MONGODB_URL(), database::String = RXINFER_SERVER_MONGODB_DATABASE(), check_connection::Bool = true) where {F}\n\nEstablishes a connection to the MongoDB database and executes the given function with the connection and database scoped. This function automatically handles cleanup of MongoDB resources by destroying the client when the provided function completes.\n\nArguments\n\nf::F: The function to execute with the database connection.\nurl::String: The URL of the MongoDB server.\ndatabase::String: The name of the database to use.\n\nwith_connection(f; url = RXINFER_SERVER_MONGODB_URL(), database = RXINFER_SERVER_MONGODB_DATABASE(), check_connection = true) do \n    # Your code here\n    client = Database.client()\n    database = Database.database()\n    collection = Database.collection(\"users\")\nend\n\nSee also RxInferServer.Database.client, RxInferServer.Database.database, RxInferServer.Database.collection.\n\n\n\n\n\n","category":"function"},{"location":"components/database/#RxInferServer.Database.client","page":"Database","title":"RxInferServer.Database.client","text":"client()::Mongoc.Client\n\nReturns the current database client. Throws an error if called outside of a with_connection block.\n\nSee also RxInferServer.Database.with_connection, RxInferServer.Database.database, RxInferServer.Database.collection.\n\n\n\n\n\n","category":"function"},{"location":"components/database/#RxInferServer.Database.database","page":"Database","title":"RxInferServer.Database.database","text":"database()::Mongoc.Database\n\nReturns the current database. Throws an error if called outside of a with_connection block.\n\nSee also RxInferServer.Database.client, RxInferServer.Database.with_connection, RxInferServer.Database.collection.\n\n\n\n\n\n","category":"function"},{"location":"components/database/#RxInferServer.Database.collection","page":"Database","title":"RxInferServer.Database.collection","text":"collection(name::String)::Mongoc.Collection\n\nReturns the collection with the given name from the current database. Throws an error if called outside of a with_connection block.\n\nSee also RxInferServer.Database.client, RxInferServer.Database.database, RxInferServer.Database.with_connection.\n\n\n\n\n\n","category":"function"},{"location":"components/database/#RxInferServer.Database.find_ssl_certificates","page":"Database","title":"RxInferServer.Database.find_ssl_certificates","text":"find_ssl_certificates()::Dict{String, Vector{String}}\n\nSearches for SSL certificates in default locations based on the operating system. Returns a dictionary with keys for different certificate types and values as vectors of found file paths. Certificate locations are prioritized with standard system locations first.\n\nThe function searches for:\n\nCA certificates (trusted root certificates)\nClient certificates (for client authentication)\n\nFor Linux systems, it prioritizes locations where certificates are installed via package managers (e.g., apt-get install ca-certificates).\n\nReturns\n\nDict{String, Vector{String}}: Dictionary with keys \"cacerts\" and \"clientcerts\"\n\n\n\n\n\n","category":"function"},{"location":"components/database/#RxInferServer.Database.inject_tls_ca_file","page":"Database","title":"RxInferServer.Database.inject_tls_ca_file","text":"inject_tls_ca_file(url::String)::String\n\nInjects the TLS CA file into the MongoDB connection URL if it's not already present. This function adds the tlsCAFile parameter to the URL in the following priority:\n\nUses RXINFERSERVERSSLCAFILE environment variable if set\nAutomatically finds SSL certificates if the environment variable is empty and the connection is not to localhost\nLeaves the URL unchanged if it already contains a tlsCAFile parameter or points to localhost/127.0.0.1\n\nArguments\n\nurl::String: The MongoDB connection URL\n\nReturns\n\nString: The MongoDB connection URL with tlsCAFile parameter added if needed\n\n\n\n\n\n","category":"function"},{"location":"components/database/#RxInferServer.Database.RedactedURL","page":"Database","title":"RxInferServer.Database.RedactedURL","text":"RedactedURL(url::String)\n\nA type that redacts the URL for logging and display purposes. Removes credentials and sensitive parameters from the URL.\n\n\n\n\n\n","category":"type"},{"location":"components/database/#RxInferServer.Database.DatabaseFailedConnectionError","page":"Database","title":"RxInferServer.Database.DatabaseFailedConnectionError","text":"DatabaseFailedConnectionError(url, cause) <: Exception\n\nAn error that occurs when the server fails to connect to the MongoDB database.\n\n\n\n\n\n","category":"type"},{"location":"components/database/","page":"Database","title":"Database","text":"","category":"page"},{"location":"api/request-preferences/#request-preferences-api","page":"Request preferences","title":"Request preferences","text":"","category":"section"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"using Test, HTTP, JSON\nusing RxInfer\n\nimport RxInferServer\nimport RxInferClientOpenAPI.OpenAPI.Clients: Client, set_header\nimport RxInferClientOpenAPI: ModelsApi, basepath, CreateModelInstanceRequest, create_model_instance, get_model_instance_state\n\nclient = Client(basepath(ModelsApi); headers = Dict(\n    \"Authorization\" => \"Bearer $(RxInferServer.DEFAULT_DEV_TOKEN):test-only\"\n))\n\nfunction hidden_get_matrix()\n    m = Dict(\"matrix\" => [1 2; 3 4])\n    req = HTTP.Request(\"POST\", \"test\", HTTP.Headers([\"Prefer\" => client.headers[\"Prefer\"]]))\n    response = RxInferServer.postprocess_response(req, m[\"matrix\"])\n    return JSON.parse(String(response.body))\nend\n\nfunction hidden_get_univariate_distribution()\n    d = Dict(\"distribution\" => NormalMeanVariance(1.0, 2.0))\n    req = HTTP.Request(\"POST\", \"test\", HTTP.Headers([\"Prefer\" => client.headers[\"Prefer\"]]))\n    response = RxInferServer.postprocess_response(req, d[\"distribution\"])\n    return JSON.parse(String(response.body))\nend\n\nfunction hidden_get_multivariate_distribution()\n    d = Dict(\"distribution\" => MvNormalMeanCovariance([1.0, 2.0], [3.0 0.0; 0.0 4.0]))\n    req = HTTP.Request(\"POST\", \"test\", HTTP.Headers([\"Prefer\" => client.headers[\"Prefer\"]]))\n    response = RxInferServer.postprocess_response(req, d[\"distribution\"])\n    return JSON.parse(String(response.body))\nend\n","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"This guide explores how to customize server responses using the Prefer header, a powerful HTTP mechanism that lets you control how the server processes and formats your requests.","category":"page"},{"location":"api/request-preferences/#Prefer-header","page":"Request preferences","title":"Prefer header","text":"","category":"section"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"The Prefer header is a standardized HTTP header that enables clients to express their preferences for request handling. It follows a simple key-value format and can include multiple preferences separated by commas. For more details, refer to the HTTP specification and MDN documentation.","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"Basic syntax:","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"Prefer: key=value","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"Multiple preferences:","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"Prefer: key1=value1,key2=value2","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"warning: Warning\nSpaces in the Prefer header are not supported. Including spaces will prevent the server from correctly parsing your preferences.","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"RxInferServer acknowledges applied preferences by setting the PreferenceApplied headers. Any unrecognized preferences are safely ignored.","category":"page"},{"location":"api/request-preferences/#Serialization-Preferences","page":"Request preferences","title":"Serialization Preferences","text":"","category":"section"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"RxInferServer offers flexible JSON serialization options through the Prefer header. These options allow you to control how your data is formatted in responses. For a comprehensive overview of serialization capabilities, see the Serialization guide.","category":"page"},{"location":"api/request-preferences/#Multi-dimensional-Array-Representation-Format","page":"Request preferences","title":"Multi-dimensional Array Representation Format","text":"","category":"section"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"The mdarray_repr preference controls how multi-dimensional arrays are structured in the response. This is particularly useful when working with matrices and tensors. For detailed information about available formats, see the Multi-dimensional Array Representation Format section.","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"Available options for mdarray_repr:","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"Value Corresponds to\ndict RxInferServer.Serialization.MultiDimensionalArrayRepr.Dict\ndict_type_and_shape RxInferServer.Serialization.MultiDimensionalArrayRepr.DictTypeAndShape\ndict_shape RxInferServer.Serialization.MultiDimensionalArrayRepr.DictShape\ndata RxInferServer.Serialization.MultiDimensionalArrayRepr.Data","category":"page"},{"location":"api/request-preferences/#Examples","page":"Request preferences","title":"Examples","text":"","category":"section"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"Here, how, as an example, a simple 2x2 matrix would change its representation depending on different preferences:","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"A = [1 2; 3 4]","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"set_header(client, \"Prefer\", \"mdarray_repr=dict\")\nA = hidden_get_matrix() #hide\nnothing #hide","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"A","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"set_header(client, \"Prefer\", \"mdarray_repr=dict_type_and_shape\")\nA = hidden_get_matrix() #hide\nnothing #hide","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"A","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"set_header(client, \"Prefer\", \"mdarray_repr=dict_shape\")\nA = hidden_get_matrix() #hide\nnothing #hide","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"A","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"set_header(client, \"Prefer\", \"mdarray_repr=data\")\nA = hidden_get_matrix() #hide\nnothing #hide","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"A","category":"page"},{"location":"api/request-preferences/#Multi-dimensional-Array-Data-Encoding","page":"Request preferences","title":"Multi-dimensional Array Data Encoding","text":"","category":"section"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"The mdarray_data preference determines how array data is encoded in the response. This is crucial for optimizing data transfer and ensuring compatibility with different client implementations. For more details, see the Multi-dimensional Array Data Encoding section.","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"Available options for mdarray_data:","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"Value Description\narray_of_arrays Corresponds to RxInferServer.Serialization.MultiDimensionalArrayData.ArrayOfArrays.\nreshape_column_major Corresponds to RxInferServer.Serialization.MultiDimensionalArrayData.ReshapeColumnMajor.\nreshape_row_major Corresponds to RxInferServer.Serialization.MultiDimensionalArrayData.ReshapeRowMajor.\ndiagonal Corresponds to RxInferServer.Serialization.MultiDimensionalArrayData.Diagonal.\nnone Corresponds to RxInferServer.Serialization.MultiDimensionalArrayData.None.","category":"page"},{"location":"api/request-preferences/#Examples-2","page":"Request preferences","title":"Examples","text":"","category":"section"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"Here, how, as an example, a simple 2x2 matrix would change its representation depending on different preferences:","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"A = [1 2; 3 4]","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"set_header(client, \"Prefer\", \"mdarray_data=array_of_arrays\")\nA = hidden_get_matrix() #hide\nnothing #hide","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"A","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"set_header(client, \"Prefer\", \"mdarray_data=reshape_column_major\")\nA = hidden_get_matrix() #hide\nnothing #hide","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"A","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"set_header(client, \"Prefer\", \"mdarray_data=reshape_row_major\")\nA = hidden_get_matrix() #hide\nnothing #hide","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"A","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"set_header(client, \"Prefer\", \"mdarray_data=diagonal\")\nA = hidden_get_matrix() #hide\nnothing #hide","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"A","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"set_header(client, \"Prefer\", \"mdarray_data=none\")\nA = hidden_get_matrix() #hide\nnothing #hide","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"It is possible to remove the matrices from the request entirely by setting the mdarray_data preference to none together with the mdarray_repr preference to data.","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"set_header(client, \"Prefer\", \"mdarray_repr=data,mdarray_data=none\")\nA = hidden_get_matrix() #hide\nnothing #hide","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"A","category":"page"},{"location":"api/request-preferences/#Distribution-Representation-Format","page":"Request preferences","title":"Distribution Representation Format","text":"","category":"section"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"The distributions_repr preference controls how probability distributions are structured in the response. This is particularly useful when working with statistical models. For detailed information about available formats, see the Distribution Representation Format section.","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"Available options for distributions_repr:","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"Value Corresponds to\ndict RxInferServer.Serialization.DistributionsRepr.Dict\ndict_type_and_tag RxInferServer.Serialization.DistributionsRepr.DictTypeAndTag\ndict_tag RxInferServer.Serialization.DistributionsRepr.DictTag\ndata RxInferServer.Serialization.DistributionsRepr.Data","category":"page"},{"location":"api/request-preferences/#Examples-3","page":"Request preferences","title":"Examples","text":"","category":"section"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"Here's how a normal distribution would change its representation depending on different preferences. We will show both the univariate and multivariate cases.","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"univariate_distribution = NormalMeanVariance(1.0, 2.0)","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"multivariate_distribution = MvNormalMeanCovariance([1.0, 2.0], [3.0 0.0; 0.0 4.0])","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"set_header(client, \"Prefer\", \"distributions_repr=dict\")\nunivariate_distribution = hidden_get_univariate_distribution() #hide\nmultivariate_distribution = hidden_get_multivariate_distribution() #hide\nnothing #hide","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"univariate_distribution","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"multivariate_distribution","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"set_header(client, \"Prefer\", \"distributions_repr=dict_type_and_tag\")\nunivariate_distribution = hidden_get_univariate_distribution() #hide\nmultivariate_distribution = hidden_get_multivariate_distribution() #hide\nnothing #hide","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"univariate_distribution","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"multivariate_distribution","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"set_header(client, \"Prefer\", \"distributions_repr=dict_tag\")\nunivariate_distribution = hidden_get_univariate_distribution() #hide\nmultivariate_distribution = hidden_get_multivariate_distribution() #hide\nnothing #hide","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"univariate_distribution","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"multivariate_distribution","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"set_header(client, \"Prefer\", \"distributions_repr=data\")\nunivariate_distribution = hidden_get_univariate_distribution() #hide\nmultivariate_distribution = hidden_get_multivariate_distribution() #hide\nnothing #hide","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"univariate_distribution","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"multivariate_distribution","category":"page"},{"location":"api/request-preferences/#Distribution-Data-Encoding","page":"Request preferences","title":"Distribution Data Encoding","text":"","category":"section"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"The distributions_data preference determines how distribution parameters are encoded in the response. This is crucial for ensuring compatibility with different client implementations and providing consistent parameterization. For more details, see the Distribution Data Encoding section.","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"Available options for distributions_data:","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"Value Description\nnamed_params Corresponds to RxInferServer.Serialization.DistributionsData.NamedParams.\nparams Corresponds to RxInferServer.Serialization.DistributionsData.Params.\nmean_cov Corresponds to RxInferServer.Serialization.DistributionsData.MeanCov.\nnone Corresponds to RxInferServer.Serialization.DistributionsData.None.","category":"page"},{"location":"api/request-preferences/#Examples-4","page":"Request preferences","title":"Examples","text":"","category":"section"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"Here's how different distributions would change their representation depending on different preferences:","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"set_header(client, \"Prefer\", \"distributions_data=named_params\")\nunivariate_distribution = hidden_get_univariate_distribution() #hide\nmultivariate_distribution = hidden_get_multivariate_distribution() #hide\nnothing #hide","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"univariate_distribution","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"multivariate_distribution","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"set_header(client, \"Prefer\", \"distributions_data=params\")\nunivariate_distribution = hidden_get_univariate_distribution() #hide\nmultivariate_distribution = hidden_get_multivariate_distribution() #hide\nnothing #hide","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"univariate_distribution","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"multivariate_distribution","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"set_header(client, \"Prefer\", \"distributions_data=mean_cov\")\nunivariate_distribution = hidden_get_univariate_distribution() #hide\nmultivariate_distribution = hidden_get_multivariate_distribution() #hide\nnothing #hide","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"univariate_distribution","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"multivariate_distribution","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"set_header(client, \"Prefer\", \"distributions_data=none\")\nunivariate_distribution = hidden_get_univariate_distribution() #hide\nmultivariate_distribution = hidden_get_multivariate_distribution() #hide\nnothing #hide","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"univariate_distribution","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"multivariate_distribution","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"It is possible to combine multiple preferences to achieve the desired output format. For example, to get just the mean and covariance parameters in a compact format:","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"set_header(client, \"Prefer\", \"distributions_repr=data,distributions_data=mean_cov\")\nunivariate_distribution = hidden_get_univariate_distribution() #hide\nmultivariate_distribution = hidden_get_multivariate_distribution() #hide\nnothing #hide","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"univariate_distribution","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"multivariate_distribution","category":"page"},{"location":"api/request-preferences/#Combination-of-preferences","page":"Request preferences","title":"Combination of preferences","text":"","category":"section"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"It is possible to combine multiple preferences to achieve the desired output format.  For example, we could request server to return a diagonal part of the covariance matrix of a multivariate distribution without extra metadata in the following way:","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"set_header(client, \"Prefer\", \"distributions_repr=data,distributions_data=mean_cov,mdarray_repr=data,mdarray_data=diagonal\")\nmultivariate_distribution = hidden_get_multivariate_distribution() #hide\n@test multivariate_distribution[\"mean\"] isa Vector && multivariate_distribution[\"mean\"] == [1.0, 2.0] #hide\n@test multivariate_distribution[\"cov\"] isa Vector && multivariate_distribution[\"cov\"] == [3.0, 4.0] #hide\nnothing #hide","category":"page"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"multivariate_distribution","category":"page"},{"location":"api/request-preferences/#API-Reference","page":"Request preferences","title":"API Reference","text":"","category":"section"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"RxInferServer.RequestPreferences","category":"page"},{"location":"api/request-preferences/#RxInferServer.RequestPreferences","page":"Request preferences","title":"RxInferServer.RequestPreferences","text":"RequestPreferences(req::HTTP.Request)\n\nA structure that is used to parse and store the request specific preferences from  the Prefer header.\n\n\n\n\n\n","category":"type"},{"location":"api/request-preferences/","page":"Request preferences","title":"Request preferences","text":"","category":"page"},{"location":"openapi/Models/SuccessResponse/","page":"SuccessResponse","title":"SuccessResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/SuccessResponse/#SuccessResponse","page":"SuccessResponse","title":"SuccessResponse","text":"","category":"section"},{"location":"openapi/Models/SuccessResponse/#Properties","page":"SuccessResponse","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/SuccessResponse/","page":"SuccessResponse","title":"SuccessResponse","text":"Name Type Description Notes\nmessage String Success message [default to null]","category":"page"},{"location":"openapi/Models/SuccessResponse/","page":"SuccessResponse","title":"SuccessResponse","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/SuccessResponse/","page":"SuccessResponse","title":"SuccessResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/SuccessResponse/","page":"SuccessResponse","title":"SuccessResponse","text":"","category":"page"},{"location":"openapi/Models/ModelInstance/","page":"ModelInstance","title":"ModelInstance","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/ModelInstance/#ModelInstance","page":"ModelInstance","title":"ModelInstance","text":"","category":"section"},{"location":"openapi/Models/ModelInstance/#Properties","page":"ModelInstance","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/ModelInstance/","page":"ModelInstance","title":"ModelInstance","text":"Name Type Description Notes\ninstance_id UUID Unique identifier for the created model instance [default to null]\nmodel_name String Name of the model (including version identifier if applicable, e.g. \\&quot;BetaBernoulli-v1\\&quot;) [default to null]\ncreated_at Date Timestamp of when the model was created [default to null]\ndescription String Description of the created model instance [default to null]\narguments Map Model-specific configuration arguments [default to null]\ncurrent_episode String Name of the current episode for this model [default to null]","category":"page"},{"location":"openapi/Models/ModelInstance/","page":"ModelInstance","title":"ModelInstance","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/ModelInstance/","page":"ModelInstance","title":"ModelInstance","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/ModelInstance/","page":"ModelInstance","title":"ModelInstance","text":"","category":"page"},{"location":"openapi/Models/AttachEventsToEpisodeRequest/","page":"AttachEventsToEpisodeRequest","title":"AttachEventsToEpisodeRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/AttachEventsToEpisodeRequest/#AttachEventsToEpisodeRequest","page":"AttachEventsToEpisodeRequest","title":"AttachEventsToEpisodeRequest","text":"","category":"section"},{"location":"openapi/Models/AttachEventsToEpisodeRequest/#Properties","page":"AttachEventsToEpisodeRequest","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/AttachEventsToEpisodeRequest/","page":"AttachEventsToEpisodeRequest","title":"AttachEventsToEpisodeRequest","text":"Name Type Description Notes\nevents List List of events to attach to the episode [default to null]","category":"page"},{"location":"openapi/Models/AttachEventsToEpisodeRequest/","page":"AttachEventsToEpisodeRequest","title":"AttachEventsToEpisodeRequest","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/AttachEventsToEpisodeRequest/","page":"AttachEventsToEpisodeRequest","title":"AttachEventsToEpisodeRequest","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/AttachEventsToEpisodeRequest/","page":"AttachEventsToEpisodeRequest","title":"AttachEventsToEpisodeRequest","text":"","category":"page"},{"location":"openapi/Models/InferResponse/","page":"InferResponse","title":"InferResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/InferResponse/#InferResponse","page":"InferResponse","title":"InferResponse","text":"","category":"section"},{"location":"openapi/Models/InferResponse/#Properties","page":"InferResponse","title":"Properties","text":"","category":"section"},{"location":"openapi/Models/InferResponse/","page":"InferResponse","title":"InferResponse","text":"Name Type Description Notes\nevent_id Long Unique identifier for the inference event [default to null]\nresults Map Model-specific results of the inference [default to null]\nerrors List List of errors that occurred during the inference call, but were not fatal and the inference was still completed successfully [default to null]","category":"page"},{"location":"openapi/Models/InferResponse/","page":"InferResponse","title":"InferResponse","text":"[Back to Model list] [Back to API list] [Back to README]","category":"page"},{"location":"openapi/Models/InferResponse/","page":"InferResponse","title":"InferResponse","text":"info: Auto-generated content\nThis page is automatically generated from the OpenAPI specification.","category":"page"},{"location":"openapi/Models/InferResponse/","page":"InferResponse","title":"InferResponse","text":"","category":"page"}]
}
